2022-02-11 00:04:31.082  WARN 22672 --- [main] ory$DuplicateJsonObjectContextCustomizer : 

Found multiple occurrences of org.json.JSONObject on the class path:

	jar:file:/E:/maven-repository/blog-enhancement-maven/blog-enhancement-repository/org/json/json/20170516/json-20170516.jar!/org/json/JSONObject.class
	jar:file:/E:/maven-repository/blog-enhancement-maven/blog-enhancement-repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar!/org/json/JSONObject.class

You may wish to exclude one of them to ensure predictable runtime behavior

2022-02-11 00:04:31.119  INFO 22672 --- [main] c.y.e.EnhancementApplicationTests        : Starting EnhancementApplicationTests using Java 1.8.0_311 on LAPTOP-7I9LVMS7 with PID 22672 (started by 刘文鉴 in E:\1-my-project\blog-enhancement)
2022-02-11 00:04:31.120 DEBUG 22672 --- [main] c.y.e.EnhancementApplicationTests        : Running with Spring Boot v2.5.0, Spring v5.3.7
2022-02-11 00:04:31.121  INFO 22672 --- [main] c.y.e.EnhancementApplicationTests        : No active profile set, falling back to default profiles: default
2022-02-11 00:04:32.358  WARN 22672 --- [main] c.b.m.core.metadata.TableInfoHelper      : Can not find table primary key in Class: "com.yi.enhancement.model.entity.UserAvatar".
2022-02-11 00:04:33.903  INFO 22672 --- [main] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2022-02-11 00:04:35.004  INFO 22672 --- [main] c.y.e.EnhancementApplicationTests        : Started EnhancementApplicationTests in 4.49 seconds (JVM running for 5.325)
2022-02-11 00:04:35.005  INFO 22672 --- [main] o.s.b.a.ApplicationAvailabilityBean      : Application availability state LivenessState changed to CORRECT
2022-02-11 00:04:35.006  INFO 22672 --- [main] o.s.b.a.ApplicationAvailabilityBean      : Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
2022-02-11 00:04:35.175  INFO 22672 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2022-02-11 00:04:35.406  INFO 22672 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2022-02-11 00:04:35.465 DEBUG 22672 --- [main] c.y.e.mapper.ArticleMapper.insert        : ==>  Preparing: INSERT INTO article ( id, title, content, views, create_time, deleted ) VALUES ( ?, ?, ?, ?, ?, ? )
2022-02-11 00:04:35.486 DEBUG 22672 --- [main] c.y.e.mapper.ArticleMapper.insert        : ==> Parameters: 123(Long), 1111(String), 123(String), 0(Integer), 2022-02-11 00:04:35.459(Timestamp), 0(Integer)
2022-02-11 00:04:35.500 DEBUG 22672 --- [main] c.y.e.mapper.ArticleMapper.insert        : <==    Updates: 1
2022-02-11 00:04:35.508 DEBUG 22672 --- [main] c.y.e.m.ArticleTagRelationMapper.insert  : ==>  Preparing: INSERT INTO article_tag_relation ( id, article_id, tag_id, deleted ) VALUES ( ?, ?, ?, ? )
2022-02-11 00:04:35.508 DEBUG 22672 --- [main] c.y.e.m.ArticleTagRelationMapper.insert  : ==> Parameters: 1491805303892201474(Long), 123(Long), 1(Long), 0(Integer)
2022-02-11 00:04:35.522 DEBUG 22672 --- [main] c.y.e.m.ArticleTagRelationMapper.insert  : <==    Updates: 1
2022-02-11 00:04:35.523 DEBUG 22672 --- [main] c.y.e.mapper.ArticleMapper.insert        : ==>  Preparing: INSERT INTO article ( id, title, content, views, create_time, deleted ) VALUES ( ?, ?, ?, ?, ?, ? )
2022-02-11 00:04:35.524 DEBUG 22672 --- [main] c.y.e.mapper.ArticleMapper.insert        : ==> Parameters: 124(Long), 11121(String), 123(String), 0(Integer), 2022-02-11 00:04:35.523(Timestamp), 0(Integer)
2022-02-11 00:04:35.537 DEBUG 22672 --- [main] c.y.e.mapper.ArticleMapper.insert        : <==    Updates: 1
2022-02-11 00:04:46.845  INFO 5712 --- [restartedMain] c.yi.enhancement.EnhancementApplication  : Starting EnhancementApplication using Java 1.8.0_311 on LAPTOP-7I9LVMS7 with PID 5712 (E:\1-my-project\blog-enhancement\target\classes started by 刘文鉴 in E:\1-my-project\blog-enhancement)
2022-02-11 00:04:46.847 DEBUG 5712 --- [restartedMain] c.yi.enhancement.EnhancementApplication  : Running with Spring Boot v2.5.0, Spring v5.3.7
2022-02-11 00:04:46.847  INFO 5712 --- [restartedMain] c.yi.enhancement.EnhancementApplication  : No active profile set, falling back to default profiles: default
2022-02-11 00:04:46.875  INFO 5712 --- [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in E:\maven-repository\blog-enhancement-maven\blog-enhancement-repository\com\sun\xml\bind\jaxb-impl\2.2.3-1\jaxb-impl-2.2.3-1.jar referenced one or more files that do not exist: file:/E:/maven-repository/blog-enhancement-maven/blog-enhancement-repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jaxb-api.jar,file:/E:/maven-repository/blog-enhancement-maven/blog-enhancement-repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/activation.jar,file:/E:/maven-repository/blog-enhancement-maven/blog-enhancement-repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jsr173_1.0_api.jar,file:/E:/maven-repository/blog-enhancement-maven/blog-enhancement-repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jaxb1-impl.jar
2022-02-11 00:04:46.875  INFO 5712 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-02-11 00:04:46.875  INFO 5712 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-02-11 00:04:47.691  INFO 5712 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8065 (http)
2022-02-11 00:04:47.698  INFO 5712 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2022-02-11 00:04:47.698  INFO 5712 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.46]
2022-02-11 00:04:47.781  INFO 5712 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2022-02-11 00:04:47.781  INFO 5712 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 905 ms
2022-02-11 00:04:48.123  WARN 5712 --- [restartedMain] c.b.m.core.metadata.TableInfoHelper      : Can not find table primary key in Class: "com.yi.enhancement.model.entity.UserAvatar".
2022-02-11 00:04:48.994  INFO 5712 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2022-02-11 00:04:49.372  INFO 5712 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2022-02-11 00:04:49.888  INFO 5712 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8065 (http) with context path ''
2022-02-11 00:04:50.131  INFO 5712 --- [restartedMain] c.yi.enhancement.EnhancementApplication  : Started EnhancementApplication in 3.83 seconds (JVM running for 4.942)
2022-02-11 00:04:50.132  INFO 5712 --- [restartedMain] o.s.b.a.ApplicationAvailabilityBean      : Application availability state LivenessState changed to CORRECT
2022-02-11 00:04:50.133  INFO 5712 --- [restartedMain] o.s.b.a.ApplicationAvailabilityBean      : Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
2022-02-11 00:05:04.764  INFO 5712 --- [http-nio-8065-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-02-11 00:05:04.765  INFO 5712 --- [http-nio-8065-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2022-02-11 00:05:04.765  INFO 5712 --- [http-nio-8065-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 0 ms
2022-02-11 00:05:04.834  INFO 5712 --- [http-nio-8065-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2022-02-11 00:05:05.012  INFO 5712 --- [http-nio-8065-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2022-02-11 00:05:05.017 DEBUG 5712 --- [http-nio-8065-exec-1] c.y.e.m.A.pageArticleDTOWeb_mpCount      : ==>  Preparing: SELECT COUNT(*) FROM article WHERE deleted = 0 AND status = ?
2022-02-11 00:05:05.032 DEBUG 5712 --- [http-nio-8065-exec-1] c.y.e.m.A.pageArticleDTOWeb_mpCount      : ==> Parameters: 1(Integer)
2022-02-11 00:05:05.055 DEBUG 5712 --- [http-nio-8065-exec-1] c.y.e.m.A.pageArticleDTOWeb_mpCount      : <==      Total: 1
2022-02-11 00:05:05.061 DEBUG 5712 --- [http-nio-8065-exec-1] c.y.e.m.ArticleMapper.pageArticleDTOWeb  : ==>  Preparing: SELECT id, title, create_time, update_time FROM article where deleted = 0 and status = ? ORDER BY update_time DESC LIMIT ?
2022-02-11 00:05:05.062 DEBUG 5712 --- [http-nio-8065-exec-1] c.y.e.m.ArticleMapper.pageArticleDTOWeb  : ==> Parameters: 1(Integer), 8(Long)
2022-02-11 00:05:05.072 DEBUG 5712 --- [http-nio-8065-exec-1] c.y.e.m.ArticleMapper.pageArticleDTOWeb  : <==      Total: 7
2022-02-11 00:05:05.077 DEBUG 5712 --- [http-nio-8065-exec-1] c.y.e.mapper.TagMapper.listTagVo         : ==>  Preparing: SELECT t1.*, COUNT(t2.article_id) article_counts FROM tag t1 LEFT JOIN article_tag_relation t2 ON t1.id = t2.tag_id and t2.deleted = 0 WHERE t1.deleted = 0 GROUP BY t1.id
2022-02-11 00:05:05.077 DEBUG 5712 --- [http-nio-8065-exec-1] c.y.e.mapper.TagMapper.listTagVo         : ==> Parameters: 
2022-02-11 00:05:05.088 DEBUG 5712 --- [http-nio-8065-exec-1] c.y.e.mapper.TagMapper.listTagVo         : <==      Total: 7
2022-02-11 00:05:05.092 DEBUG 5712 --- [http-nio-8065-exec-1] c.y.e.m.CategoryMapper.listCategoryVo    : ==>  Preparing: SELECT t1.id, t1.NAME, COUNT(t2.category_id) article_counts FROM category t1 LEFT JOIN article t2 ON t1.id = t2.category_id and t2.deleted = 0 where t1.deleted = 0 GROUP BY t1.id
2022-02-11 00:05:05.092 DEBUG 5712 --- [http-nio-8065-exec-1] c.y.e.m.CategoryMapper.listCategoryVo    : ==> Parameters: 
2022-02-11 00:05:05.101 DEBUG 5712 --- [http-nio-8065-exec-1] c.y.e.m.CategoryMapper.listCategoryVo    : <==      Total: 2
2022-02-11 00:05:05.105 DEBUG 5712 --- [http-nio-8065-exec-1] c.y.e.mapper.UserMapper.getUser          : ==>  Preparing: SELECT * FROM user WHERE deleted = 0 AND id = ?
2022-02-11 00:05:05.105 DEBUG 5712 --- [http-nio-8065-exec-1] c.y.e.mapper.UserMapper.getUser          : ==> Parameters: 1(Long)
2022-02-11 00:05:05.114 DEBUG 5712 --- [http-nio-8065-exec-1] c.y.e.mapper.UserMapper.getUser          : <==      Total: 1
2022-02-11 00:05:05.124 DEBUG 5712 --- [http-nio-8065-exec-1] c.y.e.mapper.UserMapper.updateById       : ==>  Preparing: UPDATE user SET qq=?, email=?, wechat=?, avatar=?, banner=?, nickname=?, user_signature=?, views=?, create_time=?, update_time=? WHERE id=? AND deleted=0
2022-02-11 00:05:05.127 DEBUG 5712 --- [http-nio-8065-exec-1] c.y.e.mapper.UserMapper.updateById       : ==> Parameters: 2044619214(String), lyric0926@163.com(String), 17805428855(String), https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2021-07-11/6a879a71-ca69-4ef3-a5f7-e8c6f67dd0b7Screenshot_20210424_204530.jpg(String), https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2021-09-16/fdb78008-7df7-4224-8d3a-c97268b9b066wallhaven-v95om8.jpg(String), lyric(String), 许多事情我们的确无能为力。
但即使如此我们也不该因此消沉不是吗？
乐观起来，忘记伤痛继续前行远比一次又一次揭开伤疤要好得多！(String), 14514(Integer), 2020-09-02 15:16:51.0(Timestamp), 2022-02-11 00:05:05.124(Timestamp), 1(Long)
2022-02-11 00:05:05.143 DEBUG 5712 --- [http-nio-8065-exec-1] c.y.e.mapper.UserMapper.updateById       : <==    Updates: 1
2022-02-11 00:05:05.147 DEBUG 5712 --- [http-nio-8065-exec-1] c.y.e.m.T.listTechnicalSupportVo         : ==>  Preparing: SELECT * FROM technical_support where deleted = 0
2022-02-11 00:05:05.148 DEBUG 5712 --- [http-nio-8065-exec-1] c.y.e.m.T.listTechnicalSupportVo         : ==> Parameters: 
2022-02-11 00:05:05.157 DEBUG 5712 --- [http-nio-8065-exec-1] c.y.e.m.T.listTechnicalSupportVo         : <==      Total: 3
2022-02-11 00:05:22.959 DEBUG 5712 --- [http-nio-8065-exec-2] c.y.e.m.A.pageArticleDTOWeb_mpCount      : ==>  Preparing: SELECT COUNT(*) FROM article WHERE deleted = 0 AND status = ?
2022-02-11 00:05:22.959 DEBUG 5712 --- [http-nio-8065-exec-2] c.y.e.m.A.pageArticleDTOWeb_mpCount      : ==> Parameters: 1(Integer)
2022-02-11 00:05:22.967 DEBUG 5712 --- [http-nio-8065-exec-2] c.y.e.m.A.pageArticleDTOWeb_mpCount      : <==      Total: 1
2022-02-11 00:05:22.967 DEBUG 5712 --- [http-nio-8065-exec-2] c.y.e.m.ArticleMapper.pageArticleDTOWeb  : ==>  Preparing: SELECT id, title, create_time, update_time FROM article where deleted = 0 and status = ? ORDER BY update_time DESC LIMIT ?
2022-02-11 00:05:22.968 DEBUG 5712 --- [http-nio-8065-exec-2] c.y.e.m.ArticleMapper.pageArticleDTOWeb  : ==> Parameters: 1(Integer), 10(Long)
2022-02-11 00:05:22.976 DEBUG 5712 --- [http-nio-8065-exec-2] c.y.e.m.ArticleMapper.pageArticleDTOWeb  : <==      Total: 7
2022-02-11 00:05:22.978 DEBUG 5712 --- [http-nio-8065-exec-2] c.y.e.m.ArticleMapper.listArticleVo      : ==>  Preparing: SELECT id, title, create_time FROM article where deleted = 0 ORDER BY create_time DESC
2022-02-11 00:05:22.978 DEBUG 5712 --- [http-nio-8065-exec-2] c.y.e.m.ArticleMapper.listArticleVo      : ==> Parameters: 
2022-02-11 00:05:22.988 DEBUG 5712 --- [http-nio-8065-exec-2] c.y.e.m.ArticleMapper.listArticleVo      : <==      Total: 8
2022-02-11 00:05:22.989 DEBUG 5712 --- [http-nio-8065-exec-2] c.y.e.mapper.TagMapper.listTagVo         : ==>  Preparing: SELECT t1.*, COUNT(t2.article_id) article_counts FROM tag t1 LEFT JOIN article_tag_relation t2 ON t1.id = t2.tag_id and t2.deleted = 0 WHERE t1.deleted = 0 GROUP BY t1.id
2022-02-11 00:05:22.989 DEBUG 5712 --- [http-nio-8065-exec-2] c.y.e.mapper.TagMapper.listTagVo         : ==> Parameters: 
2022-02-11 00:05:22.998 DEBUG 5712 --- [http-nio-8065-exec-2] c.y.e.mapper.TagMapper.listTagVo         : <==      Total: 7
2022-02-11 00:05:22.998 DEBUG 5712 --- [http-nio-8065-exec-2] c.y.e.m.CategoryMapper.listCategoryVo    : ==>  Preparing: SELECT t1.id, t1.NAME, COUNT(t2.category_id) article_counts FROM category t1 LEFT JOIN article t2 ON t1.id = t2.category_id and t2.deleted = 0 where t1.deleted = 0 GROUP BY t1.id
2022-02-11 00:05:22.998 DEBUG 5712 --- [http-nio-8065-exec-2] c.y.e.m.CategoryMapper.listCategoryVo    : ==> Parameters: 
2022-02-11 00:05:23.007 DEBUG 5712 --- [http-nio-8065-exec-2] c.y.e.m.CategoryMapper.listCategoryVo    : <==      Total: 2
2022-02-11 00:05:23.007 DEBUG 5712 --- [http-nio-8065-exec-2] c.y.e.mapper.UserMapper.getUser          : ==>  Preparing: SELECT * FROM user WHERE deleted = 0 AND id = ?
2022-02-11 00:05:23.007 DEBUG 5712 --- [http-nio-8065-exec-2] c.y.e.mapper.UserMapper.getUser          : ==> Parameters: 1(Long)
2022-02-11 00:05:23.015 DEBUG 5712 --- [http-nio-8065-exec-2] c.y.e.mapper.UserMapper.getUser          : <==      Total: 1
2022-02-11 00:05:23.017 DEBUG 5712 --- [http-nio-8065-exec-2] c.y.e.mapper.UserMapper.updateById       : ==>  Preparing: UPDATE user SET qq=?, email=?, wechat=?, avatar=?, banner=?, nickname=?, user_signature=?, views=?, create_time=?, update_time=? WHERE id=? AND deleted=0
2022-02-11 00:05:23.017 DEBUG 5712 --- [http-nio-8065-exec-2] c.y.e.mapper.UserMapper.updateById       : ==> Parameters: 2044619214(String), lyric0926@163.com(String), 17805428855(String), https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2021-07-11/6a879a71-ca69-4ef3-a5f7-e8c6f67dd0b7Screenshot_20210424_204530.jpg(String), https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2021-09-16/fdb78008-7df7-4224-8d3a-c97268b9b066wallhaven-v95om8.jpg(String), lyric(String), 许多事情我们的确无能为力。
但即使如此我们也不该因此消沉不是吗？
乐观起来，忘记伤痛继续前行远比一次又一次揭开伤疤要好得多！(String), 14515(Integer), 2020-09-02 15:16:51.0(Timestamp), 2022-02-11 00:05:23.017(Timestamp), 1(Long)
2022-02-11 00:05:23.034 DEBUG 5712 --- [http-nio-8065-exec-2] c.y.e.mapper.UserMapper.updateById       : <==    Updates: 1
2022-02-11 00:05:23.035 DEBUG 5712 --- [http-nio-8065-exec-2] c.y.e.m.T.listTechnicalSupportVo         : ==>  Preparing: SELECT * FROM technical_support where deleted = 0
2022-02-11 00:05:23.035 DEBUG 5712 --- [http-nio-8065-exec-2] c.y.e.m.T.listTechnicalSupportVo         : ==> Parameters: 
2022-02-11 00:05:23.043 DEBUG 5712 --- [http-nio-8065-exec-2] c.y.e.m.T.listTechnicalSupportVo         : <==      Total: 3
2022-02-11 00:08:45.965  INFO 40264 --- [restartedMain] c.yi.enhancement.EnhancementApplication  : Starting EnhancementApplication using Java 1.8.0_311 on LAPTOP-7I9LVMS7 with PID 40264 (E:\1-my-project\blog-enhancement\target\classes started by 刘文鉴 in E:\1-my-project\blog-enhancement)
2022-02-11 00:08:45.967 DEBUG 40264 --- [restartedMain] c.yi.enhancement.EnhancementApplication  : Running with Spring Boot v2.5.0, Spring v5.3.7
2022-02-11 00:08:45.967  INFO 40264 --- [restartedMain] c.yi.enhancement.EnhancementApplication  : No active profile set, falling back to default profiles: default
2022-02-11 00:08:45.995  INFO 40264 --- [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in E:\maven-repository\blog-enhancement-maven\blog-enhancement-repository\com\sun\xml\bind\jaxb-impl\2.2.3-1\jaxb-impl-2.2.3-1.jar referenced one or more files that do not exist: file:/E:/maven-repository/blog-enhancement-maven/blog-enhancement-repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jaxb-api.jar,file:/E:/maven-repository/blog-enhancement-maven/blog-enhancement-repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/activation.jar,file:/E:/maven-repository/blog-enhancement-maven/blog-enhancement-repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jsr173_1.0_api.jar,file:/E:/maven-repository/blog-enhancement-maven/blog-enhancement-repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jaxb1-impl.jar
2022-02-11 00:08:45.995  INFO 40264 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-02-11 00:08:45.996  INFO 40264 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-02-11 00:08:46.784  INFO 40264 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8065 (http)
2022-02-11 00:08:46.790  INFO 40264 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2022-02-11 00:08:46.791  INFO 40264 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.46]
2022-02-11 00:08:46.871  INFO 40264 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2022-02-11 00:08:46.871  INFO 40264 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 875 ms
2022-02-11 00:08:47.199  WARN 40264 --- [restartedMain] c.b.m.core.metadata.TableInfoHelper      : Can not find table primary key in Class: "com.yi.enhancement.model.entity.UserAvatar".
2022-02-11 00:08:48.066  INFO 40264 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2022-02-11 00:08:48.411  INFO 40264 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2022-02-11 00:08:48.915  INFO 40264 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8065 (http) with context path ''
2022-02-11 00:08:49.173  INFO 40264 --- [restartedMain] c.yi.enhancement.EnhancementApplication  : Started EnhancementApplication in 3.766 seconds (JVM running for 4.567)
2022-02-11 00:08:49.174  INFO 40264 --- [restartedMain] o.s.b.a.ApplicationAvailabilityBean      : Application availability state LivenessState changed to CORRECT
2022-02-11 00:08:49.175  INFO 40264 --- [restartedMain] o.s.b.a.ApplicationAvailabilityBean      : Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
2022-02-11 00:08:51.655  INFO 40264 --- [http-nio-8065-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-02-11 00:08:51.655  INFO 40264 --- [http-nio-8065-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2022-02-11 00:08:51.656  INFO 40264 --- [http-nio-8065-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2022-02-11 00:08:51.724  INFO 40264 --- [http-nio-8065-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2022-02-11 00:08:51.907  INFO 40264 --- [http-nio-8065-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2022-02-11 00:08:51.912 DEBUG 40264 --- [http-nio-8065-exec-1] c.y.e.m.A.pageArticleDTOWeb_mpCount      : ==>  Preparing: SELECT COUNT(*) FROM article WHERE deleted = 0 AND status = ?
2022-02-11 00:08:51.928 DEBUG 40264 --- [http-nio-8065-exec-1] c.y.e.m.A.pageArticleDTOWeb_mpCount      : ==> Parameters: 1(Integer)
2022-02-11 00:08:51.950 DEBUG 40264 --- [http-nio-8065-exec-1] c.y.e.m.A.pageArticleDTOWeb_mpCount      : <==      Total: 1
2022-02-11 00:08:51.957 DEBUG 40264 --- [http-nio-8065-exec-1] c.y.e.m.ArticleMapper.pageArticleDTOWeb  : ==>  Preparing: SELECT id, title, create_time, update_time FROM article where deleted = 0 and status = ? ORDER BY update_time DESC LIMIT ?
2022-02-11 00:08:51.957 DEBUG 40264 --- [http-nio-8065-exec-1] c.y.e.m.ArticleMapper.pageArticleDTOWeb  : ==> Parameters: 1(Integer), 10(Long)
2022-02-11 00:08:51.967 DEBUG 40264 --- [http-nio-8065-exec-1] c.y.e.m.ArticleMapper.pageArticleDTOWeb  : <==      Total: 7
2022-02-11 00:08:51.970 DEBUG 40264 --- [http-nio-8065-exec-1] c.y.e.m.ArticleMapper.listArticleVo      : ==>  Preparing: SELECT id, title, create_time FROM article where deleted = 0 and status = ? ORDER BY create_time DESC
2022-02-11 00:08:51.971 DEBUG 40264 --- [http-nio-8065-exec-1] c.y.e.m.ArticleMapper.listArticleVo      : ==> Parameters: 1(Integer)
2022-02-11 00:08:51.980 DEBUG 40264 --- [http-nio-8065-exec-1] c.y.e.m.ArticleMapper.listArticleVo      : <==      Total: 7
2022-02-11 00:08:51.985 DEBUG 40264 --- [http-nio-8065-exec-1] c.y.e.mapper.TagMapper.listTagVo         : ==>  Preparing: SELECT t1.*, COUNT(t2.article_id) article_counts FROM tag t1 LEFT JOIN article_tag_relation t2 ON t1.id = t2.tag_id and t2.deleted = 0 WHERE t1.deleted = 0 GROUP BY t1.id
2022-02-11 00:08:51.985 DEBUG 40264 --- [http-nio-8065-exec-1] c.y.e.mapper.TagMapper.listTagVo         : ==> Parameters: 
2022-02-11 00:08:51.995 DEBUG 40264 --- [http-nio-8065-exec-1] c.y.e.mapper.TagMapper.listTagVo         : <==      Total: 7
2022-02-11 00:08:51.999 DEBUG 40264 --- [http-nio-8065-exec-1] c.y.e.m.CategoryMapper.listCategoryVo    : ==>  Preparing: SELECT t1.id, t1.NAME, COUNT(t2.category_id) article_counts FROM category t1 LEFT JOIN article t2 ON t1.id = t2.category_id and t2.deleted = 0 where t1.deleted = 0 GROUP BY t1.id
2022-02-11 00:08:52.000 DEBUG 40264 --- [http-nio-8065-exec-1] c.y.e.m.CategoryMapper.listCategoryVo    : ==> Parameters: 
2022-02-11 00:08:52.008 DEBUG 40264 --- [http-nio-8065-exec-1] c.y.e.m.CategoryMapper.listCategoryVo    : <==      Total: 2
2022-02-11 00:08:52.012 DEBUG 40264 --- [http-nio-8065-exec-1] c.y.e.mapper.UserMapper.getUser          : ==>  Preparing: SELECT * FROM user WHERE deleted = 0 AND id = ?
2022-02-11 00:08:52.013 DEBUG 40264 --- [http-nio-8065-exec-1] c.y.e.mapper.UserMapper.getUser          : ==> Parameters: 1(Long)
2022-02-11 00:08:52.021 DEBUG 40264 --- [http-nio-8065-exec-1] c.y.e.mapper.UserMapper.getUser          : <==      Total: 1
2022-02-11 00:08:52.031 DEBUG 40264 --- [http-nio-8065-exec-1] c.y.e.mapper.UserMapper.updateById       : ==>  Preparing: UPDATE user SET qq=?, email=?, wechat=?, avatar=?, banner=?, nickname=?, user_signature=?, views=?, create_time=?, update_time=? WHERE id=? AND deleted=0
2022-02-11 00:08:52.035 DEBUG 40264 --- [http-nio-8065-exec-1] c.y.e.mapper.UserMapper.updateById       : ==> Parameters: 2044619214(String), lyric0926@163.com(String), 17805428855(String), https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2021-07-11/6a879a71-ca69-4ef3-a5f7-e8c6f67dd0b7Screenshot_20210424_204530.jpg(String), https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2021-09-16/fdb78008-7df7-4224-8d3a-c97268b9b066wallhaven-v95om8.jpg(String), lyric(String), 许多事情我们的确无能为力。
但即使如此我们也不该因此消沉不是吗？
乐观起来，忘记伤痛继续前行远比一次又一次揭开伤疤要好得多！(String), 14517(Integer), 2020-09-02 15:16:51.0(Timestamp), 2022-02-11 00:08:52.03(Timestamp), 1(Long)
2022-02-11 00:08:52.051 DEBUG 40264 --- [http-nio-8065-exec-1] c.y.e.mapper.UserMapper.updateById       : <==    Updates: 1
2022-02-11 00:08:52.055 DEBUG 40264 --- [http-nio-8065-exec-1] c.y.e.m.T.listTechnicalSupportVo         : ==>  Preparing: SELECT * FROM technical_support where deleted = 0
2022-02-11 00:08:52.056 DEBUG 40264 --- [http-nio-8065-exec-1] c.y.e.m.T.listTechnicalSupportVo         : ==> Parameters: 
2022-02-11 00:08:52.064 DEBUG 40264 --- [http-nio-8065-exec-1] c.y.e.m.T.listTechnicalSupportVo         : <==      Total: 3
2022-02-11 00:08:55.035 DEBUG 40264 --- [http-nio-8065-exec-3] c.y.e.m.A.pageArticleDTOWeb_mpCount      : ==>  Preparing: SELECT COUNT(*) FROM article WHERE deleted = 0 AND status = ?
2022-02-11 00:08:55.036 DEBUG 40264 --- [http-nio-8065-exec-3] c.y.e.m.A.pageArticleDTOWeb_mpCount      : ==> Parameters: 1(Integer)
2022-02-11 00:08:55.043 DEBUG 40264 --- [http-nio-8065-exec-3] c.y.e.m.A.pageArticleDTOWeb_mpCount      : <==      Total: 1
2022-02-11 00:08:55.043 DEBUG 40264 --- [http-nio-8065-exec-3] c.y.e.m.ArticleMapper.pageArticleDTOWeb  : ==>  Preparing: SELECT id, title, create_time, update_time FROM article where deleted = 0 and status = ? ORDER BY update_time DESC LIMIT ?
2022-02-11 00:08:55.044 DEBUG 40264 --- [http-nio-8065-exec-3] c.y.e.m.ArticleMapper.pageArticleDTOWeb  : ==> Parameters: 1(Integer), 8(Long)
2022-02-11 00:08:55.052 DEBUG 40264 --- [http-nio-8065-exec-3] c.y.e.m.ArticleMapper.pageArticleDTOWeb  : <==      Total: 7
2022-02-11 00:08:55.053 DEBUG 40264 --- [http-nio-8065-exec-3] c.y.e.mapper.TagMapper.listTagVo         : ==>  Preparing: SELECT t1.*, COUNT(t2.article_id) article_counts FROM tag t1 LEFT JOIN article_tag_relation t2 ON t1.id = t2.tag_id and t2.deleted = 0 WHERE t1.deleted = 0 GROUP BY t1.id
2022-02-11 00:08:55.053 DEBUG 40264 --- [http-nio-8065-exec-3] c.y.e.mapper.TagMapper.listTagVo         : ==> Parameters: 
2022-02-11 00:08:55.062 DEBUG 40264 --- [http-nio-8065-exec-3] c.y.e.mapper.TagMapper.listTagVo         : <==      Total: 7
2022-02-11 00:08:55.063 DEBUG 40264 --- [http-nio-8065-exec-3] c.y.e.m.CategoryMapper.listCategoryVo    : ==>  Preparing: SELECT t1.id, t1.NAME, COUNT(t2.category_id) article_counts FROM category t1 LEFT JOIN article t2 ON t1.id = t2.category_id and t2.deleted = 0 where t1.deleted = 0 GROUP BY t1.id
2022-02-11 00:08:55.063 DEBUG 40264 --- [http-nio-8065-exec-3] c.y.e.m.CategoryMapper.listCategoryVo    : ==> Parameters: 
2022-02-11 00:08:55.071 DEBUG 40264 --- [http-nio-8065-exec-3] c.y.e.m.CategoryMapper.listCategoryVo    : <==      Total: 2
2022-02-11 00:08:55.072 DEBUG 40264 --- [http-nio-8065-exec-3] c.y.e.mapper.UserMapper.getUser          : ==>  Preparing: SELECT * FROM user WHERE deleted = 0 AND id = ?
2022-02-11 00:08:55.072 DEBUG 40264 --- [http-nio-8065-exec-3] c.y.e.mapper.UserMapper.getUser          : ==> Parameters: 1(Long)
2022-02-11 00:08:55.079 DEBUG 40264 --- [http-nio-8065-exec-3] c.y.e.mapper.UserMapper.getUser          : <==      Total: 1
2022-02-11 00:08:55.081 DEBUG 40264 --- [http-nio-8065-exec-3] c.y.e.mapper.UserMapper.updateById       : ==>  Preparing: UPDATE user SET qq=?, email=?, wechat=?, avatar=?, banner=?, nickname=?, user_signature=?, views=?, create_time=?, update_time=? WHERE id=? AND deleted=0
2022-02-11 00:08:55.081 DEBUG 40264 --- [http-nio-8065-exec-3] c.y.e.mapper.UserMapper.updateById       : ==> Parameters: 2044619214(String), lyric0926@163.com(String), 17805428855(String), https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2021-07-11/6a879a71-ca69-4ef3-a5f7-e8c6f67dd0b7Screenshot_20210424_204530.jpg(String), https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2021-09-16/fdb78008-7df7-4224-8d3a-c97268b9b066wallhaven-v95om8.jpg(String), lyric(String), 许多事情我们的确无能为力。
但即使如此我们也不该因此消沉不是吗？
乐观起来，忘记伤痛继续前行远比一次又一次揭开伤疤要好得多！(String), 14518(Integer), 2020-09-02 15:16:51.0(Timestamp), 2022-02-11 00:08:55.081(Timestamp), 1(Long)
2022-02-11 00:08:55.098 DEBUG 40264 --- [http-nio-8065-exec-3] c.y.e.mapper.UserMapper.updateById       : <==    Updates: 1
2022-02-11 00:08:55.099 DEBUG 40264 --- [http-nio-8065-exec-3] c.y.e.m.T.listTechnicalSupportVo         : ==>  Preparing: SELECT * FROM technical_support where deleted = 0
2022-02-11 00:08:55.099 DEBUG 40264 --- [http-nio-8065-exec-3] c.y.e.m.T.listTechnicalSupportVo         : ==> Parameters: 
2022-02-11 00:08:55.106 DEBUG 40264 --- [http-nio-8065-exec-3] c.y.e.m.T.listTechnicalSupportVo         : <==      Total: 3
2022-02-11 00:14:22.278 DEBUG 40264 --- [http-nio-8065-exec-3] c.y.e.m.A.pageArticleDTOWeb_mpCount      : ==>  Preparing: SELECT COUNT(*) FROM article WHERE deleted = 0 AND status = ?
2022-02-11 00:14:22.279 DEBUG 40264 --- [http-nio-8065-exec-3] c.y.e.m.A.pageArticleDTOWeb_mpCount      : ==> Parameters: 1(Integer)
2022-02-11 00:14:22.287 DEBUG 40264 --- [http-nio-8065-exec-3] c.y.e.m.A.pageArticleDTOWeb_mpCount      : <==      Total: 1
2022-02-11 00:14:22.288 DEBUG 40264 --- [http-nio-8065-exec-3] c.y.e.m.ArticleMapper.pageArticleDTOWeb  : ==>  Preparing: SELECT id, title, create_time, update_time FROM article where deleted = 0 and status = ? ORDER BY update_time DESC LIMIT ?
2022-02-11 00:14:22.288 DEBUG 40264 --- [http-nio-8065-exec-3] c.y.e.m.ArticleMapper.pageArticleDTOWeb  : ==> Parameters: 1(Integer), 8(Long)
2022-02-11 00:14:22.297 DEBUG 40264 --- [http-nio-8065-exec-3] c.y.e.m.ArticleMapper.pageArticleDTOWeb  : <==      Total: 8
2022-02-11 00:14:22.297 DEBUG 40264 --- [http-nio-8065-exec-3] c.y.e.mapper.TagMapper.listTagVo         : ==>  Preparing: SELECT t1.*, COUNT(t2.article_id) article_counts FROM tag t1 LEFT JOIN article_tag_relation t2 ON t1.id = t2.tag_id and t2.deleted = 0 WHERE t1.deleted = 0 GROUP BY t1.id
2022-02-11 00:14:22.298 DEBUG 40264 --- [http-nio-8065-exec-3] c.y.e.mapper.TagMapper.listTagVo         : ==> Parameters: 
2022-02-11 00:14:22.308 DEBUG 40264 --- [http-nio-8065-exec-3] c.y.e.mapper.TagMapper.listTagVo         : <==      Total: 7
2022-02-11 00:14:22.309 DEBUG 40264 --- [http-nio-8065-exec-3] c.y.e.m.CategoryMapper.listCategoryVo    : ==>  Preparing: SELECT t1.id, t1.NAME, COUNT(t2.category_id) article_counts FROM category t1 LEFT JOIN article t2 ON t1.id = t2.category_id and t2.deleted = 0 where t1.deleted = 0 GROUP BY t1.id
2022-02-11 00:14:22.349 DEBUG 40264 --- [http-nio-8065-exec-3] c.y.e.m.CategoryMapper.listCategoryVo    : ==> Parameters: 
2022-02-11 00:14:22.357 DEBUG 40264 --- [http-nio-8065-exec-3] c.y.e.m.CategoryMapper.listCategoryVo    : <==      Total: 2
2022-02-11 00:14:22.358 DEBUG 40264 --- [http-nio-8065-exec-3] c.y.e.mapper.UserMapper.getUser          : ==>  Preparing: SELECT * FROM user WHERE deleted = 0 AND id = ?
2022-02-11 00:14:22.358 DEBUG 40264 --- [http-nio-8065-exec-3] c.y.e.mapper.UserMapper.getUser          : ==> Parameters: 1(Long)
2022-02-11 00:14:22.366 DEBUG 40264 --- [http-nio-8065-exec-3] c.y.e.mapper.UserMapper.getUser          : <==      Total: 1
2022-02-11 00:14:22.367 DEBUG 40264 --- [http-nio-8065-exec-3] c.y.e.mapper.UserMapper.updateById       : ==>  Preparing: UPDATE user SET qq=?, email=?, wechat=?, avatar=?, banner=?, nickname=?, user_signature=?, views=?, create_time=?, update_time=? WHERE id=? AND deleted=0
2022-02-11 00:14:22.368 DEBUG 40264 --- [http-nio-8065-exec-3] c.y.e.mapper.UserMapper.updateById       : ==> Parameters: 2044619214(String), lyric0926@163.com(String), 17805428855(String), https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2021-07-11/6a879a71-ca69-4ef3-a5f7-e8c6f67dd0b7Screenshot_20210424_204530.jpg(String), https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2021-09-16/fdb78008-7df7-4224-8d3a-c97268b9b066wallhaven-v95om8.jpg(String), lyric(String), 许多事情我们的确无能为力。
但即使如此我们也不该因此消沉不是吗？
乐观起来，忘记伤痛继续前行远比一次又一次揭开伤疤要好得多！(String), 14520(Integer), 2020-09-02 15:16:51.0(Timestamp), 2022-02-11 00:14:22.367(Timestamp), 1(Long)
2022-02-11 00:14:22.385 DEBUG 40264 --- [http-nio-8065-exec-3] c.y.e.mapper.UserMapper.updateById       : <==    Updates: 1
2022-02-11 00:14:22.386 DEBUG 40264 --- [http-nio-8065-exec-3] c.y.e.m.T.listTechnicalSupportVo         : ==>  Preparing: SELECT * FROM technical_support where deleted = 0
2022-02-11 00:14:22.386 DEBUG 40264 --- [http-nio-8065-exec-3] c.y.e.m.T.listTechnicalSupportVo         : ==> Parameters: 
2022-02-11 00:14:22.394 DEBUG 40264 --- [http-nio-8065-exec-3] c.y.e.m.T.listTechnicalSupportVo         : <==      Total: 3
2022-02-11 00:14:40.481 DEBUG 40264 --- [http-nio-8065-exec-1] c.y.e.m.A.pageArticleDTOWeb_mpCount      : ==>  Preparing: SELECT COUNT(*) FROM article WHERE deleted = 0 AND status = ?
2022-02-11 00:14:40.481 DEBUG 40264 --- [http-nio-8065-exec-1] c.y.e.m.A.pageArticleDTOWeb_mpCount      : ==> Parameters: 1(Integer)
2022-02-11 00:14:40.489 DEBUG 40264 --- [http-nio-8065-exec-1] c.y.e.m.A.pageArticleDTOWeb_mpCount      : <==      Total: 1
2022-02-11 00:14:40.489 DEBUG 40264 --- [http-nio-8065-exec-1] c.y.e.m.ArticleMapper.pageArticleDTOWeb  : ==>  Preparing: SELECT id, title, create_time, update_time FROM article where deleted = 0 and status = ? ORDER BY update_time DESC LIMIT ?
2022-02-11 00:14:40.490 DEBUG 40264 --- [http-nio-8065-exec-1] c.y.e.m.ArticleMapper.pageArticleDTOWeb  : ==> Parameters: 1(Integer), 8(Long)
2022-02-11 00:14:40.498 DEBUG 40264 --- [http-nio-8065-exec-1] c.y.e.m.ArticleMapper.pageArticleDTOWeb  : <==      Total: 7
2022-02-11 00:14:40.498 DEBUG 40264 --- [http-nio-8065-exec-1] c.y.e.mapper.TagMapper.listTagVo         : ==>  Preparing: SELECT t1.*, COUNT(t2.article_id) article_counts FROM tag t1 LEFT JOIN article_tag_relation t2 ON t1.id = t2.tag_id and t2.deleted = 0 WHERE t1.deleted = 0 GROUP BY t1.id
2022-02-11 00:14:40.499 DEBUG 40264 --- [http-nio-8065-exec-1] c.y.e.mapper.TagMapper.listTagVo         : ==> Parameters: 
2022-02-11 00:14:40.507 DEBUG 40264 --- [http-nio-8065-exec-1] c.y.e.mapper.TagMapper.listTagVo         : <==      Total: 7
2022-02-11 00:14:40.507 DEBUG 40264 --- [http-nio-8065-exec-1] c.y.e.m.CategoryMapper.listCategoryVo    : ==>  Preparing: SELECT t1.id, t1.NAME, COUNT(t2.category_id) article_counts FROM category t1 LEFT JOIN article t2 ON t1.id = t2.category_id and t2.deleted = 0 where t1.deleted = 0 GROUP BY t1.id
2022-02-11 00:14:40.508 DEBUG 40264 --- [http-nio-8065-exec-1] c.y.e.m.CategoryMapper.listCategoryVo    : ==> Parameters: 
2022-02-11 00:14:40.515 DEBUG 40264 --- [http-nio-8065-exec-1] c.y.e.m.CategoryMapper.listCategoryVo    : <==      Total: 2
2022-02-11 00:14:40.516 DEBUG 40264 --- [http-nio-8065-exec-1] c.y.e.mapper.UserMapper.getUser          : ==>  Preparing: SELECT * FROM user WHERE deleted = 0 AND id = ?
2022-02-11 00:14:40.516 DEBUG 40264 --- [http-nio-8065-exec-1] c.y.e.mapper.UserMapper.getUser          : ==> Parameters: 1(Long)
2022-02-11 00:14:40.524 DEBUG 40264 --- [http-nio-8065-exec-1] c.y.e.mapper.UserMapper.getUser          : <==      Total: 1
2022-02-11 00:14:40.524 DEBUG 40264 --- [http-nio-8065-exec-1] c.y.e.mapper.UserMapper.updateById       : ==>  Preparing: UPDATE user SET qq=?, email=?, wechat=?, avatar=?, banner=?, nickname=?, user_signature=?, views=?, create_time=?, update_time=? WHERE id=? AND deleted=0
2022-02-11 00:14:40.525 DEBUG 40264 --- [http-nio-8065-exec-1] c.y.e.mapper.UserMapper.updateById       : ==> Parameters: 2044619214(String), lyric0926@163.com(String), 17805428855(String), https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2021-07-11/6a879a71-ca69-4ef3-a5f7-e8c6f67dd0b7Screenshot_20210424_204530.jpg(String), https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2021-09-16/fdb78008-7df7-4224-8d3a-c97268b9b066wallhaven-v95om8.jpg(String), lyric(String), 许多事情我们的确无能为力。
但即使如此我们也不该因此消沉不是吗？
乐观起来，忘记伤痛继续前行远比一次又一次揭开伤疤要好得多！(String), 14521(Integer), 2020-09-02 15:16:51.0(Timestamp), 2022-02-11 00:14:40.524(Timestamp), 1(Long)
2022-02-11 00:14:40.542 DEBUG 40264 --- [http-nio-8065-exec-1] c.y.e.mapper.UserMapper.updateById       : <==    Updates: 1
2022-02-11 00:14:40.542 DEBUG 40264 --- [http-nio-8065-exec-1] c.y.e.m.T.listTechnicalSupportVo         : ==>  Preparing: SELECT * FROM technical_support where deleted = 0
2022-02-11 00:14:40.542 DEBUG 40264 --- [http-nio-8065-exec-1] c.y.e.m.T.listTechnicalSupportVo         : ==> Parameters: 
2022-02-11 00:14:40.550 DEBUG 40264 --- [http-nio-8065-exec-1] c.y.e.m.T.listTechnicalSupportVo         : <==      Total: 3
2022-02-11 00:16:16.341 DEBUG 40264 --- [http-nio-8065-exec-4] c.y.e.m.A.pageArticleDTOWeb_mpCount      : ==>  Preparing: SELECT COUNT(*) FROM article WHERE deleted = 0 AND status = ?
2022-02-11 00:16:16.342 DEBUG 40264 --- [http-nio-8065-exec-4] c.y.e.m.A.pageArticleDTOWeb_mpCount      : ==> Parameters: 1(Integer)
2022-02-11 00:16:16.349 DEBUG 40264 --- [http-nio-8065-exec-4] c.y.e.m.A.pageArticleDTOWeb_mpCount      : <==      Total: 1
2022-02-11 00:16:16.350 DEBUG 40264 --- [http-nio-8065-exec-4] c.y.e.m.ArticleMapper.pageArticleDTOWeb  : ==>  Preparing: SELECT id, title, create_time, update_time FROM article where deleted = 0 and status = ? ORDER BY update_time DESC LIMIT ?
2022-02-11 00:16:16.350 DEBUG 40264 --- [http-nio-8065-exec-4] c.y.e.m.ArticleMapper.pageArticleDTOWeb  : ==> Parameters: 1(Integer), 8(Long)
2022-02-11 00:16:16.358 DEBUG 40264 --- [http-nio-8065-exec-4] c.y.e.m.ArticleMapper.pageArticleDTOWeb  : <==      Total: 7
2022-02-11 00:16:16.358 DEBUG 40264 --- [http-nio-8065-exec-4] c.y.e.mapper.TagMapper.listTagVo         : ==>  Preparing: SELECT t1.*, COUNT(t2.article_id) article_counts FROM tag t1 LEFT JOIN article_tag_relation t2 ON t1.id = t2.tag_id and t2.deleted = 0 WHERE t1.deleted = 0 GROUP BY t1.id
2022-02-11 00:16:16.359 DEBUG 40264 --- [http-nio-8065-exec-4] c.y.e.mapper.TagMapper.listTagVo         : ==> Parameters: 
2022-02-11 00:16:16.367 DEBUG 40264 --- [http-nio-8065-exec-4] c.y.e.mapper.TagMapper.listTagVo         : <==      Total: 7
2022-02-11 00:16:16.367 DEBUG 40264 --- [http-nio-8065-exec-4] c.y.e.m.CategoryMapper.listCategoryVo    : ==>  Preparing: SELECT t1.id, t1.NAME, COUNT(t2.category_id) article_counts FROM category t1 LEFT JOIN article t2 ON t1.id = t2.category_id and t2.deleted = 0 where t1.deleted = 0 GROUP BY t1.id
2022-02-11 00:16:16.367 DEBUG 40264 --- [http-nio-8065-exec-4] c.y.e.m.CategoryMapper.listCategoryVo    : ==> Parameters: 
2022-02-11 00:16:16.375 DEBUG 40264 --- [http-nio-8065-exec-4] c.y.e.m.CategoryMapper.listCategoryVo    : <==      Total: 2
2022-02-11 00:16:16.375 DEBUG 40264 --- [http-nio-8065-exec-4] c.y.e.mapper.UserMapper.getUser          : ==>  Preparing: SELECT * FROM user WHERE deleted = 0 AND id = ?
2022-02-11 00:16:16.376 DEBUG 40264 --- [http-nio-8065-exec-4] c.y.e.mapper.UserMapper.getUser          : ==> Parameters: 1(Long)
2022-02-11 00:16:16.384 DEBUG 40264 --- [http-nio-8065-exec-4] c.y.e.mapper.UserMapper.getUser          : <==      Total: 1
2022-02-11 00:16:16.385 DEBUG 40264 --- [http-nio-8065-exec-4] c.y.e.mapper.UserMapper.updateById       : ==>  Preparing: UPDATE user SET qq=?, email=?, wechat=?, avatar=?, banner=?, nickname=?, user_signature=?, views=?, create_time=?, update_time=? WHERE id=? AND deleted=0
2022-02-11 00:16:16.386 DEBUG 40264 --- [http-nio-8065-exec-4] c.y.e.mapper.UserMapper.updateById       : ==> Parameters: 2044619214(String), lyric0926@163.com(String), 17805428855(String), https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2021-07-11/6a879a71-ca69-4ef3-a5f7-e8c6f67dd0b7Screenshot_20210424_204530.jpg(String), https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2021-09-16/fdb78008-7df7-4224-8d3a-c97268b9b066wallhaven-v95om8.jpg(String), lyric(String), 许多事情我们的确无能为力。
但即使如此我们也不该因此消沉不是吗？
乐观起来，忘记伤痛继续前行远比一次又一次揭开伤疤要好得多！(String), 14522(Integer), 2020-09-02 15:16:51.0(Timestamp), 2022-02-11 00:16:16.385(Timestamp), 1(Long)
2022-02-11 00:16:16.402 DEBUG 40264 --- [http-nio-8065-exec-4] c.y.e.mapper.UserMapper.updateById       : <==    Updates: 1
2022-02-11 00:16:16.403 DEBUG 40264 --- [http-nio-8065-exec-4] c.y.e.m.T.listTechnicalSupportVo         : ==>  Preparing: SELECT * FROM technical_support where deleted = 0
2022-02-11 00:16:16.403 DEBUG 40264 --- [http-nio-8065-exec-4] c.y.e.m.T.listTechnicalSupportVo         : ==> Parameters: 
2022-02-11 00:16:16.411 DEBUG 40264 --- [http-nio-8065-exec-4] c.y.e.m.T.listTechnicalSupportVo         : <==      Total: 3
2022-02-11 00:16:16.724 DEBUG 40264 --- [http-nio-8065-exec-6] c.y.e.m.A.pageArticleDTOWeb_mpCount      : ==>  Preparing: SELECT COUNT(*) FROM article WHERE deleted = 0 AND status = ?
2022-02-11 00:16:16.724 DEBUG 40264 --- [http-nio-8065-exec-6] c.y.e.m.A.pageArticleDTOWeb_mpCount      : ==> Parameters: 1(Integer)
2022-02-11 00:16:16.732 DEBUG 40264 --- [http-nio-8065-exec-6] c.y.e.m.A.pageArticleDTOWeb_mpCount      : <==      Total: 1
2022-02-11 00:16:16.733 DEBUG 40264 --- [http-nio-8065-exec-6] c.y.e.m.ArticleMapper.pageArticleDTOWeb  : ==>  Preparing: SELECT id, title, create_time, update_time FROM article where deleted = 0 and status = ? ORDER BY update_time DESC LIMIT ?
2022-02-11 00:16:16.733 DEBUG 40264 --- [http-nio-8065-exec-6] c.y.e.m.ArticleMapper.pageArticleDTOWeb  : ==> Parameters: 1(Integer), 8(Long)
2022-02-11 00:16:16.741 DEBUG 40264 --- [http-nio-8065-exec-6] c.y.e.m.ArticleMapper.pageArticleDTOWeb  : <==      Total: 7
2022-02-11 00:16:16.741 DEBUG 40264 --- [http-nio-8065-exec-6] c.y.e.mapper.TagMapper.listTagVo         : ==>  Preparing: SELECT t1.*, COUNT(t2.article_id) article_counts FROM tag t1 LEFT JOIN article_tag_relation t2 ON t1.id = t2.tag_id and t2.deleted = 0 WHERE t1.deleted = 0 GROUP BY t1.id
2022-02-11 00:16:16.741 DEBUG 40264 --- [http-nio-8065-exec-6] c.y.e.mapper.TagMapper.listTagVo         : ==> Parameters: 
2022-02-11 00:16:16.749 DEBUG 40264 --- [http-nio-8065-exec-6] c.y.e.mapper.TagMapper.listTagVo         : <==      Total: 7
2022-02-11 00:16:16.750 DEBUG 40264 --- [http-nio-8065-exec-6] c.y.e.m.CategoryMapper.listCategoryVo    : ==>  Preparing: SELECT t1.id, t1.NAME, COUNT(t2.category_id) article_counts FROM category t1 LEFT JOIN article t2 ON t1.id = t2.category_id and t2.deleted = 0 where t1.deleted = 0 GROUP BY t1.id
2022-02-11 00:16:16.750 DEBUG 40264 --- [http-nio-8065-exec-6] c.y.e.m.CategoryMapper.listCategoryVo    : ==> Parameters: 
2022-02-11 00:16:16.758 DEBUG 40264 --- [http-nio-8065-exec-6] c.y.e.m.CategoryMapper.listCategoryVo    : <==      Total: 2
2022-02-11 00:16:16.758 DEBUG 40264 --- [http-nio-8065-exec-6] c.y.e.mapper.UserMapper.getUser          : ==>  Preparing: SELECT * FROM user WHERE deleted = 0 AND id = ?
2022-02-11 00:16:16.759 DEBUG 40264 --- [http-nio-8065-exec-6] c.y.e.mapper.UserMapper.getUser          : ==> Parameters: 1(Long)
2022-02-11 00:16:16.766 DEBUG 40264 --- [http-nio-8065-exec-6] c.y.e.mapper.UserMapper.getUser          : <==      Total: 1
2022-02-11 00:16:16.767 DEBUG 40264 --- [http-nio-8065-exec-6] c.y.e.mapper.UserMapper.updateById       : ==>  Preparing: UPDATE user SET qq=?, email=?, wechat=?, avatar=?, banner=?, nickname=?, user_signature=?, views=?, create_time=?, update_time=? WHERE id=? AND deleted=0
2022-02-11 00:16:16.767 DEBUG 40264 --- [http-nio-8065-exec-6] c.y.e.mapper.UserMapper.updateById       : ==> Parameters: 2044619214(String), lyric0926@163.com(String), 17805428855(String), https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2021-07-11/6a879a71-ca69-4ef3-a5f7-e8c6f67dd0b7Screenshot_20210424_204530.jpg(String), https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2021-09-16/fdb78008-7df7-4224-8d3a-c97268b9b066wallhaven-v95om8.jpg(String), lyric(String), 许多事情我们的确无能为力。
但即使如此我们也不该因此消沉不是吗？
乐观起来，忘记伤痛继续前行远比一次又一次揭开伤疤要好得多！(String), 14523(Integer), 2020-09-02 15:16:51.0(Timestamp), 2022-02-11 00:16:16.767(Timestamp), 1(Long)
2022-02-11 00:16:16.783 DEBUG 40264 --- [http-nio-8065-exec-6] c.y.e.mapper.UserMapper.updateById       : <==    Updates: 1
2022-02-11 00:16:16.793 DEBUG 40264 --- [http-nio-8065-exec-6] c.y.e.m.T.listTechnicalSupportVo         : ==>  Preparing: SELECT * FROM technical_support where deleted = 0
2022-02-11 00:16:16.793 DEBUG 40264 --- [http-nio-8065-exec-6] c.y.e.m.T.listTechnicalSupportVo         : ==> Parameters: 
2022-02-11 00:16:16.815 DEBUG 40264 --- [http-nio-8065-exec-6] c.y.e.m.T.listTechnicalSupportVo         : <==      Total: 3
2022-02-11 00:16:24.668 DEBUG 40264 --- [http-nio-8065-exec-4] c.y.e.m.A.pageArticleDTOWeb_mpCount      : ==>  Preparing: SELECT COUNT(*) FROM article WHERE deleted = 0 AND status = ?
2022-02-11 00:16:24.668 DEBUG 40264 --- [http-nio-8065-exec-4] c.y.e.m.A.pageArticleDTOWeb_mpCount      : ==> Parameters: 1(Integer)
2022-02-11 00:16:24.675 DEBUG 40264 --- [http-nio-8065-exec-4] c.y.e.m.A.pageArticleDTOWeb_mpCount      : <==      Total: 1
2022-02-11 00:16:24.675 DEBUG 40264 --- [http-nio-8065-exec-4] c.y.e.m.ArticleMapper.pageArticleDTOWeb  : ==>  Preparing: SELECT id, title, create_time, update_time FROM article where deleted = 0 and status = ? ORDER BY update_time DESC LIMIT ?
2022-02-11 00:16:24.675 DEBUG 40264 --- [http-nio-8065-exec-4] c.y.e.m.ArticleMapper.pageArticleDTOWeb  : ==> Parameters: 1(Integer), 8(Long)
2022-02-11 00:16:24.683 DEBUG 40264 --- [http-nio-8065-exec-4] c.y.e.m.ArticleMapper.pageArticleDTOWeb  : <==      Total: 7
2022-02-11 00:16:24.683 DEBUG 40264 --- [http-nio-8065-exec-4] c.y.e.mapper.TagMapper.listTagVo         : ==>  Preparing: SELECT t1.*, COUNT(t2.article_id) article_counts FROM tag t1 LEFT JOIN article_tag_relation t2 ON t1.id = t2.tag_id and t2.deleted = 0 WHERE t1.deleted = 0 GROUP BY t1.id
2022-02-11 00:16:24.683 DEBUG 40264 --- [http-nio-8065-exec-4] c.y.e.mapper.TagMapper.listTagVo         : ==> Parameters: 
2022-02-11 00:16:24.691 DEBUG 40264 --- [http-nio-8065-exec-4] c.y.e.mapper.TagMapper.listTagVo         : <==      Total: 7
2022-02-11 00:16:24.691 DEBUG 40264 --- [http-nio-8065-exec-4] c.y.e.m.CategoryMapper.listCategoryVo    : ==>  Preparing: SELECT t1.id, t1.NAME, COUNT(t2.category_id) article_counts FROM category t1 LEFT JOIN article t2 ON t1.id = t2.category_id and t2.deleted = 0 where t1.deleted = 0 GROUP BY t1.id
2022-02-11 00:16:24.692 DEBUG 40264 --- [http-nio-8065-exec-4] c.y.e.m.CategoryMapper.listCategoryVo    : ==> Parameters: 
2022-02-11 00:16:24.699 DEBUG 40264 --- [http-nio-8065-exec-4] c.y.e.m.CategoryMapper.listCategoryVo    : <==      Total: 2
2022-02-11 00:16:24.699 DEBUG 40264 --- [http-nio-8065-exec-4] c.y.e.mapper.UserMapper.getUser          : ==>  Preparing: SELECT * FROM user WHERE deleted = 0 AND id = ?
2022-02-11 00:16:24.700 DEBUG 40264 --- [http-nio-8065-exec-4] c.y.e.mapper.UserMapper.getUser          : ==> Parameters: 1(Long)
2022-02-11 00:16:24.707 DEBUG 40264 --- [http-nio-8065-exec-4] c.y.e.mapper.UserMapper.getUser          : <==      Total: 1
2022-02-11 00:16:24.708 DEBUG 40264 --- [http-nio-8065-exec-4] c.y.e.mapper.UserMapper.updateById       : ==>  Preparing: UPDATE user SET qq=?, email=?, wechat=?, avatar=?, banner=?, nickname=?, user_signature=?, views=?, create_time=?, update_time=? WHERE id=? AND deleted=0
2022-02-11 00:16:24.709 DEBUG 40264 --- [http-nio-8065-exec-4] c.y.e.mapper.UserMapper.updateById       : ==> Parameters: 2044619214(String), lyric0926@163.com(String), 17805428855(String), https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2021-07-11/6a879a71-ca69-4ef3-a5f7-e8c6f67dd0b7Screenshot_20210424_204530.jpg(String), https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2021-09-16/fdb78008-7df7-4224-8d3a-c97268b9b066wallhaven-v95om8.jpg(String), lyric(String), 许多事情我们的确无能为力。
但即使如此我们也不该因此消沉不是吗？
乐观起来，忘记伤痛继续前行远比一次又一次揭开伤疤要好得多！(String), 14524(Integer), 2020-09-02 15:16:51.0(Timestamp), 2022-02-11 00:16:24.708(Timestamp), 1(Long)
2022-02-11 00:16:24.724 DEBUG 40264 --- [http-nio-8065-exec-4] c.y.e.mapper.UserMapper.updateById       : <==    Updates: 1
2022-02-11 00:16:24.725 DEBUG 40264 --- [http-nio-8065-exec-4] c.y.e.m.T.listTechnicalSupportVo         : ==>  Preparing: SELECT * FROM technical_support where deleted = 0
2022-02-11 00:16:24.725 DEBUG 40264 --- [http-nio-8065-exec-4] c.y.e.m.T.listTechnicalSupportVo         : ==> Parameters: 
2022-02-11 00:16:24.732 DEBUG 40264 --- [http-nio-8065-exec-4] c.y.e.m.T.listTechnicalSupportVo         : <==      Total: 3
2022-02-11 00:16:31.211 DEBUG 40264 --- [http-nio-8065-exec-6] c.y.e.m.A.pageArticleDTOWeb_mpCount      : ==>  Preparing: SELECT COUNT(*) FROM article WHERE deleted = 0 AND status = ?
2022-02-11 00:16:31.211 DEBUG 40264 --- [http-nio-8065-exec-6] c.y.e.m.A.pageArticleDTOWeb_mpCount      : ==> Parameters: 1(Integer)
2022-02-11 00:16:31.218 DEBUG 40264 --- [http-nio-8065-exec-6] c.y.e.m.A.pageArticleDTOWeb_mpCount      : <==      Total: 1
2022-02-11 00:16:31.219 DEBUG 40264 --- [http-nio-8065-exec-6] c.y.e.m.ArticleMapper.pageArticleDTOWeb  : ==>  Preparing: SELECT id, title, create_time, update_time FROM article where deleted = 0 and status = ? ORDER BY update_time DESC LIMIT ?
2022-02-11 00:16:31.219 DEBUG 40264 --- [http-nio-8065-exec-6] c.y.e.m.ArticleMapper.pageArticleDTOWeb  : ==> Parameters: 1(Integer), 8(Long)
2022-02-11 00:16:31.227 DEBUG 40264 --- [http-nio-8065-exec-6] c.y.e.m.ArticleMapper.pageArticleDTOWeb  : <==      Total: 7
2022-02-11 00:16:31.227 DEBUG 40264 --- [http-nio-8065-exec-6] c.y.e.mapper.TagMapper.listTagVo         : ==>  Preparing: SELECT t1.*, COUNT(t2.article_id) article_counts FROM tag t1 LEFT JOIN article_tag_relation t2 ON t1.id = t2.tag_id and t2.deleted = 0 WHERE t1.deleted = 0 GROUP BY t1.id
2022-02-11 00:16:31.227 DEBUG 40264 --- [http-nio-8065-exec-6] c.y.e.mapper.TagMapper.listTagVo         : ==> Parameters: 
2022-02-11 00:16:31.235 DEBUG 40264 --- [http-nio-8065-exec-6] c.y.e.mapper.TagMapper.listTagVo         : <==      Total: 7
2022-02-11 00:16:31.235 DEBUG 40264 --- [http-nio-8065-exec-6] c.y.e.m.CategoryMapper.listCategoryVo    : ==>  Preparing: SELECT t1.id, t1.NAME, COUNT(t2.category_id) article_counts FROM category t1 LEFT JOIN article t2 ON t1.id = t2.category_id and t2.deleted = 0 where t1.deleted = 0 GROUP BY t1.id
2022-02-11 00:16:31.235 DEBUG 40264 --- [http-nio-8065-exec-6] c.y.e.m.CategoryMapper.listCategoryVo    : ==> Parameters: 
2022-02-11 00:16:31.243 DEBUG 40264 --- [http-nio-8065-exec-6] c.y.e.m.CategoryMapper.listCategoryVo    : <==      Total: 2
2022-02-11 00:16:31.243 DEBUG 40264 --- [http-nio-8065-exec-6] c.y.e.mapper.UserMapper.getUser          : ==>  Preparing: SELECT * FROM user WHERE deleted = 0 AND id = ?
2022-02-11 00:16:31.243 DEBUG 40264 --- [http-nio-8065-exec-6] c.y.e.mapper.UserMapper.getUser          : ==> Parameters: 1(Long)
2022-02-11 00:16:31.251 DEBUG 40264 --- [http-nio-8065-exec-6] c.y.e.mapper.UserMapper.getUser          : <==      Total: 1
2022-02-11 00:16:31.251 DEBUG 40264 --- [http-nio-8065-exec-6] c.y.e.mapper.UserMapper.updateById       : ==>  Preparing: UPDATE user SET qq=?, email=?, wechat=?, avatar=?, banner=?, nickname=?, user_signature=?, views=?, create_time=?, update_time=? WHERE id=? AND deleted=0
2022-02-11 00:16:31.253 DEBUG 40264 --- [http-nio-8065-exec-6] c.y.e.mapper.UserMapper.updateById       : ==> Parameters: 2044619214(String), lyric0926@163.com(String), 17805428855(String), https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2021-07-11/6a879a71-ca69-4ef3-a5f7-e8c6f67dd0b7Screenshot_20210424_204530.jpg(String), https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2021-09-16/fdb78008-7df7-4224-8d3a-c97268b9b066wallhaven-v95om8.jpg(String), lyric(String), 许多事情我们的确无能为力。
但即使如此我们也不该因此消沉不是吗？
乐观起来，忘记伤痛继续前行远比一次又一次揭开伤疤要好得多！(String), 14525(Integer), 2020-09-02 15:16:51.0(Timestamp), 2022-02-11 00:16:31.251(Timestamp), 1(Long)
2022-02-11 00:16:31.268 DEBUG 40264 --- [http-nio-8065-exec-6] c.y.e.mapper.UserMapper.updateById       : <==    Updates: 1
2022-02-11 00:16:31.269 DEBUG 40264 --- [http-nio-8065-exec-6] c.y.e.m.T.listTechnicalSupportVo         : ==>  Preparing: SELECT * FROM technical_support where deleted = 0
2022-02-11 00:16:31.269 DEBUG 40264 --- [http-nio-8065-exec-6] c.y.e.m.T.listTechnicalSupportVo         : ==> Parameters: 
2022-02-11 00:16:31.276 DEBUG 40264 --- [http-nio-8065-exec-6] c.y.e.m.T.listTechnicalSupportVo         : <==      Total: 3
2022-02-11 10:57:09.536  INFO 21928 --- [restartedMain] c.yi.enhancement.EnhancementApplication  : Starting EnhancementApplication using Java 1.8.0_311 on LAPTOP-7I9LVMS7 with PID 21928 (E:\1-my-project\blog-enhancement\target\classes started by 刘文鉴 in E:\1-my-project\blog-enhancement)
2022-02-11 10:57:09.536 DEBUG 21928 --- [restartedMain] c.yi.enhancement.EnhancementApplication  : Running with Spring Boot v2.5.0, Spring v5.3.7
2022-02-11 10:57:09.536  INFO 21928 --- [restartedMain] c.yi.enhancement.EnhancementApplication  : No active profile set, falling back to default profiles: default
2022-02-11 10:57:09.567  INFO 21928 --- [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in E:\maven-repository\blog-enhancement-maven\blog-enhancement-repository\com\sun\xml\bind\jaxb-impl\2.2.3-1\jaxb-impl-2.2.3-1.jar referenced one or more files that do not exist: file:/E:/maven-repository/blog-enhancement-maven/blog-enhancement-repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jaxb-api.jar,file:/E:/maven-repository/blog-enhancement-maven/blog-enhancement-repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/activation.jar,file:/E:/maven-repository/blog-enhancement-maven/blog-enhancement-repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jsr173_1.0_api.jar,file:/E:/maven-repository/blog-enhancement-maven/blog-enhancement-repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jaxb1-impl.jar
2022-02-11 10:57:09.567  INFO 21928 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-02-11 10:57:09.567  INFO 21928 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-02-11 10:57:10.497  INFO 21928 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8065 (http)
2022-02-11 10:57:10.513  INFO 21928 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2022-02-11 10:57:10.513  INFO 21928 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.46]
2022-02-11 10:57:10.591  INFO 21928 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2022-02-11 10:57:10.591  INFO 21928 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1024 ms
2022-02-11 10:57:10.978  WARN 21928 --- [restartedMain] c.b.m.core.metadata.TableInfoHelper      : Can not find table primary key in Class: "com.yi.enhancement.model.entity.UserAvatar".
2022-02-11 10:57:11.912  INFO 21928 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2022-02-11 10:57:12.319  INFO 21928 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2022-02-11 10:57:12.836  INFO 21928 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8065 (http) with context path ''
2022-02-11 10:57:13.088  INFO 21928 --- [restartedMain] c.yi.enhancement.EnhancementApplication  : Started EnhancementApplication in 4.208 seconds (JVM running for 5.566)
2022-02-11 10:57:13.088  INFO 21928 --- [restartedMain] o.s.b.a.ApplicationAvailabilityBean      : Application availability state LivenessState changed to CORRECT
2022-02-11 10:57:13.088  INFO 21928 --- [restartedMain] o.s.b.a.ApplicationAvailabilityBean      : Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
2022-02-11 10:57:43.253  INFO 21928 --- [http-nio-8065-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-02-11 10:57:43.254  INFO 21928 --- [http-nio-8065-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2022-02-11 10:57:43.255  INFO 21928 --- [http-nio-8065-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 0 ms
2022-02-11 10:57:43.323  INFO 21928 --- [http-nio-8065-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2022-02-11 10:57:43.516  INFO 21928 --- [http-nio-8065-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2022-02-11 10:57:43.522 DEBUG 21928 --- [http-nio-8065-exec-1] c.y.e.m.A.pageArticleDTOWeb_mpCount      : ==>  Preparing: SELECT COUNT(*) FROM article WHERE deleted = 0 AND status = ?
2022-02-11 10:57:43.536 DEBUG 21928 --- [http-nio-8065-exec-1] c.y.e.m.A.pageArticleDTOWeb_mpCount      : ==> Parameters: 1(Integer)
2022-02-11 10:57:43.561 DEBUG 21928 --- [http-nio-8065-exec-1] c.y.e.m.A.pageArticleDTOWeb_mpCount      : <==      Total: 1
2022-02-11 10:57:43.567 DEBUG 21928 --- [http-nio-8065-exec-1] c.y.e.m.ArticleMapper.pageArticleDTOWeb  : ==>  Preparing: SELECT id, title, create_time, update_time FROM article where deleted = 0 and status = ? ORDER BY update_time DESC LIMIT ?
2022-02-11 10:57:43.567 DEBUG 21928 --- [http-nio-8065-exec-1] c.y.e.m.ArticleMapper.pageArticleDTOWeb  : ==> Parameters: 1(Integer), 8(Long)
2022-02-11 10:57:43.576 DEBUG 21928 --- [http-nio-8065-exec-1] c.y.e.m.ArticleMapper.pageArticleDTOWeb  : <==      Total: 7
2022-02-11 10:57:43.581 DEBUG 21928 --- [http-nio-8065-exec-1] c.y.e.mapper.TagMapper.listTagVo         : ==>  Preparing: SELECT t1.*, COUNT(t2.article_id) article_counts FROM tag t1 LEFT JOIN article_tag_relation t2 ON t1.id = t2.tag_id and t2.deleted = 0 WHERE t1.deleted = 0 GROUP BY t1.id
2022-02-11 10:57:43.582 DEBUG 21928 --- [http-nio-8065-exec-1] c.y.e.mapper.TagMapper.listTagVo         : ==> Parameters: 
2022-02-11 10:57:43.592 DEBUG 21928 --- [http-nio-8065-exec-1] c.y.e.mapper.TagMapper.listTagVo         : <==      Total: 7
2022-02-11 10:57:43.596 DEBUG 21928 --- [http-nio-8065-exec-1] c.y.e.m.CategoryMapper.listCategoryVo    : ==>  Preparing: SELECT t1.id, t1.NAME, COUNT(t2.category_id) article_counts FROM category t1 LEFT JOIN article t2 ON t1.id = t2.category_id and t2.deleted = 0 and t2.status != 0 where t1.deleted = 0 GROUP BY t1.id
2022-02-11 10:57:43.596 DEBUG 21928 --- [http-nio-8065-exec-1] c.y.e.m.CategoryMapper.listCategoryVo    : ==> Parameters: 
2022-02-11 10:57:43.606 DEBUG 21928 --- [http-nio-8065-exec-1] c.y.e.m.CategoryMapper.listCategoryVo    : <==      Total: 2
2022-02-11 10:57:43.610 DEBUG 21928 --- [http-nio-8065-exec-1] c.y.e.mapper.UserMapper.getUser          : ==>  Preparing: SELECT * FROM user WHERE deleted = 0 AND id = ?
2022-02-11 10:57:43.610 DEBUG 21928 --- [http-nio-8065-exec-1] c.y.e.mapper.UserMapper.getUser          : ==> Parameters: 1(Long)
2022-02-11 10:57:43.619 DEBUG 21928 --- [http-nio-8065-exec-1] c.y.e.mapper.UserMapper.getUser          : <==      Total: 1
2022-02-11 10:57:43.629 DEBUG 21928 --- [http-nio-8065-exec-1] c.y.e.mapper.UserMapper.updateById       : ==>  Preparing: UPDATE user SET qq=?, email=?, wechat=?, avatar=?, banner=?, nickname=?, user_signature=?, views=?, create_time=?, update_time=? WHERE id=? AND deleted=0
2022-02-11 10:57:43.633 DEBUG 21928 --- [http-nio-8065-exec-1] c.y.e.mapper.UserMapper.updateById       : ==> Parameters: 2044619214(String), lyric0926@163.com(String), 17805428855(String), https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2021-07-11/6a879a71-ca69-4ef3-a5f7-e8c6f67dd0b7Screenshot_20210424_204530.jpg(String), https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2021-09-16/fdb78008-7df7-4224-8d3a-c97268b9b066wallhaven-v95om8.jpg(String), lyric(String), 许多事情我们的确无能为力。
但即使如此我们也不该因此消沉不是吗？
乐观起来，忘记伤痛继续前行远比一次又一次揭开伤疤要好得多！(String), 14575(Integer), 2020-09-02 15:16:51.0(Timestamp), 2022-02-11 10:57:43.629(Timestamp), 1(Long)
2022-02-11 10:57:43.650 DEBUG 21928 --- [http-nio-8065-exec-1] c.y.e.mapper.UserMapper.updateById       : <==    Updates: 1
2022-02-11 10:57:43.654 DEBUG 21928 --- [http-nio-8065-exec-1] c.y.e.m.T.listTechnicalSupportVo         : ==>  Preparing: SELECT * FROM technical_support where deleted = 0
2022-02-11 10:57:43.654 DEBUG 21928 --- [http-nio-8065-exec-1] c.y.e.m.T.listTechnicalSupportVo         : ==> Parameters: 
2022-02-11 10:57:43.663 DEBUG 21928 --- [http-nio-8065-exec-1] c.y.e.m.T.listTechnicalSupportVo         : <==      Total: 3
2022-02-11 10:58:01.980 DEBUG 21928 --- [http-nio-8065-exec-5] c.y.e.m.A.pageArticleDTOWeb_mpCount      : ==>  Preparing: SELECT COUNT(*) FROM article WHERE deleted = 0 AND status = ?
2022-02-11 10:58:01.980 DEBUG 21928 --- [http-nio-8065-exec-5] c.y.e.m.A.pageArticleDTOWeb_mpCount      : ==> Parameters: 1(Integer)
2022-02-11 10:58:01.988 DEBUG 21928 --- [http-nio-8065-exec-5] c.y.e.m.A.pageArticleDTOWeb_mpCount      : <==      Total: 1
2022-02-11 10:58:01.989 DEBUG 21928 --- [http-nio-8065-exec-5] c.y.e.m.ArticleMapper.pageArticleDTOWeb  : ==>  Preparing: SELECT id, title, create_time, update_time FROM article where deleted = 0 and status = ? ORDER BY update_time DESC LIMIT ?
2022-02-11 10:58:01.989 DEBUG 21928 --- [http-nio-8065-exec-5] c.y.e.m.ArticleMapper.pageArticleDTOWeb  : ==> Parameters: 1(Integer), 8(Long)
2022-02-11 10:58:01.998 DEBUG 21928 --- [http-nio-8065-exec-5] c.y.e.m.ArticleMapper.pageArticleDTOWeb  : <==      Total: 7
2022-02-11 10:58:01.999 DEBUG 21928 --- [http-nio-8065-exec-5] c.y.e.mapper.TagMapper.listTagVo         : ==>  Preparing: SELECT t1.*, COUNT(t2.article_id) article_counts FROM tag t1 LEFT JOIN article_tag_relation t2 ON t1.id = t2.tag_id and t2.deleted = 0 WHERE t1.deleted = 0 GROUP BY t1.id
2022-02-11 10:58:01.999 DEBUG 21928 --- [http-nio-8065-exec-5] c.y.e.mapper.TagMapper.listTagVo         : ==> Parameters: 
2022-02-11 10:58:02.008 DEBUG 21928 --- [http-nio-8065-exec-5] c.y.e.mapper.TagMapper.listTagVo         : <==      Total: 7
2022-02-11 10:58:02.009 DEBUG 21928 --- [http-nio-8065-exec-5] c.y.e.m.CategoryMapper.listCategoryVo    : ==>  Preparing: SELECT t1.id, t1.NAME, COUNT(t2.category_id) article_counts FROM category t1 LEFT JOIN article t2 ON t1.id = t2.category_id and t2.deleted = 0 and t2.status != 0 where t1.deleted = 0 GROUP BY t1.id
2022-02-11 10:58:02.009 DEBUG 21928 --- [http-nio-8065-exec-5] c.y.e.m.CategoryMapper.listCategoryVo    : ==> Parameters: 
2022-02-11 10:58:02.017 DEBUG 21928 --- [http-nio-8065-exec-5] c.y.e.m.CategoryMapper.listCategoryVo    : <==      Total: 2
2022-02-11 10:58:02.018 DEBUG 21928 --- [http-nio-8065-exec-5] c.y.e.mapper.UserMapper.getUser          : ==>  Preparing: SELECT * FROM user WHERE deleted = 0 AND id = ?
2022-02-11 10:58:02.018 DEBUG 21928 --- [http-nio-8065-exec-5] c.y.e.mapper.UserMapper.getUser          : ==> Parameters: 1(Long)
2022-02-11 10:58:02.026 DEBUG 21928 --- [http-nio-8065-exec-5] c.y.e.mapper.UserMapper.getUser          : <==      Total: 1
2022-02-11 10:58:02.028 DEBUG 21928 --- [http-nio-8065-exec-5] c.y.e.mapper.UserMapper.updateById       : ==>  Preparing: UPDATE user SET qq=?, email=?, wechat=?, avatar=?, banner=?, nickname=?, user_signature=?, views=?, create_time=?, update_time=? WHERE id=? AND deleted=0
2022-02-11 10:58:02.028 DEBUG 21928 --- [http-nio-8065-exec-5] c.y.e.mapper.UserMapper.updateById       : ==> Parameters: 2044619214(String), lyric0926@163.com(String), 17805428855(String), https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2021-07-11/6a879a71-ca69-4ef3-a5f7-e8c6f67dd0b7Screenshot_20210424_204530.jpg(String), https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2021-09-16/fdb78008-7df7-4224-8d3a-c97268b9b066wallhaven-v95om8.jpg(String), lyric(String), 许多事情我们的确无能为力。
但即使如此我们也不该因此消沉不是吗？
乐观起来，忘记伤痛继续前行远比一次又一次揭开伤疤要好得多！(String), 14576(Integer), 2020-09-02 15:16:51.0(Timestamp), 2022-02-11 10:58:02.028(Timestamp), 1(Long)
2022-02-11 10:58:02.046 DEBUG 21928 --- [http-nio-8065-exec-5] c.y.e.mapper.UserMapper.updateById       : <==    Updates: 1
2022-02-11 10:58:02.047 DEBUG 21928 --- [http-nio-8065-exec-5] c.y.e.m.T.listTechnicalSupportVo         : ==>  Preparing: SELECT * FROM technical_support where deleted = 0
2022-02-11 10:58:02.047 DEBUG 21928 --- [http-nio-8065-exec-5] c.y.e.m.T.listTechnicalSupportVo         : ==> Parameters: 
2022-02-11 10:58:02.056 DEBUG 21928 --- [http-nio-8065-exec-5] c.y.e.m.T.listTechnicalSupportVo         : <==      Total: 3
2022-02-11 11:07:26.872  INFO 36600 --- [restartedMain] c.yi.enhancement.EnhancementApplication  : Starting EnhancementApplication using Java 1.8.0_311 on LAPTOP-7I9LVMS7 with PID 36600 (E:\1-my-project\blog-enhancement\target\classes started by 刘文鉴 in E:\1-my-project\blog-enhancement)
2022-02-11 11:07:26.872 DEBUG 36600 --- [restartedMain] c.yi.enhancement.EnhancementApplication  : Running with Spring Boot v2.5.0, Spring v5.3.7
2022-02-11 11:07:26.872  INFO 36600 --- [restartedMain] c.yi.enhancement.EnhancementApplication  : No active profile set, falling back to default profiles: default
2022-02-11 11:07:26.903  INFO 36600 --- [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in E:\maven-repository\blog-enhancement-maven\blog-enhancement-repository\com\sun\xml\bind\jaxb-impl\2.2.3-1\jaxb-impl-2.2.3-1.jar referenced one or more files that do not exist: file:/E:/maven-repository/blog-enhancement-maven/blog-enhancement-repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jaxb-api.jar,file:/E:/maven-repository/blog-enhancement-maven/blog-enhancement-repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/activation.jar,file:/E:/maven-repository/blog-enhancement-maven/blog-enhancement-repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jsr173_1.0_api.jar,file:/E:/maven-repository/blog-enhancement-maven/blog-enhancement-repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jaxb1-impl.jar
2022-02-11 11:07:26.903  INFO 36600 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-02-11 11:07:26.903  INFO 36600 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-02-11 11:07:27.745  INFO 36600 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8065 (http)
2022-02-11 11:07:27.745  INFO 36600 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2022-02-11 11:07:27.745  INFO 36600 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.46]
2022-02-11 11:07:27.839  INFO 36600 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2022-02-11 11:07:27.839  INFO 36600 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 936 ms
2022-02-11 11:07:28.199  WARN 36600 --- [restartedMain] c.b.m.core.metadata.TableInfoHelper      : Can not find table primary key in Class: "com.yi.enhancement.model.entity.UserAvatar".
2022-02-11 11:07:29.079  INFO 36600 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2022-02-11 11:07:29.423  INFO 36600 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2022-02-11 11:07:29.942  INFO 36600 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8065 (http) with context path ''
2022-02-11 11:07:30.192  INFO 36600 --- [restartedMain] c.yi.enhancement.EnhancementApplication  : Started EnhancementApplication in 3.896 seconds (JVM running for 4.693)
2022-02-11 11:07:30.207  INFO 36600 --- [restartedMain] o.s.b.a.ApplicationAvailabilityBean      : Application availability state LivenessState changed to CORRECT
2022-02-11 11:07:30.207  INFO 36600 --- [restartedMain] o.s.b.a.ApplicationAvailabilityBean      : Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
2022-02-11 11:07:39.209  INFO 36600 --- [http-nio-8065-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-02-11 11:07:39.209  INFO 36600 --- [http-nio-8065-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2022-02-11 11:07:39.210  INFO 36600 --- [http-nio-8065-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2022-02-11 11:07:39.280  INFO 36600 --- [http-nio-8065-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2022-02-11 11:07:39.469  INFO 36600 --- [http-nio-8065-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2022-02-11 11:07:39.474 DEBUG 36600 --- [http-nio-8065-exec-1] c.y.e.m.A.pageArticleDTOWeb_mpCount      : ==>  Preparing: SELECT COUNT(*) FROM article WHERE deleted = 0 AND status = ?
2022-02-11 11:07:39.489 DEBUG 36600 --- [http-nio-8065-exec-1] c.y.e.m.A.pageArticleDTOWeb_mpCount      : ==> Parameters: 1(Integer)
2022-02-11 11:07:39.512 DEBUG 36600 --- [http-nio-8065-exec-1] c.y.e.m.A.pageArticleDTOWeb_mpCount      : <==      Total: 1
2022-02-11 11:07:39.519 DEBUG 36600 --- [http-nio-8065-exec-1] c.y.e.m.ArticleMapper.pageArticleDTOWeb  : ==>  Preparing: SELECT id, title, create_time, update_time FROM article where deleted = 0 and status = ? ORDER BY update_time DESC LIMIT ?
2022-02-11 11:07:39.519 DEBUG 36600 --- [http-nio-8065-exec-1] c.y.e.m.ArticleMapper.pageArticleDTOWeb  : ==> Parameters: 1(Integer), 8(Long)
2022-02-11 11:07:39.529 DEBUG 36600 --- [http-nio-8065-exec-1] c.y.e.m.ArticleMapper.pageArticleDTOWeb  : <==      Total: 7
2022-02-11 11:07:39.535 DEBUG 36600 --- [http-nio-8065-exec-1] c.y.e.mapper.TagMapper.listTagVo         : ==>  Preparing: SELECT t1.*, COUNT(t2.article_id) article_counts FROM tag t1 LEFT JOIN article_tag_relation t2 ON t1.id = t2.tag_id and t2.deleted = 0 WHERE t1.deleted = 0 GROUP BY t1.id
2022-02-11 11:07:39.535 DEBUG 36600 --- [http-nio-8065-exec-1] c.y.e.mapper.TagMapper.listTagVo         : ==> Parameters: 
2022-02-11 11:07:39.546 DEBUG 36600 --- [http-nio-8065-exec-1] c.y.e.mapper.TagMapper.listTagVo         : <==      Total: 7
2022-02-11 11:07:39.550 DEBUG 36600 --- [http-nio-8065-exec-1] c.y.e.m.CategoryMapper.listCategoryVo    : ==>  Preparing: SELECT t1.id, t1.NAME, COUNT(t2.category_id) article_counts FROM category t1 LEFT JOIN article t2 ON t1.id = t2.category_id and t2.deleted = 0 and t2.status != 0 where t1.deleted = 0 GROUP BY t1.id
2022-02-11 11:07:39.551 DEBUG 36600 --- [http-nio-8065-exec-1] c.y.e.m.CategoryMapper.listCategoryVo    : ==> Parameters: 
2022-02-11 11:07:39.559 DEBUG 36600 --- [http-nio-8065-exec-1] c.y.e.m.CategoryMapper.listCategoryVo    : <==      Total: 2
2022-02-11 11:07:39.564 DEBUG 36600 --- [http-nio-8065-exec-1] c.y.e.mapper.UserMapper.getUser          : ==>  Preparing: SELECT * FROM user WHERE deleted = 0 AND id = ?
2022-02-11 11:07:39.564 DEBUG 36600 --- [http-nio-8065-exec-1] c.y.e.mapper.UserMapper.getUser          : ==> Parameters: 1(Long)
2022-02-11 11:07:39.573 DEBUG 36600 --- [http-nio-8065-exec-1] c.y.e.mapper.UserMapper.getUser          : <==      Total: 1
2022-02-11 11:07:39.583 DEBUG 36600 --- [http-nio-8065-exec-1] c.y.e.mapper.UserMapper.updateById       : ==>  Preparing: UPDATE user SET qq=?, email=?, wechat=?, avatar=?, banner=?, nickname=?, user_signature=?, views=?, create_time=?, update_time=? WHERE id=? AND deleted=0
2022-02-11 11:07:39.586 DEBUG 36600 --- [http-nio-8065-exec-1] c.y.e.mapper.UserMapper.updateById       : ==> Parameters: 2044619214(String), lyric0926@163.com(String), 17805428855(String), https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2021-07-11/6a879a71-ca69-4ef3-a5f7-e8c6f67dd0b7Screenshot_20210424_204530.jpg(String), https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2021-09-16/fdb78008-7df7-4224-8d3a-c97268b9b066wallhaven-v95om8.jpg(String), lyric(String), 许多事情我们的确无能为力。
但即使如此我们也不该因此消沉不是吗？
乐观起来，忘记伤痛继续前行远比一次又一次揭开伤疤要好得多！(String), 14579(Integer), 2020-09-02 15:16:51.0(Timestamp), 2022-02-11 11:07:39.583(Timestamp), 1(Long)
2022-02-11 11:07:39.604 DEBUG 36600 --- [http-nio-8065-exec-1] c.y.e.mapper.UserMapper.updateById       : <==    Updates: 1
2022-02-11 11:07:39.608 DEBUG 36600 --- [http-nio-8065-exec-1] c.y.e.m.T.listTechnicalSupportVo         : ==>  Preparing: SELECT * FROM technical_support where deleted = 0
2022-02-11 11:07:39.609 DEBUG 36600 --- [http-nio-8065-exec-1] c.y.e.m.T.listTechnicalSupportVo         : ==> Parameters: 
2022-02-11 11:07:39.618 DEBUG 36600 --- [http-nio-8065-exec-1] c.y.e.m.T.listTechnicalSupportVo         : <==      Total: 3
2022-02-11 11:08:43.278 DEBUG 36600 --- [http-nio-8065-exec-2] c.y.e.m.A.pageArticleDTOWeb_mpCount      : ==>  Preparing: SELECT COUNT(*) FROM article WHERE deleted = 0 AND status = ?
2022-02-11 11:08:43.278 DEBUG 36600 --- [http-nio-8065-exec-2] c.y.e.m.A.pageArticleDTOWeb_mpCount      : ==> Parameters: 1(Integer)
2022-02-11 11:08:43.287 DEBUG 36600 --- [http-nio-8065-exec-2] c.y.e.m.A.pageArticleDTOWeb_mpCount      : <==      Total: 1
2022-02-11 11:08:43.287 DEBUG 36600 --- [http-nio-8065-exec-2] c.y.e.m.ArticleMapper.pageArticleDTOWeb  : ==>  Preparing: SELECT id, title, create_time, update_time FROM article where deleted = 0 and status = ? ORDER BY update_time DESC LIMIT ?
2022-02-11 11:08:43.288 DEBUG 36600 --- [http-nio-8065-exec-2] c.y.e.m.ArticleMapper.pageArticleDTOWeb  : ==> Parameters: 1(Integer), 8(Long)
2022-02-11 11:08:43.297 DEBUG 36600 --- [http-nio-8065-exec-2] c.y.e.m.ArticleMapper.pageArticleDTOWeb  : <==      Total: 8
2022-02-11 11:08:43.297 DEBUG 36600 --- [http-nio-8065-exec-2] c.y.e.mapper.TagMapper.listTagVo         : ==>  Preparing: SELECT t1.*, COUNT(t2.article_id) article_counts FROM tag t1 LEFT JOIN article_tag_relation t2 ON t1.id = t2.tag_id and t2.deleted = 0 WHERE t1.deleted = 0 GROUP BY t1.id
2022-02-11 11:08:43.297 DEBUG 36600 --- [http-nio-8065-exec-2] c.y.e.mapper.TagMapper.listTagVo         : ==> Parameters: 
2022-02-11 11:08:43.307 DEBUG 36600 --- [http-nio-8065-exec-2] c.y.e.mapper.TagMapper.listTagVo         : <==      Total: 7
2022-02-11 11:08:43.307 DEBUG 36600 --- [http-nio-8065-exec-2] c.y.e.m.CategoryMapper.listCategoryVo    : ==>  Preparing: SELECT t1.id, t1.NAME, COUNT(t2.category_id) article_counts FROM category t1 LEFT JOIN article t2 ON t1.id = t2.category_id and t2.deleted = 0 and t2.status != 0 where t1.deleted = 0 GROUP BY t1.id
2022-02-11 11:08:43.308 DEBUG 36600 --- [http-nio-8065-exec-2] c.y.e.m.CategoryMapper.listCategoryVo    : ==> Parameters: 
2022-02-11 11:08:43.316 DEBUG 36600 --- [http-nio-8065-exec-2] c.y.e.m.CategoryMapper.listCategoryVo    : <==      Total: 2
2022-02-11 11:08:43.317 DEBUG 36600 --- [http-nio-8065-exec-2] c.y.e.mapper.UserMapper.getUser          : ==>  Preparing: SELECT * FROM user WHERE deleted = 0 AND id = ?
2022-02-11 11:08:43.317 DEBUG 36600 --- [http-nio-8065-exec-2] c.y.e.mapper.UserMapper.getUser          : ==> Parameters: 1(Long)
2022-02-11 11:08:43.325 DEBUG 36600 --- [http-nio-8065-exec-2] c.y.e.mapper.UserMapper.getUser          : <==      Total: 1
2022-02-11 11:08:43.326 DEBUG 36600 --- [http-nio-8065-exec-2] c.y.e.mapper.UserMapper.updateById       : ==>  Preparing: UPDATE user SET qq=?, email=?, wechat=?, avatar=?, banner=?, nickname=?, user_signature=?, views=?, create_time=?, update_time=? WHERE id=? AND deleted=0
2022-02-11 11:08:43.327 DEBUG 36600 --- [http-nio-8065-exec-2] c.y.e.mapper.UserMapper.updateById       : ==> Parameters: 2044619214(String), lyric0926@163.com(String), 17805428855(String), https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2021-07-11/6a879a71-ca69-4ef3-a5f7-e8c6f67dd0b7Screenshot_20210424_204530.jpg(String), https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2021-09-16/fdb78008-7df7-4224-8d3a-c97268b9b066wallhaven-v95om8.jpg(String), lyric(String), 许多事情我们的确无能为力。
但即使如此我们也不该因此消沉不是吗？
乐观起来，忘记伤痛继续前行远比一次又一次揭开伤疤要好得多！(String), 14580(Integer), 2020-09-02 15:16:51.0(Timestamp), 2022-02-11 11:08:43.326(Timestamp), 1(Long)
2022-02-11 11:08:43.345 DEBUG 36600 --- [http-nio-8065-exec-2] c.y.e.mapper.UserMapper.updateById       : <==    Updates: 1
2022-02-11 11:08:43.346 DEBUG 36600 --- [http-nio-8065-exec-2] c.y.e.m.T.listTechnicalSupportVo         : ==>  Preparing: SELECT * FROM technical_support where deleted = 0
2022-02-11 11:08:43.346 DEBUG 36600 --- [http-nio-8065-exec-2] c.y.e.m.T.listTechnicalSupportVo         : ==> Parameters: 
2022-02-11 11:08:43.355 DEBUG 36600 --- [http-nio-8065-exec-2] c.y.e.m.T.listTechnicalSupportVo         : <==      Total: 3
2022-02-11 11:10:41.543 DEBUG 36600 --- [http-nio-8065-exec-7] c.y.e.m.CategoryMapper.listCategoryDTO   : ==>  Preparing: select * from category where deleted = 0
2022-02-11 11:10:41.543 DEBUG 36600 --- [http-nio-8065-exec-3] c.y.e.mapper.TagMapper.listTagDTO        : ==>  Preparing: select * from tag where deleted = 0
2022-02-11 11:10:41.543 DEBUG 36600 --- [http-nio-8065-exec-7] c.y.e.m.CategoryMapper.listCategoryDTO   : ==> Parameters: 
2022-02-11 11:10:41.544 DEBUG 36600 --- [http-nio-8065-exec-3] c.y.e.mapper.TagMapper.listTagDTO        : ==> Parameters: 
2022-02-11 11:10:41.551 DEBUG 36600 --- [http-nio-8065-exec-7] c.y.e.m.CategoryMapper.listCategoryDTO   : <==      Total: 2
2022-02-11 11:10:41.552 DEBUG 36600 --- [http-nio-8065-exec-3] c.y.e.mapper.TagMapper.listTagDTO        : <==      Total: 7
2022-02-11 11:11:47.795 DEBUG 36600 --- [http-nio-8065-exec-8] c.y.e.m.CategoryMapper.listCategoryDTO   : ==>  Preparing: select * from category where deleted = 0
2022-02-11 11:11:47.795 DEBUG 36600 --- [http-nio-8065-exec-1] c.y.e.mapper.TagMapper.listTagDTO        : ==>  Preparing: select * from tag where deleted = 0
2022-02-11 11:11:47.795 DEBUG 36600 --- [http-nio-8065-exec-8] c.y.e.m.CategoryMapper.listCategoryDTO   : ==> Parameters: 
2022-02-11 11:11:47.796 DEBUG 36600 --- [http-nio-8065-exec-1] c.y.e.mapper.TagMapper.listTagDTO        : ==> Parameters: 
2022-02-11 11:11:47.804 DEBUG 36600 --- [http-nio-8065-exec-8] c.y.e.m.CategoryMapper.listCategoryDTO   : <==      Total: 2
2022-02-11 11:11:47.805 DEBUG 36600 --- [http-nio-8065-exec-1] c.y.e.mapper.TagMapper.listTagDTO        : <==      Total: 7
2022-02-11 11:11:49.455 DEBUG 36600 --- [http-nio-8065-exec-5] c.y.e.mapper.TagMapper.listTagDTO        : ==>  Preparing: select * from tag where deleted = 0
2022-02-11 11:11:49.455 DEBUG 36600 --- [http-nio-8065-exec-5] c.y.e.mapper.TagMapper.listTagDTO        : ==> Parameters: 
2022-02-11 11:11:49.455 DEBUG 36600 --- [http-nio-8065-exec-6] c.y.e.m.CategoryMapper.listCategoryDTO   : ==>  Preparing: select * from category where deleted = 0
2022-02-11 11:11:49.455 DEBUG 36600 --- [http-nio-8065-exec-6] c.y.e.m.CategoryMapper.listCategoryDTO   : ==> Parameters: 
2022-02-11 11:11:49.472 DEBUG 36600 --- [http-nio-8065-exec-6] c.y.e.m.CategoryMapper.listCategoryDTO   : <==      Total: 2
2022-02-11 11:11:49.472 DEBUG 36600 --- [http-nio-8065-exec-5] c.y.e.mapper.TagMapper.listTagDTO        : <==      Total: 7
2022-02-11 11:11:49.472 DEBUG 36600 --- [http-nio-8065-exec-9] c.y.e.m.A.pageArticleDTO_mpCount         : ==>  Preparing: SELECT COUNT(*) FROM (SELECT t1.id, t1.title, t1.stamp, t1.comments, t1.original, t1.status, t1.recommend, t1.appreciate, t1.views, t1.create_time, t1.update_time, t1.user_id, t1.category_id, t2.name category_name, COUNT(t3.id) comment_counts FROM article t1 LEFT JOIN category t2 ON t1.category_id = t2.id LEFT JOIN comment t3 ON t1.id = t3.article_id WHERE 1 = 1 AND t1.deleted = 0 GROUP BY t1.id ORDER BY t1.update_time DESC) TOTAL
2022-02-11 11:11:49.472 DEBUG 36600 --- [http-nio-8065-exec-9] c.y.e.m.A.pageArticleDTO_mpCount         : ==> Parameters: 
2022-02-11 11:11:49.492 DEBUG 36600 --- [http-nio-8065-exec-9] c.y.e.m.A.pageArticleDTO_mpCount         : <==      Total: 1
2022-02-11 11:11:49.493 DEBUG 36600 --- [http-nio-8065-exec-9] c.y.e.m.ArticleMapper.pageArticleDTO     : ==>  Preparing: SELECT t1.id, t1.title, t1.stamp, t1.comments, t1.original, t1.status, t1.recommend, t1.appreciate, t1.views, t1.create_time, t1.update_time, t1.user_id, t1.category_id, t2.name category_name, COUNT(t3.id) comment_counts FROM article t1 left join category t2 on t1.category_id = t2.id left join comment t3 on t1.id = t3.article_id where 1 = 1 and t1.deleted = 0 GROUP BY t1.id ORDER BY t1.update_time DESC LIMIT ?
2022-02-11 11:11:49.493 DEBUG 36600 --- [http-nio-8065-exec-9] c.y.e.m.ArticleMapper.pageArticleDTO     : ==> Parameters: 10(Long)
2022-02-11 11:11:49.518 DEBUG 36600 --- [http-nio-8065-exec-9] c.y.e.m.ArticleMapper.pageArticleDTO     : <==      Total: 8
2022-02-11 11:11:49.518 DEBUG 36600 --- [http-nio-8065-exec-9] c.y.e.m.A.listArticleTagRelation         : ==>  Preparing: SELECT t1.article_id, t1.tag_id, t2.NAME tag_name FROM `article_tag_relation` t1 LEFT JOIN tag t2 ON t1.tag_id = t2.id where t1.deleted = 0 and t1.article_id in ( ? , ? , ? , ? , ? , ? , ? , ? )
2022-02-11 11:11:49.518 DEBUG 36600 --- [http-nio-8065-exec-9] c.y.e.m.A.listArticleTagRelation         : ==> Parameters: 1491400438823596033(Long), 1478682493945196546(Long), 1473299945589125122(Long), 1471060099663474689(Long), 1463756487044231169(Long), 1461568605407682562(Long), 1459070158997823489(Long), 1455442044157722626(Long)
2022-02-11 11:11:49.533 DEBUG 36600 --- [http-nio-8065-exec-9] c.y.e.m.A.listArticleTagRelation         : <==      Total: 8
2022-02-11 11:11:51.094 DEBUG 36600 --- [http-nio-8065-exec-2] c.y.e.m.ArticleMapper.getArticleDetail   : ==>  Preparing: SELECT t1.id, t1.title, t1.stamp, t1.comments, t1.original, t1.content, t1.status, t1.recommend, t1.appreciate, t1.views, t1.create_time, t1.update_time, t1.user_id, t1.category_id, t2.name category_name FROM article t1 left join category t2 on t1.category_id = t2.id where t1.deleted = 0 and t1.id = ?
2022-02-11 11:11:51.094 DEBUG 36600 --- [http-nio-8065-exec-10] c.y.e.m.CategoryMapper.listCategoryDTO   : ==>  Preparing: select * from category where deleted = 0
2022-02-11 11:11:51.094 DEBUG 36600 --- [http-nio-8065-exec-10] c.y.e.m.CategoryMapper.listCategoryDTO   : ==> Parameters: 
2022-02-11 11:11:51.094 DEBUG 36600 --- [http-nio-8065-exec-2] c.y.e.m.ArticleMapper.getArticleDetail   : ==> Parameters: 1491400438823596033(Long)
2022-02-11 11:11:51.094 DEBUG 36600 --- [http-nio-8065-exec-4] c.y.e.mapper.TagMapper.listTagDTO        : ==>  Preparing: select * from tag where deleted = 0
2022-02-11 11:11:51.095 DEBUG 36600 --- [http-nio-8065-exec-4] c.y.e.mapper.TagMapper.listTagDTO        : ==> Parameters: 
2022-02-11 11:11:51.102 DEBUG 36600 --- [http-nio-8065-exec-10] c.y.e.m.CategoryMapper.listCategoryDTO   : <==      Total: 2
2022-02-11 11:11:51.104 DEBUG 36600 --- [http-nio-8065-exec-4] c.y.e.mapper.TagMapper.listTagDTO        : <==      Total: 7
2022-02-11 11:11:51.108 DEBUG 36600 --- [http-nio-8065-exec-2] c.y.e.m.A.listTagByArticleId             : ====>  Preparing: SELECT t2.id, t2.name FROM article_tag_relation t1 LEFT JOIN tag t2 ON t1.tag_id = t2.id WHERE t1.deleted = 0 and t1.article_id = ?
2022-02-11 11:11:51.108 DEBUG 36600 --- [http-nio-8065-exec-2] c.y.e.m.A.listTagByArticleId             : ====> Parameters: 1491400438823596033(Long)
2022-02-11 11:11:51.115 DEBUG 36600 --- [http-nio-8065-exec-2] c.y.e.m.A.listTagByArticleId             : <====      Total: 0
2022-02-11 11:11:51.116 DEBUG 36600 --- [http-nio-8065-exec-2] c.y.e.m.ArticleMapper.getArticleDetail   : <==      Total: 1
2022-02-11 11:11:53.454 DEBUG 36600 --- [http-nio-8065-exec-7] c.y.e.mapper.ArticleMapper.getArticle    : ==>  Preparing: SELECT t1.id, t1.title, t1.stamp, t1.comments, t1.original, t1.status, t1.recommend, t1.appreciate, t1.views, t1.create_time, t1.update_time, t1.user_id, t1.category_id, t2.name category_name FROM article t1 left join category t2 on t1.category_id = t2.id where t1.deleted = 0 and t1.id = ?
2022-02-11 11:11:53.454 DEBUG 36600 --- [http-nio-8065-exec-7] c.y.e.mapper.ArticleMapper.getArticle    : ==> Parameters: 1491400438823596033(Long)
2022-02-11 11:11:53.464 DEBUG 36600 --- [http-nio-8065-exec-7] c.y.e.m.A.listTagByArticleId             : ====>  Preparing: SELECT t2.id, t2.name FROM article_tag_relation t1 LEFT JOIN tag t2 ON t1.tag_id = t2.id WHERE t1.deleted = 0 and t1.article_id = ?
2022-02-11 11:11:53.464 DEBUG 36600 --- [http-nio-8065-exec-7] c.y.e.m.A.listTagByArticleId             : ====> Parameters: 1491400438823596033(Long)
2022-02-11 11:11:53.474 DEBUG 36600 --- [http-nio-8065-exec-7] c.y.e.m.A.listTagByArticleId             : <====      Total: 0
2022-02-11 11:11:53.474 DEBUG 36600 --- [http-nio-8065-exec-7] c.y.e.mapper.ArticleMapper.getArticle    : <==      Total: 1
2022-02-11 11:11:55.329 DEBUG 36600 --- [http-nio-8065-exec-3] c.y.e.mapper.ArticleMapper.selectById    : ==>  Preparing: SELECT id,title,content,first_picture,stamp,comments,original,status,recommend,appreciate,views,create_time,update_time,category_id,user_id,deleted FROM article WHERE id=? AND deleted=0
2022-02-11 11:11:55.330 DEBUG 36600 --- [http-nio-8065-exec-3] c.y.e.mapper.ArticleMapper.selectById    : ==> Parameters: 1491400438823596033(Long)
2022-02-11 11:11:55.340 DEBUG 36600 --- [http-nio-8065-exec-3] c.y.e.mapper.ArticleMapper.selectById    : <==      Total: 1
2022-02-11 11:11:55.344 DEBUG 36600 --- [http-nio-8065-exec-3] c.y.e.mapper.ArticleMapper.updateById    : ==>  Preparing: UPDATE article SET title=?, content=?, stamp=?, comments=?, status=?, recommend=?, appreciate=?, update_time=?, category_id=? WHERE id=? AND deleted=0
2022-02-11 11:11:55.345 DEBUG 36600 --- [http-nio-8065-exec-3] c.y.e.mapper.ArticleMapper.updateById    : ==> Parameters: 优化sql(String), ## sql优化

### sql优化需知

mysql版本：Server version: 8.0.13 MySQL

sql优化遵从三点：

- 最大化利用索引；
- 尽可能避免全表扫描；
- 减少无效数据的查询；

#### select语句-语法顺序

```sql
1. SELECT 
2. DISTINCT <select_list>
3. FROM <left_table>
4. <join_type> JOIN <right_table>
5. ON <join_condition>
6. WHERE <where_condition>
7. GROUP BY <group_by_list>
8. HAVING <having_condition>
9. ORDER BY <order_by_condition>
10.LIMIT <limit_number>
```

#### select语句-执行顺序

**FROM**
<表名> # 选取表，将多个表数据通过笛卡尔积变成一个表。
**ON**
<筛选条件> # 对笛卡尔积的虚表进行筛选
**JOIN** <join, left join, right join...>
<join表> # 指定join，用于添加数据到on之后的虚表中，例如left join会将左表的剩余数据添加到虚表中
**WHERE**
<where条件> # 对上述虚表进行筛选
**GROUP BY**
<分组条件> # 分组
<SUM()等聚合函数> # 用于having子句进行判断，在书写上这类聚合函数是写在having判断里面的
**HAVING**
<分组筛选> # 对分组后的结果进行聚合筛选
**SELECT**
<返回数据列表> # 返回的单列必须在group by子句中，聚合函数除外
**DISTINCT**
\# 数据除重
**ORDER BY**
<排序条件> # 排序
**LIMIT**
<行数限制>

#### 优化关键字：explain

针对慢sql，常常用explain这个命令来查看一个这些SQL语句的执行计划，查看该SQL语句有没有使用上了索引，有没有做全表扫描，这都可以通过explain命令来查看。所以我们深入了解MySQL的基于开销的优化器，还可以获得很多可能被优化器考虑到的访问策略的细节，以及当运行SQL语句时哪种策略预计会被优化器采用。

![image-20220209103041703.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/e69179ee-45ae-470d-b266-a749eb4cb6e6.png)
下面对这些字段出现的可能进行解释：

### 1、id

表示select标识符，同时表明执行顺序，也就是说id是一个查询的序列号，查询序号即为sql语句执行的顺序。

（1）当id值相同时，按从上到下的顺序执行。

（2）当id全部不同时，按id从大到小执行。

（3）当id部分不同时，先执行id大的，id相同的，按从上到下的顺序执行。

#### 2、select_type

（1）simple：表示简单的select，没有union和子查询

（2）primary：最外面的查询 或者 主查询，在有子查询的语句中，最外面的select查询就是primary

（3）subquery：子查询

（4）union：union语句的第二个或者说是后面那一个select

（5）union result：union之后的结果

（6）dependent unoin：unoin 中的第二个或随后的 select 查询，依赖于外部查询的结果集

（7）dependent subquery：子查询中的第一个 select 查询，依赖于外部 查询的结果集

（8）derived：衍生表（5.7版本中不存在这一个）

#### 3、table

通常是表名，或者表的别名，或者一个为查询产生临时表的标示符（如派生表、子查询、集合）

#### 4、partitions

使用的哪些分区（对于非分区表值为null），在5.5版本中需要加上explain partitions select ...

#### 5.type

（1）const：表中最多有一个匹配行，const用于比较primary key 或者unique索引。因为只匹配一行数据，所以很快

（2）eq_ref：唯一性索引扫描，对于每个来自于前面的表的记录，从该表中读取唯一一行

（3）ref：非唯一性索引扫描，对于每个来自于前面的表的记录，所有匹配的行从这张表取出

（4）ref_or_null：类似于ref，但是可以搜索包含null值的行，例如：select * from student where address='xxx' or address is null，需要在address建立索引。

（5）index_merge：查询语句用到了一张表的多个索引时，mysql会将多个索引合并到一起

（6）range：按指定范围（如in、<、>、between and等，但是前提是此字段要建立索引）来检索，很常见。如：select * from student where id < 5，id上要有索引。

（7）index：全”表“扫描，但是是在索引树中扫描，通常比ALL快，因为索引文件通常比数据文件小，index扫描是通过二叉树的方式扫描，而all是扫描物理表。（也就是说虽然all和index都是读全表，但index是从索引中读取的，而all是从硬盘中读的）。例如：select name from student，但name字段上需要建立索引，也就是查询的字段属于索引中的字段。

（8）all：全表扫描，扫描完整的物理表，此时就需要优化了。

这8种type代表性能由好到差，一般优化可达range或者ref

#### 6.possible_keys

指出 MySQL 能在该表中可能使用的索引，显示的是索引的名称，多个索引用逗号隔开，如果没有，则为null。

#### 7.key

MySQL决定实际用到的索引，显示的是索引的名称，多个索引用逗号隔开，如果没有，则为null。

#### 8.key_len

当用到组合索引的时候判断索引是否完全用上。

> 实例：假设student表中有id int,name char(20) DEFAULT NULL,address varchar(20) DEFAULT NULL,remark varchar(20) NOT NULL 字段，建立的索引是 idx_address_remark（在address和remark上建立的组合索引）
>
> 查询的sql是：select * from student where address='深圳' and remark='java coder'，此时，执行计划中的key_len是 （20*3+1+2）+ （20*3+2）= 125，那么这个是怎么得来的呢？
>
> 解析：20表示建表的时候 varchar(20) ，3表示utf8字符集占用3个字节，1表示MySQL需要1个字节表示null，2表示变长字段（varchar是变长的）。  
>
> 假设drop掉刚刚建立的索引，新建索引 idx_name_address（在name和address上建立组合索引）
>
> 查询的sql是：select * from student where name='xbq' and address='深圳'，此时，执行计划中的key_len是 （20*3+1）+ （20*3+2）= 123，那么这个值是怎么得来的呢？
>
> 解析：20表示建表的时候 char(20) ，3表示utf8字符集占用3个字节，1表示MySQL需要1个字节标识null，即 20*3+1，后面的同样的道理。

key_len只计算where条件用到的索引长度，而排序和分组就算用到了索引，也不会计算到key_len中。

计算key_len的公式：

> varchr(10)变长字段且允许NULL = 10 * ( character set：utf8=3,gbk=2,latin1=1) + 1(NULL) + 2(变长字段)
>
> varchr(10)变长字段且不允许NULL = 10 *( character set：utf8=3,gbk=2,latin1=1) + 2(变长字段)
>
> char(10)固定字段且允许NULL = 10 * ( character set：utf8=3,gbk=2,latin1=1)+1(NULL)
>
> char(10)固定字段且不允许NULL = 10 * ( character set：utf8=3,gbk=2,latin1=1)

#### 9.ref

显示索引的哪一列被使用了，如果可能的话，是一个常数

#### 10.rows

显示mysql认为执行查询时必须要返回的行数，可结合type和key分析，没有用上索引的情况下，会全表扫描。rows的值越小越好，说明检索的数据少

#### 11.filtered

给出了一个百分比的值，这个百分比值和rows列的值一起使用，可以估计出那些将要和执行计划中的前一个表（前一个表就是指id列的值比当前表的id小的表）进行连接的行的数目。

这一列在5.5版本中，需要加上 explain extended select ....。

#### 12.extra

此字段显示一些额外的信息，但是此字段的部分值具有优化的参考意义。

（1）using where：表示查询使用了where 语句来处理结果

（2）using index：表示使用了覆盖索引。这个值重点强调了只需要使用索引就可以满足查询表的要求，不需要直接访问表数据。

（3）using join buffer：这个值强调了在获取连接条件时没有使用索引，并且需要连接缓冲区来存储中间结果。如果出现了这个值，那应该注意，根据查询的具体情况可能需要添加索引来改进性能

（4）using filesort：这是 order by 语句的结果。这可能是一个CPU密集型的过程。using filesort表示出现了文件内排序，表示很不好的现象，必须要优化，特别是大表，可以通过选择合适的索引来改进性能，用索引来为查询结果排序。

（5）using temporary：mysql需要创建一张临时表来保存中间结果。 也就是说，需要先把数据放到临时表中，然后从临时表中获取需要的数据。出现这种临时表，也是必须需要优化的地方，特别是数据量大的情况。两个常见的原因是在来自不同表的列上使用了distinct，或者使用了不同的 order by 和 group by 列。

### sql索引优化

对查询进行优化，应尽量避免全表扫描，首先应考虑在 where 及 order by 涉及的列上建立索引。

#### 1、避免在where子句中使用!=或<或>操作符，否则将引擎放弃使用索引而进行全表扫描。

![image-20220209110259285.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/201dd710-d7d3-48c3-a5bd-49d822b470b4.png)

但该效果仅仅是让该字段索引失效，比如以上面的例子来说，如果有以order_status为首的联合索引，那么该联合索引不能命中，但如果还有其他单列索引，是仍然可以命中索引的。下面的语句都是一样的，失效只是导致当前索引失效。

![image-20220209110604150.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/c9b93726-dc7d-4736-8ea4-8f3c85ba93d7.png)

#### 2、尽量避免在字段开头模糊查询，会导致数据库引擎放弃索引进行全表扫描。

```text
SELECT * FROM sys_job_log WHERE job_name like '%HandleCustomerDayAmountChangeJob%'
```

优化方式：尽量在字段后面使用模糊查询。如下：

```text
SELECT * FROM sys_job_log WHERE job_name like 'HandleCustomerDayAmountChangeJob%'
```

如果需求是要在前面使用模糊查询，

- 使用FullText全文索引，用match against 检索
- 数据量较大的情况，建议引用ElasticSearch、solr，亿级数据量检索速度秒级

下面是全文索引

![image-20220209115051398.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/33976da2-3b7b-4aeb-96cf-cc306d43a392.png)

---分割线---

![image-20220209115205488.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/d99cde70-8a8d-4a3e-aebf-360eba779271.png)

#### 3、关于IN和OR和IS NULL。

mysql在8.0.13的版本已经优化了关于IN、OR和IS NULL的索引命中

![image-20220209193523227.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/2e52fd21-b787-45c9-ae59-032cf26c4d18.png)

#### 4、尽量避免使用NOT IN或IS NOT NULL等否定关键字，会导致数据库引擎放弃索引进行全表扫描。

![image-20220209193723159.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/6923c283-2fef-4306-8283-57064e15200b.png)

---分割线---

![image-20220209194131592.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/2e3ed807-0c96-42c4-9849-cd4db5b14b65.png)

#### 5、尽量避免在where条件中等号的左侧进行表达式、函数操作，会导致数据库引擎放弃索引进行全表扫描。

![image-20220209195726228.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/cf55939c-496a-41c3-80cd-986e6eadd9d2.png)

---分割线---

![image-20220209195653187.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/697a7095-96f7-4449-98fd-771e9ff2270b.png)

#### 6、where条件中没有联合索引的前置项导致联合索引完全失效

![image-20220209202643790.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/b6db75f0-65fc-4cdb-bf27-a90c76ee4d52.png)

**结果2**![image-20220209202741884.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/b06b832e-f570-4a15-9c07-47e1c6a13bc8.png)

**结果3**![image-20220209202748838.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/82c2e67d-73bd-4244-b274-011a48d3d096.png)

**结果4**![image-20220209202757561.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/cf55f3ad-ed60-46aa-af2d-c37e66649449.png)

**结果5**![image-20220209202803738.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/d0127e0b-cd47-457e-92af-9c1ffbca8648.png)

最左匹配法则，where条件中必须包括联合索引最左边的一项，否则无法命中索引。

这里需要注意的是mysql中会内部优化where的条件，来匹配最佳的索引。

#### 7、隐式类型转换造成不使用索引

如下SQL语句由于索引对列类型为varchar，但给定的值为数值，涉及隐式类型转换，造成不能正确走索引。

![image-20220209203710764.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/1ca7a281-74e6-4f4e-a18e-3340fd9d413b.png)

![image-20220209203728796.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/022fb57a-dabb-4ffc-a49e-3e059f3df368.png)

--------未完成----------

### 语句优化

tips：

1、避免将常更新的字段设置为索引

2、避免将区分度不大的字段设置为索引

(String), true(Boolean), true(Boolean), false(Boolean), true(Boolean), true(Boolean), 2022-02-11 11:11:55.328(Timestamp), 1446769938234671105(Long), 1491400438823596033(Long)
2022-02-11 11:11:55.364 DEBUG 36600 --- [http-nio-8065-exec-3] c.y.e.mapper.ArticleMapper.updateById    : <==    Updates: 1
2022-02-11 11:11:55.366 DEBUG 36600 --- [http-nio-8065-exec-3] c.y.e.m.A.deleteReally                   : ==>  Preparing: DELETE FROM article_tag_relation WHERE article_id = ?
2022-02-11 11:11:55.367 DEBUG 36600 --- [http-nio-8065-exec-3] c.y.e.m.A.deleteReally                   : ==> Parameters: 1491400438823596033(Long)
2022-02-11 11:11:55.384 DEBUG 36600 --- [http-nio-8065-exec-3] c.y.e.m.A.deleteReally                   : <==    Updates: 0
2022-02-11 11:11:55.791 DEBUG 36600 --- [http-nio-8065-exec-8] c.y.e.mapper.TagMapper.listTagDTO        : ==>  Preparing: select * from tag where deleted = 0
2022-02-11 11:11:55.792 DEBUG 36600 --- [http-nio-8065-exec-8] c.y.e.mapper.TagMapper.listTagDTO        : ==> Parameters: 
2022-02-11 11:11:55.802 DEBUG 36600 --- [http-nio-8065-exec-8] c.y.e.mapper.TagMapper.listTagDTO        : <==      Total: 7
2022-02-11 11:12:02.151 DEBUG 36600 --- [http-nio-8065-exec-1] c.y.e.m.A.pageArticleDTOWeb_mpCount      : ==>  Preparing: SELECT COUNT(*) FROM article WHERE deleted = 0 AND status = ?
2022-02-11 11:12:02.151 DEBUG 36600 --- [http-nio-8065-exec-1] c.y.e.m.A.pageArticleDTOWeb_mpCount      : ==> Parameters: 1(Integer)
2022-02-11 11:12:02.158 DEBUG 36600 --- [http-nio-8065-exec-1] c.y.e.m.A.pageArticleDTOWeb_mpCount      : <==      Total: 1
2022-02-11 11:12:02.159 DEBUG 36600 --- [http-nio-8065-exec-1] c.y.e.m.ArticleMapper.pageArticleDTOWeb  : ==>  Preparing: SELECT id, title, create_time, update_time FROM article where deleted = 0 and status = ? ORDER BY update_time DESC LIMIT ?
2022-02-11 11:12:02.159 DEBUG 36600 --- [http-nio-8065-exec-1] c.y.e.m.ArticleMapper.pageArticleDTOWeb  : ==> Parameters: 1(Integer), 8(Long)
2022-02-11 11:12:02.176 DEBUG 36600 --- [http-nio-8065-exec-1] c.y.e.m.ArticleMapper.pageArticleDTOWeb  : <==      Total: 7
2022-02-11 11:12:02.177 DEBUG 36600 --- [http-nio-8065-exec-1] c.y.e.mapper.TagMapper.listTagVo         : ==>  Preparing: SELECT t1.*, COUNT(t2.article_id) article_counts FROM tag t1 LEFT JOIN article_tag_relation t2 ON t1.id = t2.tag_id and t2.deleted = 0 WHERE t1.deleted = 0 GROUP BY t1.id
2022-02-11 11:12:02.177 DEBUG 36600 --- [http-nio-8065-exec-1] c.y.e.mapper.TagMapper.listTagVo         : ==> Parameters: 
2022-02-11 11:12:02.190 DEBUG 36600 --- [http-nio-8065-exec-1] c.y.e.mapper.TagMapper.listTagVo         : <==      Total: 7
2022-02-11 11:12:02.191 DEBUG 36600 --- [http-nio-8065-exec-1] c.y.e.m.CategoryMapper.listCategoryVo    : ==>  Preparing: SELECT t1.id, t1.NAME, COUNT(t2.category_id) article_counts FROM category t1 LEFT JOIN article t2 ON t1.id = t2.category_id and t2.deleted = 0 and t2.status != 0 where t1.deleted = 0 GROUP BY t1.id
2022-02-11 11:12:02.191 DEBUG 36600 --- [http-nio-8065-exec-1] c.y.e.m.CategoryMapper.listCategoryVo    : ==> Parameters: 
2022-02-11 11:12:02.199 DEBUG 36600 --- [http-nio-8065-exec-1] c.y.e.m.CategoryMapper.listCategoryVo    : <==      Total: 2
2022-02-11 11:12:02.199 DEBUG 36600 --- [http-nio-8065-exec-1] c.y.e.mapper.UserMapper.getUser          : ==>  Preparing: SELECT * FROM user WHERE deleted = 0 AND id = ?
2022-02-11 11:12:02.200 DEBUG 36600 --- [http-nio-8065-exec-1] c.y.e.mapper.UserMapper.getUser          : ==> Parameters: 1(Long)
2022-02-11 11:12:02.208 DEBUG 36600 --- [http-nio-8065-exec-1] c.y.e.mapper.UserMapper.getUser          : <==      Total: 1
2022-02-11 11:12:02.209 DEBUG 36600 --- [http-nio-8065-exec-1] c.y.e.mapper.UserMapper.updateById       : ==>  Preparing: UPDATE user SET qq=?, email=?, wechat=?, avatar=?, banner=?, nickname=?, user_signature=?, views=?, create_time=?, update_time=? WHERE id=? AND deleted=0
2022-02-11 11:12:02.210 DEBUG 36600 --- [http-nio-8065-exec-1] c.y.e.mapper.UserMapper.updateById       : ==> Parameters: 2044619214(String), lyric0926@163.com(String), 17805428855(String), https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2021-07-11/6a879a71-ca69-4ef3-a5f7-e8c6f67dd0b7Screenshot_20210424_204530.jpg(String), https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2021-09-16/fdb78008-7df7-4224-8d3a-c97268b9b066wallhaven-v95om8.jpg(String), lyric(String), 许多事情我们的确无能为力。
但即使如此我们也不该因此消沉不是吗？
乐观起来，忘记伤痛继续前行远比一次又一次揭开伤疤要好得多！(String), 14581(Integer), 2020-09-02 15:16:51.0(Timestamp), 2022-02-11 11:12:02.209(Timestamp), 1(Long)
2022-02-11 11:12:02.228 DEBUG 36600 --- [http-nio-8065-exec-1] c.y.e.mapper.UserMapper.updateById       : <==    Updates: 1
2022-02-11 11:12:02.228 DEBUG 36600 --- [http-nio-8065-exec-1] c.y.e.m.T.listTechnicalSupportVo         : ==>  Preparing: SELECT * FROM technical_support where deleted = 0
2022-02-11 11:12:02.228 DEBUG 36600 --- [http-nio-8065-exec-1] c.y.e.m.T.listTechnicalSupportVo         : ==> Parameters: 
2022-02-11 11:12:02.237 DEBUG 36600 --- [http-nio-8065-exec-1] c.y.e.m.T.listTechnicalSupportVo         : <==      Total: 3
2022-02-11 11:12:04.123 DEBUG 36600 --- [http-nio-8065-exec-2] c.y.e.m.A.pageArticleDTOWeb_mpCount      : ==>  Preparing: SELECT COUNT(*) FROM article WHERE deleted = 0 AND status = ?
2022-02-11 11:12:04.124 DEBUG 36600 --- [http-nio-8065-exec-2] c.y.e.m.A.pageArticleDTOWeb_mpCount      : ==> Parameters: 1(Integer)
2022-02-11 11:12:04.131 DEBUG 36600 --- [http-nio-8065-exec-2] c.y.e.m.A.pageArticleDTOWeb_mpCount      : <==      Total: 1
2022-02-11 11:12:04.132 DEBUG 36600 --- [http-nio-8065-exec-2] c.y.e.m.ArticleMapper.pageArticleDTOWeb  : ==>  Preparing: SELECT id, title, create_time, update_time FROM article where deleted = 0 and status = ? ORDER BY update_time DESC LIMIT ?
2022-02-11 11:12:04.132 DEBUG 36600 --- [http-nio-8065-exec-2] c.y.e.m.ArticleMapper.pageArticleDTOWeb  : ==> Parameters: 1(Integer), 8(Long)
2022-02-11 11:12:04.141 DEBUG 36600 --- [http-nio-8065-exec-2] c.y.e.m.ArticleMapper.pageArticleDTOWeb  : <==      Total: 7
2022-02-11 11:12:04.142 DEBUG 36600 --- [http-nio-8065-exec-2] c.y.e.mapper.TagMapper.listTagVo         : ==>  Preparing: SELECT t1.*, COUNT(t2.article_id) article_counts FROM tag t1 LEFT JOIN article_tag_relation t2 ON t1.id = t2.tag_id and t2.deleted = 0 WHERE t1.deleted = 0 GROUP BY t1.id
2022-02-11 11:12:04.142 DEBUG 36600 --- [http-nio-8065-exec-2] c.y.e.mapper.TagMapper.listTagVo         : ==> Parameters: 
2022-02-11 11:12:04.152 DEBUG 36600 --- [http-nio-8065-exec-2] c.y.e.mapper.TagMapper.listTagVo         : <==      Total: 7
2022-02-11 11:12:04.152 DEBUG 36600 --- [http-nio-8065-exec-2] c.y.e.m.CategoryMapper.listCategoryVo    : ==>  Preparing: SELECT t1.id, t1.NAME, COUNT(t2.category_id) article_counts FROM category t1 LEFT JOIN article t2 ON t1.id = t2.category_id and t2.deleted = 0 and t2.status != 0 where t1.deleted = 0 GROUP BY t1.id
2022-02-11 11:12:04.152 DEBUG 36600 --- [http-nio-8065-exec-2] c.y.e.m.CategoryMapper.listCategoryVo    : ==> Parameters: 
2022-02-11 11:12:04.161 DEBUG 36600 --- [http-nio-8065-exec-2] c.y.e.m.CategoryMapper.listCategoryVo    : <==      Total: 2
2022-02-11 11:12:04.161 DEBUG 36600 --- [http-nio-8065-exec-2] c.y.e.mapper.UserMapper.getUser          : ==>  Preparing: SELECT * FROM user WHERE deleted = 0 AND id = ?
2022-02-11 11:12:04.161 DEBUG 36600 --- [http-nio-8065-exec-2] c.y.e.mapper.UserMapper.getUser          : ==> Parameters: 1(Long)
2022-02-11 11:12:04.170 DEBUG 36600 --- [http-nio-8065-exec-2] c.y.e.mapper.UserMapper.getUser          : <==      Total: 1
2022-02-11 11:12:04.171 DEBUG 36600 --- [http-nio-8065-exec-2] c.y.e.mapper.UserMapper.updateById       : ==>  Preparing: UPDATE user SET qq=?, email=?, wechat=?, avatar=?, banner=?, nickname=?, user_signature=?, views=?, create_time=?, update_time=? WHERE id=? AND deleted=0
2022-02-11 11:12:04.171 DEBUG 36600 --- [http-nio-8065-exec-2] c.y.e.mapper.UserMapper.updateById       : ==> Parameters: 2044619214(String), lyric0926@163.com(String), 17805428855(String), https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2021-07-11/6a879a71-ca69-4ef3-a5f7-e8c6f67dd0b7Screenshot_20210424_204530.jpg(String), https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2021-09-16/fdb78008-7df7-4224-8d3a-c97268b9b066wallhaven-v95om8.jpg(String), lyric(String), 许多事情我们的确无能为力。
但即使如此我们也不该因此消沉不是吗？
乐观起来，忘记伤痛继续前行远比一次又一次揭开伤疤要好得多！(String), 14582(Integer), 2020-09-02 15:16:51.0(Timestamp), 2022-02-11 11:12:04.171(Timestamp), 1(Long)
2022-02-11 11:12:04.190 DEBUG 36600 --- [http-nio-8065-exec-2] c.y.e.mapper.UserMapper.updateById       : <==    Updates: 1
2022-02-11 11:12:04.190 DEBUG 36600 --- [http-nio-8065-exec-2] c.y.e.m.T.listTechnicalSupportVo         : ==>  Preparing: SELECT * FROM technical_support where deleted = 0
2022-02-11 11:12:04.191 DEBUG 36600 --- [http-nio-8065-exec-2] c.y.e.m.T.listTechnicalSupportVo         : ==> Parameters: 
2022-02-11 11:12:04.200 DEBUG 36600 --- [http-nio-8065-exec-2] c.y.e.m.T.listTechnicalSupportVo         : <==      Total: 3
2022-02-11 11:12:22.162 DEBUG 36600 --- [http-nio-8065-exec-4] c.y.e.mapper.TagMapper.listTagDTO        : ==>  Preparing: select * from tag where deleted = 0
2022-02-11 11:12:22.162 DEBUG 36600 --- [http-nio-8065-exec-7] c.y.e.m.CategoryMapper.listCategoryDTO   : ==>  Preparing: select * from category where deleted = 0
2022-02-11 11:12:22.163 DEBUG 36600 --- [http-nio-8065-exec-4] c.y.e.mapper.TagMapper.listTagDTO        : ==> Parameters: 
2022-02-11 11:12:22.163 DEBUG 36600 --- [http-nio-8065-exec-7] c.y.e.m.CategoryMapper.listCategoryDTO   : ==> Parameters: 
2022-02-11 11:12:22.166 DEBUG 36600 --- [http-nio-8065-exec-1] c.y.e.m.A.pageArticleDTO_mpCount         : ==>  Preparing: SELECT COUNT(*) FROM (SELECT t1.id, t1.title, t1.stamp, t1.comments, t1.original, t1.status, t1.recommend, t1.appreciate, t1.views, t1.create_time, t1.update_time, t1.user_id, t1.category_id, t2.name category_name, COUNT(t3.id) comment_counts FROM article t1 LEFT JOIN category t2 ON t1.category_id = t2.id LEFT JOIN comment t3 ON t1.id = t3.article_id WHERE 1 = 1 AND t1.deleted = 0 GROUP BY t1.id ORDER BY t1.update_time DESC) TOTAL
2022-02-11 11:12:22.167 DEBUG 36600 --- [http-nio-8065-exec-1] c.y.e.m.A.pageArticleDTO_mpCount         : ==> Parameters: 
2022-02-11 11:12:22.172 DEBUG 36600 --- [http-nio-8065-exec-7] c.y.e.m.CategoryMapper.listCategoryDTO   : <==      Total: 2
2022-02-11 11:12:22.173 DEBUG 36600 --- [http-nio-8065-exec-4] c.y.e.mapper.TagMapper.listTagDTO        : <==      Total: 7
2022-02-11 11:12:22.176 DEBUG 36600 --- [http-nio-8065-exec-1] c.y.e.m.A.pageArticleDTO_mpCount         : <==      Total: 1
2022-02-11 11:12:22.177 DEBUG 36600 --- [http-nio-8065-exec-1] c.y.e.m.ArticleMapper.pageArticleDTO     : ==>  Preparing: SELECT t1.id, t1.title, t1.stamp, t1.comments, t1.original, t1.status, t1.recommend, t1.appreciate, t1.views, t1.create_time, t1.update_time, t1.user_id, t1.category_id, t2.name category_name, COUNT(t3.id) comment_counts FROM article t1 left join category t2 on t1.category_id = t2.id left join comment t3 on t1.id = t3.article_id where 1 = 1 and t1.deleted = 0 GROUP BY t1.id ORDER BY t1.update_time DESC LIMIT ?
2022-02-11 11:12:22.177 DEBUG 36600 --- [http-nio-8065-exec-1] c.y.e.m.ArticleMapper.pageArticleDTO     : ==> Parameters: 10(Long)
2022-02-11 11:12:22.190 DEBUG 36600 --- [http-nio-8065-exec-1] c.y.e.m.ArticleMapper.pageArticleDTO     : <==      Total: 8
2022-02-11 11:12:22.191 DEBUG 36600 --- [http-nio-8065-exec-1] c.y.e.m.A.listArticleTagRelation         : ==>  Preparing: SELECT t1.article_id, t1.tag_id, t2.NAME tag_name FROM `article_tag_relation` t1 LEFT JOIN tag t2 ON t1.tag_id = t2.id where t1.deleted = 0 and t1.article_id in ( ? , ? , ? , ? , ? , ? , ? , ? )
2022-02-11 11:12:22.191 DEBUG 36600 --- [http-nio-8065-exec-1] c.y.e.m.A.listArticleTagRelation         : ==> Parameters: 1491400438823596033(Long), 1478682493945196546(Long), 1473299945589125122(Long), 1471060099663474689(Long), 1463756487044231169(Long), 1461568605407682562(Long), 1459070158997823489(Long), 1455442044157722626(Long)
2022-02-11 11:12:22.201 DEBUG 36600 --- [http-nio-8065-exec-1] c.y.e.m.A.listArticleTagRelation         : <==      Total: 8
2022-02-11 11:12:23.775 DEBUG 36600 --- [http-nio-8065-exec-5] c.y.e.m.CategoryMapper.listCategoryDTO   : ==>  Preparing: select * from category where deleted = 0
2022-02-11 11:12:23.775 DEBUG 36600 --- [http-nio-8065-exec-2] c.y.e.mapper.TagMapper.listTagDTO        : ==>  Preparing: select * from tag where deleted = 0
2022-02-11 11:12:23.775 DEBUG 36600 --- [http-nio-8065-exec-10] c.y.e.m.ArticleMapper.getArticleDetail   : ==>  Preparing: SELECT t1.id, t1.title, t1.stamp, t1.comments, t1.original, t1.content, t1.status, t1.recommend, t1.appreciate, t1.views, t1.create_time, t1.update_time, t1.user_id, t1.category_id, t2.name category_name FROM article t1 left join category t2 on t1.category_id = t2.id where t1.deleted = 0 and t1.id = ?
2022-02-11 11:12:23.775 DEBUG 36600 --- [http-nio-8065-exec-5] c.y.e.m.CategoryMapper.listCategoryDTO   : ==> Parameters: 
2022-02-11 11:12:23.775 DEBUG 36600 --- [http-nio-8065-exec-2] c.y.e.mapper.TagMapper.listTagDTO        : ==> Parameters: 
2022-02-11 11:12:23.775 DEBUG 36600 --- [http-nio-8065-exec-10] c.y.e.m.ArticleMapper.getArticleDetail   : ==> Parameters: 1491400438823596033(Long)
2022-02-11 11:12:23.791 DEBUG 36600 --- [http-nio-8065-exec-5] c.y.e.m.CategoryMapper.listCategoryDTO   : <==      Total: 2
2022-02-11 11:12:23.791 DEBUG 36600 --- [http-nio-8065-exec-2] c.y.e.mapper.TagMapper.listTagDTO        : <==      Total: 7
2022-02-11 11:12:23.791 DEBUG 36600 --- [http-nio-8065-exec-10] c.y.e.m.A.listTagByArticleId             : ====>  Preparing: SELECT t2.id, t2.name FROM article_tag_relation t1 LEFT JOIN tag t2 ON t1.tag_id = t2.id WHERE t1.deleted = 0 and t1.article_id = ?
2022-02-11 11:12:23.791 DEBUG 36600 --- [http-nio-8065-exec-10] c.y.e.m.A.listTagByArticleId             : ====> Parameters: 1491400438823596033(Long)
2022-02-11 11:12:23.805 DEBUG 36600 --- [http-nio-8065-exec-10] c.y.e.m.A.listTagByArticleId             : <====      Total: 0
2022-02-11 11:12:23.806 DEBUG 36600 --- [http-nio-8065-exec-10] c.y.e.m.ArticleMapper.getArticleDetail   : <==      Total: 1
2022-02-11 11:13:26.029 DEBUG 36600 --- [http-nio-8065-exec-1] c.y.e.mapper.ArticleMapper.getArticle    : ==>  Preparing: SELECT t1.id, t1.title, t1.stamp, t1.comments, t1.original, t1.status, t1.recommend, t1.appreciate, t1.views, t1.create_time, t1.update_time, t1.user_id, t1.category_id, t2.name category_name FROM article t1 left join category t2 on t1.category_id = t2.id where t1.deleted = 0 and t1.id = ?
2022-02-11 11:13:26.029 DEBUG 36600 --- [http-nio-8065-exec-1] c.y.e.mapper.ArticleMapper.getArticle    : ==> Parameters: 1491400438823596033(Long)
2022-02-11 11:13:26.039 DEBUG 36600 --- [http-nio-8065-exec-1] c.y.e.m.A.listTagByArticleId             : ====>  Preparing: SELECT t2.id, t2.name FROM article_tag_relation t1 LEFT JOIN tag t2 ON t1.tag_id = t2.id WHERE t1.deleted = 0 and t1.article_id = ?
2022-02-11 11:13:26.040 DEBUG 36600 --- [http-nio-8065-exec-1] c.y.e.m.A.listTagByArticleId             : ====> Parameters: 1491400438823596033(Long)
2022-02-11 11:13:26.047 DEBUG 36600 --- [http-nio-8065-exec-1] c.y.e.m.A.listTagByArticleId             : <====      Total: 0
2022-02-11 11:13:26.048 DEBUG 36600 --- [http-nio-8065-exec-1] c.y.e.mapper.ArticleMapper.getArticle    : <==      Total: 1
2022-02-11 11:13:31.187 DEBUG 36600 --- [http-nio-8065-exec-2] c.y.e.mapper.ArticleMapper.selectById    : ==>  Preparing: SELECT id,title,content,first_picture,stamp,comments,original,status,recommend,appreciate,views,create_time,update_time,category_id,user_id,deleted FROM article WHERE id=? AND deleted=0
2022-02-11 11:13:31.187 DEBUG 36600 --- [http-nio-8065-exec-2] c.y.e.mapper.ArticleMapper.selectById    : ==> Parameters: 1491400438823596033(Long)
2022-02-11 11:13:31.187 DEBUG 36600 --- [http-nio-8065-exec-2] c.y.e.mapper.ArticleMapper.selectById    : <==      Total: 1
2022-02-11 11:13:31.202 DEBUG 36600 --- [http-nio-8065-exec-2] c.y.e.mapper.ArticleMapper.updateById    : ==>  Preparing: UPDATE article SET title=?, content=?, stamp=?, comments=?, status=?, recommend=?, appreciate=?, update_time=?, category_id=? WHERE id=? AND deleted=0
2022-02-11 11:13:31.202 DEBUG 36600 --- [http-nio-8065-exec-2] c.y.e.mapper.ArticleMapper.updateById    : ==> Parameters: 优化sql(String), ## sql优化

### sql优化需知

mysql版本：Server version: 8.0.13 MySQL

sql优化遵从三点：

- 最大化利用索引；
- 尽可能避免全表扫描；
- 减少无效数据的查询；

#### select语句-语法顺序

```sql
1. SELECT 
2. DISTINCT <select_list>
3. FROM <left_table>
4. <join_type> JOIN <right_table>
5. ON <join_condition>
6. WHERE <where_condition>
7. GROUP BY <group_by_list>
8. HAVING <having_condition>
9. ORDER BY <order_by_condition>
10.LIMIT <limit_number>
```

#### select语句-执行顺序

**FROM**
<表名> # 选取表，将多个表数据通过笛卡尔积变成一个表。
**ON**
<筛选条件> # 对笛卡尔积的虚表进行筛选
**JOIN** <join, left join, right join...>
<join表> # 指定join，用于添加数据到on之后的虚表中，例如left join会将左表的剩余数据添加到虚表中
**WHERE**
<where条件> # 对上述虚表进行筛选
**GROUP BY**
<分组条件> # 分组
<SUM()等聚合函数> # 用于having子句进行判断，在书写上这类聚合函数是写在having判断里面的
**HAVING**
<分组筛选> # 对分组后的结果进行聚合筛选
**SELECT**
<返回数据列表> # 返回的单列必须在group by子句中，聚合函数除外
**DISTINCT**
\# 数据除重
**ORDER BY**
<排序条件> # 排序
**LIMIT**
<行数限制>

#### 优化关键字：explain

针对慢sql，常常用explain这个命令来查看一个这些SQL语句的执行计划，查看该SQL语句有没有使用上了索引，有没有做全表扫描，这都可以通过explain命令来查看。所以我们深入了解MySQL的基于开销的优化器，还可以获得很多可能被优化器考虑到的访问策略的细节，以及当运行SQL语句时哪种策略预计会被优化器采用。

![image-20220209103041703.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/e69179ee-45ae-470d-b266-a749eb4cb6e6.png)
下面对这些字段出现的可能进行解释：

### 1、id

表示select标识符，同时表明执行顺序，也就是说id是一个查询的序列号，查询序号即为sql语句执行的顺序。

（1）当id值相同时，按从上到下的顺序执行。

（2）当id全部不同时，按id从大到小执行。

（3）当id部分不同时，先执行id大的，id相同的，按从上到下的顺序执行。

#### 2、select_type

（1）simple：表示简单的select，没有union和子查询

（2）primary：最外面的查询 或者 主查询，在有子查询的语句中，最外面的select查询就是primary

（3）subquery：子查询

（4）union：union语句的第二个或者说是后面那一个select

（5）union result：union之后的结果

（6）dependent unoin：unoin 中的第二个或随后的 select 查询，依赖于外部查询的结果集

（7）dependent subquery：子查询中的第一个 select 查询，依赖于外部 查询的结果集

（8）derived：衍生表（5.7版本中不存在这一个）

#### 3、table

通常是表名，或者表的别名，或者一个为查询产生临时表的标示符（如派生表、子查询、集合）

#### 4、partitions

使用的哪些分区（对于非分区表值为null），在5.5版本中需要加上explain partitions select ...

#### 5.type

（1）const：表中最多有一个匹配行，const用于比较primary key 或者unique索引。因为只匹配一行数据，所以很快

（2）eq_ref：唯一性索引扫描，对于每个来自于前面的表的记录，从该表中读取唯一一行

（3）ref：非唯一性索引扫描，对于每个来自于前面的表的记录，所有匹配的行从这张表取出

（4）ref_or_null：类似于ref，但是可以搜索包含null值的行，例如：select * from student where address='xxx' or address is null，需要在address建立索引。

（5）index_merge：查询语句用到了一张表的多个索引时，mysql会将多个索引合并到一起

（6）range：按指定范围（如in、<、>、between and等，但是前提是此字段要建立索引）来检索，很常见。如：select * from student where id < 5，id上要有索引。

（7）index：全”表“扫描，但是是在索引树中扫描，通常比ALL快，因为索引文件通常比数据文件小，index扫描是通过二叉树的方式扫描，而all是扫描物理表。（也就是说虽然all和index都是读全表，但index是从索引中读取的，而all是从硬盘中读的）。例如：select name from student，但name字段上需要建立索引，也就是查询的字段属于索引中的字段。

（8）all：全表扫描，扫描完整的物理表，此时就需要优化了。

这8种type代表性能由好到差，一般优化可达range或者ref

#### 6.possible_keys

指出 MySQL 能在该表中可能使用的索引，显示的是索引的名称，多个索引用逗号隔开，如果没有，则为null。

#### 7.key

MySQL决定实际用到的索引，显示的是索引的名称，多个索引用逗号隔开，如果没有，则为null。

#### 8.key_len

当用到组合索引的时候判断索引是否完全用上。

> 实例：假设student表中有id int,name char(20) DEFAULT NULL,address varchar(20) DEFAULT NULL,remark varchar(20) NOT NULL 字段，建立的索引是 idx_address_remark（在address和remark上建立的组合索引）
>
> 查询的sql是：select * from student where address='深圳' and remark='java coder'，此时，执行计划中的key_len是 （20*3+1+2）+ （20*3+2）= 125，那么这个是怎么得来的呢？
>
> 解析：20表示建表的时候 varchar(20) ，3表示utf8字符集占用3个字节，1表示MySQL需要1个字节表示null，2表示变长字段（varchar是变长的）。  
>
> 假设drop掉刚刚建立的索引，新建索引 idx_name_address（在name和address上建立组合索引）
>
> 查询的sql是：select * from student where name='xbq' and address='深圳'，此时，执行计划中的key_len是 （20*3+1）+ （20*3+2）= 123，那么这个值是怎么得来的呢？
>
> 解析：20表示建表的时候 char(20) ，3表示utf8字符集占用3个字节，1表示MySQL需要1个字节标识null，即 20*3+1，后面的同样的道理。

key_len只计算where条件用到的索引长度，而排序和分组就算用到了索引，也不会计算到key_len中。

计算key_len的公式：

> varchr(10)变长字段且允许NULL = 10 * ( character set：utf8=3,gbk=2,latin1=1) + 1(NULL) + 2(变长字段)
>
> varchr(10)变长字段且不允许NULL = 10 *( character set：utf8=3,gbk=2,latin1=1) + 2(变长字段)
>
> char(10)固定字段且允许NULL = 10 * ( character set：utf8=3,gbk=2,latin1=1)+1(NULL)
>
> char(10)固定字段且不允许NULL = 10 * ( character set：utf8=3,gbk=2,latin1=1)

#### 9.ref

显示索引的哪一列被使用了，如果可能的话，是一个常数

#### 10.rows

显示mysql认为执行查询时必须要返回的行数，可结合type和key分析，没有用上索引的情况下，会全表扫描。rows的值越小越好，说明检索的数据少

#### 11.filtered

给出了一个百分比的值，这个百分比值和rows列的值一起使用，可以估计出那些将要和执行计划中的前一个表（前一个表就是指id列的值比当前表的id小的表）进行连接的行的数目。

这一列在5.5版本中，需要加上 explain extended select ....。

#### 12.extra

此字段显示一些额外的信息，但是此字段的部分值具有优化的参考意义。

（1）using where：表示查询使用了where 语句来处理结果

（2）using index：表示使用了覆盖索引。这个值重点强调了只需要使用索引就可以满足查询表的要求，不需要直接访问表数据。

（3）using join buffer：这个值强调了在获取连接条件时没有使用索引，并且需要连接缓冲区来存储中间结果。如果出现了这个值，那应该注意，根据查询的具体情况可能需要添加索引来改进性能

（4）using filesort：这是 order by 语句的结果。这可能是一个CPU密集型的过程。using filesort表示出现了文件内排序，表示很不好的现象，必须要优化，特别是大表，可以通过选择合适的索引来改进性能，用索引来为查询结果排序。

（5）using temporary：mysql需要创建一张临时表来保存中间结果。 也就是说，需要先把数据放到临时表中，然后从临时表中获取需要的数据。出现这种临时表，也是必须需要优化的地方，特别是数据量大的情况。两个常见的原因是在来自不同表的列上使用了distinct，或者使用了不同的 order by 和 group by 列。

### sql索引优化

对查询进行优化，应尽量避免全表扫描，首先应考虑在 where 及 order by 涉及的列上建立索引。

#### 1、避免在where子句中使用!=或<或>操作符，否则将引擎放弃使用索引而进行全表扫描。

![image-20220209110259285.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/201dd710-d7d3-48c3-a5bd-49d822b470b4.png)

但该效果仅仅是让该字段索引失效，比如以上面的例子来说，如果有以order_status为首的联合索引，那么该联合索引不能命中，但如果还有其他单列索引，是仍然可以命中索引的。下面的语句都是一样的，失效只是导致当前索引失效。

![image-20220209110604150.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/c9b93726-dc7d-4736-8ea4-8f3c85ba93d7.png)

#### 2、尽量避免在字段开头模糊查询，会导致数据库引擎放弃索引进行全表扫描。

```text
SELECT * FROM sys_job_log WHERE job_name like '%HandleCustomerDayAmountChangeJob%'
```

优化方式：尽量在字段后面使用模糊查询。如下：

```text
SELECT * FROM sys_job_log WHERE job_name like 'HandleCustomerDayAmountChangeJob%'
```

如果需求是要在前面使用模糊查询，

- 使用FullText全文索引，用match against 检索
- 数据量较大的情况，建议引用ElasticSearch、solr，亿级数据量检索速度秒级

下面是全文索引

![image-20220209115051398.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/33976da2-3b7b-4aeb-96cf-cc306d43a392.png)

---分割线---

![image-20220209115205488.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/d99cde70-8a8d-4a3e-aebf-360eba779271.png)

#### 3、关于IN和OR和IS NULL。

mysql在8.0.13的版本已经优化了关于IN、OR和IS NULL的索引命中

![image-20220209193523227.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/2e52fd21-b787-45c9-ae59-032cf26c4d18.png)

#### 4、尽量避免使用NOT IN或IS NOT NULL等否定关键字，会导致数据库引擎放弃索引进行全表扫描。

![image-20220209193723159.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/6923c283-2fef-4306-8283-57064e15200b.png)

---分割线---

![image-20220209194131592.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/2e3ed807-0c96-42c4-9849-cd4db5b14b65.png)

#### 5、尽量避免在where条件中等号的左侧进行表达式、函数操作，会导致数据库引擎放弃索引进行全表扫描。

![image-20220209195726228.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/cf55939c-496a-41c3-80cd-986e6eadd9d2.png)

---分割线---

![image-20220209195653187.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/697a7095-96f7-4449-98fd-771e9ff2270b.png)

#### 6、where条件中没有联合索引的前置项导致联合索引完全失效

![image-20220209202643790.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/b6db75f0-65fc-4cdb-bf27-a90c76ee4d52.png)

**结果2**![image-20220209202741884.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/b06b832e-f570-4a15-9c07-47e1c6a13bc8.png)

**结果3**![image-20220209202748838.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/82c2e67d-73bd-4244-b274-011a48d3d096.png)

**结果4**![image-20220209202757561.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/cf55f3ad-ed60-46aa-af2d-c37e66649449.png)

**结果5**![image-20220209202803738.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/d0127e0b-cd47-457e-92af-9c1ffbca8648.png)

最左匹配法则，where条件中必须包括联合索引最左边的一项，否则无法命中索引。

这里需要注意的是mysql中会内部优化where的条件，来匹配最佳的索引。

#### 7、隐式类型转换造成不使用索引

如下SQL语句由于索引对列类型为varchar，但给定的值为数值，涉及隐式类型转换，造成不能正确走索引。

![image-20220209203710764.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/1ca7a281-74e6-4f4e-a18e-3340fd9d413b.png)

![image-20220209203728796.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/022fb57a-dabb-4ffc-a49e-3e059f3df368.png)

--------未完成----------

### 语句优化

tips：

1、避免将常更新的字段设置为索引

2、避免将区分度不大的字段设置为索引

(String), true(Boolean), true(Boolean), true(Boolean), true(Boolean), true(Boolean), 2022-02-11 11:13:31.187(Timestamp), 1446769938234671105(Long), 1491400438823596033(Long)
2022-02-11 11:13:31.219 DEBUG 36600 --- [http-nio-8065-exec-2] c.y.e.mapper.ArticleMapper.updateById    : <==    Updates: 1
2022-02-11 11:13:31.219 DEBUG 36600 --- [http-nio-8065-exec-2] c.y.e.m.A.deleteReally                   : ==>  Preparing: DELETE FROM article_tag_relation WHERE article_id = ?
2022-02-11 11:13:31.220 DEBUG 36600 --- [http-nio-8065-exec-2] c.y.e.m.A.deleteReally                   : ==> Parameters: 1491400438823596033(Long)
2022-02-11 11:13:31.227 DEBUG 36600 --- [http-nio-8065-exec-2] c.y.e.m.A.deleteReally                   : <==    Updates: 0
2022-02-11 11:13:31.661 DEBUG 36600 --- [http-nio-8065-exec-5] c.y.e.mapper.TagMapper.listTagDTO        : ==>  Preparing: select * from tag where deleted = 0
2022-02-11 11:13:31.661 DEBUG 36600 --- [http-nio-8065-exec-5] c.y.e.mapper.TagMapper.listTagDTO        : ==> Parameters: 
2022-02-11 11:13:31.670 DEBUG 36600 --- [http-nio-8065-exec-5] c.y.e.mapper.TagMapper.listTagDTO        : <==      Total: 7
2022-02-11 11:13:34.406 DEBUG 36600 --- [http-nio-8065-exec-10] c.y.e.m.A.pageArticleDTOWeb_mpCount      : ==>  Preparing: SELECT COUNT(*) FROM article WHERE deleted = 0 AND status = ?
2022-02-11 11:13:34.407 DEBUG 36600 --- [http-nio-8065-exec-10] c.y.e.m.A.pageArticleDTOWeb_mpCount      : ==> Parameters: 1(Integer)
2022-02-11 11:13:34.415 DEBUG 36600 --- [http-nio-8065-exec-10] c.y.e.m.A.pageArticleDTOWeb_mpCount      : <==      Total: 1
2022-02-11 11:13:34.415 DEBUG 36600 --- [http-nio-8065-exec-10] c.y.e.m.ArticleMapper.pageArticleDTOWeb  : ==>  Preparing: SELECT id, title, create_time, update_time FROM article where deleted = 0 and status = ? ORDER BY update_time DESC LIMIT ?
2022-02-11 11:13:34.416 DEBUG 36600 --- [http-nio-8065-exec-10] c.y.e.m.ArticleMapper.pageArticleDTOWeb  : ==> Parameters: 1(Integer), 8(Long)
2022-02-11 11:13:34.424 DEBUG 36600 --- [http-nio-8065-exec-10] c.y.e.m.ArticleMapper.pageArticleDTOWeb  : <==      Total: 8
2022-02-11 11:13:34.424 DEBUG 36600 --- [http-nio-8065-exec-10] c.y.e.mapper.TagMapper.listTagVo         : ==>  Preparing: SELECT t1.*, COUNT(t2.article_id) article_counts FROM tag t1 LEFT JOIN article_tag_relation t2 ON t1.id = t2.tag_id and t2.deleted = 0 WHERE t1.deleted = 0 GROUP BY t1.id
2022-02-11 11:13:34.424 DEBUG 36600 --- [http-nio-8065-exec-10] c.y.e.mapper.TagMapper.listTagVo         : ==> Parameters: 
2022-02-11 11:13:34.433 DEBUG 36600 --- [http-nio-8065-exec-10] c.y.e.mapper.TagMapper.listTagVo         : <==      Total: 7
2022-02-11 11:13:34.433 DEBUG 36600 --- [http-nio-8065-exec-10] c.y.e.m.CategoryMapper.listCategoryVo    : ==>  Preparing: SELECT t1.id, t1.NAME, COUNT(t2.category_id) article_counts FROM category t1 LEFT JOIN article t2 ON t1.id = t2.category_id and t2.deleted = 0 and t2.status != 0 where t1.deleted = 0 GROUP BY t1.id
2022-02-11 11:13:34.434 DEBUG 36600 --- [http-nio-8065-exec-10] c.y.e.m.CategoryMapper.listCategoryVo    : ==> Parameters: 
2022-02-11 11:13:34.442 DEBUG 36600 --- [http-nio-8065-exec-10] c.y.e.m.CategoryMapper.listCategoryVo    : <==      Total: 2
2022-02-11 11:13:34.443 DEBUG 36600 --- [http-nio-8065-exec-10] c.y.e.mapper.UserMapper.getUser          : ==>  Preparing: SELECT * FROM user WHERE deleted = 0 AND id = ?
2022-02-11 11:13:34.443 DEBUG 36600 --- [http-nio-8065-exec-10] c.y.e.mapper.UserMapper.getUser          : ==> Parameters: 1(Long)
2022-02-11 11:13:34.450 DEBUG 36600 --- [http-nio-8065-exec-10] c.y.e.mapper.UserMapper.getUser          : <==      Total: 1
2022-02-11 11:13:34.451 DEBUG 36600 --- [http-nio-8065-exec-10] c.y.e.mapper.UserMapper.updateById       : ==>  Preparing: UPDATE user SET qq=?, email=?, wechat=?, avatar=?, banner=?, nickname=?, user_signature=?, views=?, create_time=?, update_time=? WHERE id=? AND deleted=0
2022-02-11 11:13:34.452 DEBUG 36600 --- [http-nio-8065-exec-10] c.y.e.mapper.UserMapper.updateById       : ==> Parameters: 2044619214(String), lyric0926@163.com(String), 17805428855(String), https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2021-07-11/6a879a71-ca69-4ef3-a5f7-e8c6f67dd0b7Screenshot_20210424_204530.jpg(String), https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2021-09-16/fdb78008-7df7-4224-8d3a-c97268b9b066wallhaven-v95om8.jpg(String), lyric(String), 许多事情我们的确无能为力。
但即使如此我们也不该因此消沉不是吗？
乐观起来，忘记伤痛继续前行远比一次又一次揭开伤疤要好得多！(String), 14583(Integer), 2020-09-02 15:16:51.0(Timestamp), 2022-02-11 11:13:34.451(Timestamp), 1(Long)
2022-02-11 11:13:34.469 DEBUG 36600 --- [http-nio-8065-exec-10] c.y.e.mapper.UserMapper.updateById       : <==    Updates: 1
2022-02-11 11:13:34.470 DEBUG 36600 --- [http-nio-8065-exec-10] c.y.e.m.T.listTechnicalSupportVo         : ==>  Preparing: SELECT * FROM technical_support where deleted = 0
2022-02-11 11:13:34.470 DEBUG 36600 --- [http-nio-8065-exec-10] c.y.e.m.T.listTechnicalSupportVo         : ==> Parameters: 
2022-02-11 11:13:34.478 DEBUG 36600 --- [http-nio-8065-exec-10] c.y.e.m.T.listTechnicalSupportVo         : <==      Total: 3
2022-02-11 11:25:08.812  INFO 40296 --- [restartedMain] c.yi.enhancement.EnhancementApplication  : Starting EnhancementApplication using Java 1.8.0_311 on LAPTOP-7I9LVMS7 with PID 40296 (E:\1-my-project\blog-enhancement\target\classes started by 刘文鉴 in E:\1-my-project\blog-enhancement)
2022-02-11 11:25:08.814 DEBUG 40296 --- [restartedMain] c.yi.enhancement.EnhancementApplication  : Running with Spring Boot v2.5.0, Spring v5.3.7
2022-02-11 11:25:08.814  INFO 40296 --- [restartedMain] c.yi.enhancement.EnhancementApplication  : No active profile set, falling back to default profiles: default
2022-02-11 11:25:08.842  INFO 40296 --- [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in E:\maven-repository\blog-enhancement-maven\blog-enhancement-repository\com\sun\xml\bind\jaxb-impl\2.2.3-1\jaxb-impl-2.2.3-1.jar referenced one or more files that do not exist: file:/E:/maven-repository/blog-enhancement-maven/blog-enhancement-repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jaxb-api.jar,file:/E:/maven-repository/blog-enhancement-maven/blog-enhancement-repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/activation.jar,file:/E:/maven-repository/blog-enhancement-maven/blog-enhancement-repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jsr173_1.0_api.jar,file:/E:/maven-repository/blog-enhancement-maven/blog-enhancement-repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jaxb1-impl.jar
2022-02-11 11:25:08.842  INFO 40296 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-02-11 11:25:08.842  INFO 40296 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-02-11 11:25:09.666  INFO 40296 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8065 (http)
2022-02-11 11:25:09.680  INFO 40296 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2022-02-11 11:25:09.680  INFO 40296 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.46]
2022-02-11 11:25:09.757  INFO 40296 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2022-02-11 11:25:09.757  INFO 40296 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 914 ms
2022-02-11 11:25:10.085  WARN 40296 --- [restartedMain] c.b.m.core.metadata.TableInfoHelper      : Can not find table primary key in Class: "com.yi.enhancement.model.entity.UserAvatar".
2022-02-11 11:25:10.979  INFO 40296 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2022-02-11 11:25:11.336  INFO 40296 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2022-02-11 11:25:11.888  INFO 40296 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8065 (http) with context path ''
2022-02-11 11:25:12.141  INFO 40296 --- [restartedMain] c.yi.enhancement.EnhancementApplication  : Started EnhancementApplication in 3.888 seconds (JVM running for 4.689)
2022-02-11 11:25:12.142  INFO 40296 --- [restartedMain] o.s.b.a.ApplicationAvailabilityBean      : Application availability state LivenessState changed to CORRECT
2022-02-11 11:25:12.143  INFO 40296 --- [restartedMain] o.s.b.a.ApplicationAvailabilityBean      : Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
2022-02-11 11:25:24.577  INFO 40296 --- [http-nio-8065-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-02-11 11:25:24.577  INFO 40296 --- [http-nio-8065-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2022-02-11 11:25:24.578  INFO 40296 --- [http-nio-8065-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2022-02-11 11:25:24.616  INFO 40296 --- [http-nio-8065-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2022-02-11 11:25:24.794  INFO 40296 --- [http-nio-8065-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2022-02-11 11:25:24.799 DEBUG 40296 --- [http-nio-8065-exec-1] c.y.e.m.CategoryMapper.listCategoryDTO   : ==>  Preparing: select * from category where deleted = 0
2022-02-11 11:25:24.814 DEBUG 40296 --- [http-nio-8065-exec-1] c.y.e.m.CategoryMapper.listCategoryDTO   : ==> Parameters: 
2022-02-11 11:25:24.839 DEBUG 40296 --- [http-nio-8065-exec-1] c.y.e.m.CategoryMapper.listCategoryDTO   : <==      Total: 2
2022-02-11 11:25:24.844 DEBUG 40296 --- [http-nio-8065-exec-3] c.y.e.m.A.pageArticleDTO_mpCount         : ==>  Preparing: SELECT COUNT(*) FROM (SELECT t1.id, t1.title, t1.stamp, t1.comments, t1.original, t1.status, t1.recommend, t1.appreciate, t1.views, t1.create_time, t1.update_time, t1.user_id, t1.category_id, t2.name category_name, COUNT(t3.id) comment_counts FROM article t1 LEFT JOIN category t2 ON t1.category_id = t2.id LEFT JOIN comment t3 ON t1.id = t3.article_id WHERE 1 = 1 AND t1.deleted = 0 GROUP BY t1.id ORDER BY t1.update_time DESC) TOTAL
2022-02-11 11:25:24.845 DEBUG 40296 --- [http-nio-8065-exec-3] c.y.e.m.A.pageArticleDTO_mpCount         : ==> Parameters: 
2022-02-11 11:25:24.856 DEBUG 40296 --- [http-nio-8065-exec-3] c.y.e.m.A.pageArticleDTO_mpCount         : <==      Total: 1
2022-02-11 11:25:24.861 DEBUG 40296 --- [http-nio-8065-exec-3] c.y.e.m.ArticleMapper.pageArticleDTO     : ==>  Preparing: SELECT t1.id, t1.title, t1.stamp, t1.comments, t1.original, t1.status, t1.recommend, t1.appreciate, t1.views, t1.create_time, t1.update_time, t1.user_id, t1.category_id, t2.name category_name, COUNT(t3.id) comment_counts FROM article t1 left join category t2 on t1.category_id = t2.id left join comment t3 on t1.id = t3.article_id where 1 = 1 and t1.deleted = 0 GROUP BY t1.id ORDER BY t1.update_time DESC LIMIT ?
2022-02-11 11:25:24.862 DEBUG 40296 --- [http-nio-8065-exec-3] c.y.e.m.ArticleMapper.pageArticleDTO     : ==> Parameters: 10(Long)
2022-02-11 11:25:24.877 DEBUG 40296 --- [http-nio-8065-exec-3] c.y.e.m.ArticleMapper.pageArticleDTO     : <==      Total: 8
2022-02-11 11:25:24.877 DEBUG 40296 --- [http-nio-8065-exec-2] c.y.e.mapper.TagMapper.listTagDTO        : ==>  Preparing: select * from tag where deleted = 0
2022-02-11 11:25:24.878 DEBUG 40296 --- [http-nio-8065-exec-2] c.y.e.mapper.TagMapper.listTagDTO        : ==> Parameters: 
2022-02-11 11:25:24.886 DEBUG 40296 --- [http-nio-8065-exec-3] c.y.e.m.A.listArticleTagRelation         : ==>  Preparing: SELECT t1.article_id, t1.tag_id, t2.NAME tag_name FROM `article_tag_relation` t1 LEFT JOIN tag t2 ON t1.tag_id = t2.id where t1.deleted = 0 and t1.article_id in ( ? , ? , ? , ? , ? , ? , ? , ? )
2022-02-11 11:25:24.887 DEBUG 40296 --- [http-nio-8065-exec-3] c.y.e.m.A.listArticleTagRelation         : ==> Parameters: 1491400438823596033(Long), 1478682493945196546(Long), 1473299945589125122(Long), 1471060099663474689(Long), 1463756487044231169(Long), 1461568605407682562(Long), 1459070158997823489(Long), 1455442044157722626(Long)
2022-02-11 11:25:24.888 DEBUG 40296 --- [http-nio-8065-exec-2] c.y.e.mapper.TagMapper.listTagDTO        : <==      Total: 7
2022-02-11 11:25:24.897 DEBUG 40296 --- [http-nio-8065-exec-3] c.y.e.m.A.listArticleTagRelation         : <==      Total: 8
2022-02-11 11:25:27.164 DEBUG 40296 --- [http-nio-8065-exec-4] c.y.e.m.ArticleMapper.getArticleDetail   : ==>  Preparing: SELECT t1.id, t1.title, t1.stamp, t1.comments, t1.original, t1.content, t1.status, t1.recommend, t1.appreciate, t1.views, t1.create_time, t1.update_time, t1.user_id, t1.category_id, t2.name category_name FROM article t1 left join category t2 on t1.category_id = t2.id where t1.deleted = 0 and t1.id = ?
2022-02-11 11:25:27.165 DEBUG 40296 --- [http-nio-8065-exec-4] c.y.e.m.ArticleMapper.getArticleDetail   : ==> Parameters: 1491400438823596033(Long)
2022-02-11 11:25:27.177 DEBUG 40296 --- [http-nio-8065-exec-4] c.y.e.m.A.listTagByArticleId             : ====>  Preparing: SELECT t2.id, t2.name FROM article_tag_relation t1 LEFT JOIN tag t2 ON t1.tag_id = t2.id WHERE t1.deleted = 0 and t1.article_id = ?
2022-02-11 11:25:27.177 DEBUG 40296 --- [http-nio-8065-exec-4] c.y.e.m.A.listTagByArticleId             : ====> Parameters: 1491400438823596033(Long)
2022-02-11 11:25:27.185 DEBUG 40296 --- [http-nio-8065-exec-4] c.y.e.m.A.listTagByArticleId             : <====      Total: 0
2022-02-11 11:25:27.186 DEBUG 40296 --- [http-nio-8065-exec-4] c.y.e.m.ArticleMapper.getArticleDetail   : <==      Total: 1
2022-02-11 11:25:27.461 DEBUG 40296 --- [http-nio-8065-exec-5] c.y.e.m.CategoryMapper.listCategoryDTO   : ==>  Preparing: select * from category where deleted = 0
2022-02-11 11:25:27.461 DEBUG 40296 --- [http-nio-8065-exec-5] c.y.e.m.CategoryMapper.listCategoryDTO   : ==> Parameters: 
2022-02-11 11:25:27.469 DEBUG 40296 --- [http-nio-8065-exec-6] c.y.e.mapper.TagMapper.listTagDTO        : ==>  Preparing: select * from tag where deleted = 0
2022-02-11 11:25:27.469 DEBUG 40296 --- [http-nio-8065-exec-6] c.y.e.mapper.TagMapper.listTagDTO        : ==> Parameters: 
2022-02-11 11:25:27.470 DEBUG 40296 --- [http-nio-8065-exec-5] c.y.e.m.CategoryMapper.listCategoryDTO   : <==      Total: 2
2022-02-11 11:25:27.479 DEBUG 40296 --- [http-nio-8065-exec-6] c.y.e.mapper.TagMapper.listTagDTO        : <==      Total: 7
2022-02-11 11:25:28.762 DEBUG 40296 --- [http-nio-8065-exec-7] c.y.e.mapper.ArticleMapper.getArticle    : ==>  Preparing: SELECT t1.id, t1.title, t1.stamp, t1.comments, t1.original, t1.status, t1.recommend, t1.appreciate, t1.views, t1.create_time, t1.update_time, t1.user_id, t1.category_id, t2.name category_name FROM article t1 left join category t2 on t1.category_id = t2.id where t1.deleted = 0 and t1.id = ?
2022-02-11 11:25:28.762 DEBUG 40296 --- [http-nio-8065-exec-7] c.y.e.mapper.ArticleMapper.getArticle    : ==> Parameters: 1491400438823596033(Long)
2022-02-11 11:25:28.772 DEBUG 40296 --- [http-nio-8065-exec-7] c.y.e.m.A.listTagByArticleId             : ====>  Preparing: SELECT t2.id, t2.name FROM article_tag_relation t1 LEFT JOIN tag t2 ON t1.tag_id = t2.id WHERE t1.deleted = 0 and t1.article_id = ?
2022-02-11 11:25:28.772 DEBUG 40296 --- [http-nio-8065-exec-7] c.y.e.m.A.listTagByArticleId             : ====> Parameters: 1491400438823596033(Long)
2022-02-11 11:25:28.780 DEBUG 40296 --- [http-nio-8065-exec-7] c.y.e.m.A.listTagByArticleId             : <====      Total: 0
2022-02-11 11:25:28.781 DEBUG 40296 --- [http-nio-8065-exec-7] c.y.e.mapper.ArticleMapper.getArticle    : <==      Total: 1
2022-02-11 11:25:31.022 DEBUG 40296 --- [http-nio-8065-exec-8] c.y.e.mapper.ArticleMapper.selectById    : ==>  Preparing: SELECT id,title,content,first_picture,stamp,comments,original,status,recommend,appreciate,views,create_time,update_time,category_id,user_id,deleted FROM article WHERE id=? AND deleted=0
2022-02-11 11:25:31.022 DEBUG 40296 --- [http-nio-8065-exec-8] c.y.e.mapper.ArticleMapper.selectById    : ==> Parameters: 1491400438823596033(Long)
2022-02-11 11:25:31.032 DEBUG 40296 --- [http-nio-8065-exec-8] c.y.e.mapper.ArticleMapper.selectById    : <==      Total: 1
2022-02-11 11:25:31.042 DEBUG 40296 --- [http-nio-8065-exec-8] c.y.e.mapper.ArticleMapper.updateById    : ==>  Preparing: UPDATE article SET title=?, content=?, stamp=?, comments=?, status=?, recommend=?, appreciate=?, update_time=?, category_id=? WHERE id=? AND deleted=0
2022-02-11 11:25:31.045 DEBUG 40296 --- [http-nio-8065-exec-8] c.y.e.mapper.ArticleMapper.updateById    : ==> Parameters: 优化sql(String), ## sql优化

### sql优化需知

mysql版本：Server version: 8.0.13 MySQL

sql优化遵从三点：

- 最大化利用索引；
- 尽可能避免全表扫描；
- 减少无效数据的查询；

#### select语句-语法顺序

```sql
1. SELECT 
2. DISTINCT <select_list>
3. FROM <left_table>
4. <join_type> JOIN <right_table>
5. ON <join_condition>
6. WHERE <where_condition>
7. GROUP BY <group_by_list>
8. HAVING <having_condition>
9. ORDER BY <order_by_condition>
10.LIMIT <limit_number>
```

#### select语句-执行顺序

**FROM**
<表名> # 选取表，将多个表数据通过笛卡尔积变成一个表。
**ON**
<筛选条件> # 对笛卡尔积的虚表进行筛选
**JOIN** <join, left join, right join...>
<join表> # 指定join，用于添加数据到on之后的虚表中，例如left join会将左表的剩余数据添加到虚表中
**WHERE**
<where条件> # 对上述虚表进行筛选
**GROUP BY**
<分组条件> # 分组
<SUM()等聚合函数> # 用于having子句进行判断，在书写上这类聚合函数是写在having判断里面的
**HAVING**
<分组筛选> # 对分组后的结果进行聚合筛选
**SELECT**
<返回数据列表> # 返回的单列必须在group by子句中，聚合函数除外
**DISTINCT**
\# 数据除重
**ORDER BY**
<排序条件> # 排序
**LIMIT**
<行数限制>

#### 优化关键字：explain

针对慢sql，常常用explain这个命令来查看一个这些SQL语句的执行计划，查看该SQL语句有没有使用上了索引，有没有做全表扫描，这都可以通过explain命令来查看。所以我们深入了解MySQL的基于开销的优化器，还可以获得很多可能被优化器考虑到的访问策略的细节，以及当运行SQL语句时哪种策略预计会被优化器采用。

![image-20220209103041703.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/e69179ee-45ae-470d-b266-a749eb4cb6e6.png)
下面对这些字段出现的可能进行解释：

### 1、id

表示select标识符，同时表明执行顺序，也就是说id是一个查询的序列号，查询序号即为sql语句执行的顺序。

（1）当id值相同时，按从上到下的顺序执行。

（2）当id全部不同时，按id从大到小执行。

（3）当id部分不同时，先执行id大的，id相同的，按从上到下的顺序执行。

#### 2、select_type

（1）simple：表示简单的select，没有union和子查询

（2）primary：最外面的查询 或者 主查询，在有子查询的语句中，最外面的select查询就是primary

（3）subquery：子查询

（4）union：union语句的第二个或者说是后面那一个select

（5）union result：union之后的结果

（6）dependent unoin：unoin 中的第二个或随后的 select 查询，依赖于外部查询的结果集

（7）dependent subquery：子查询中的第一个 select 查询，依赖于外部 查询的结果集

（8）derived：衍生表（5.7版本中不存在这一个）

#### 3、table

通常是表名，或者表的别名，或者一个为查询产生临时表的标示符（如派生表、子查询、集合）

#### 4、partitions

使用的哪些分区（对于非分区表值为null），在5.5版本中需要加上explain partitions select ...

#### 5.type

（1）const：表中最多有一个匹配行，const用于比较primary key 或者unique索引。因为只匹配一行数据，所以很快

（2）eq_ref：唯一性索引扫描，对于每个来自于前面的表的记录，从该表中读取唯一一行

（3）ref：非唯一性索引扫描，对于每个来自于前面的表的记录，所有匹配的行从这张表取出

（4）ref_or_null：类似于ref，但是可以搜索包含null值的行，例如：select * from student where address='xxx' or address is null，需要在address建立索引。

（5）index_merge：查询语句用到了一张表的多个索引时，mysql会将多个索引合并到一起

（6）range：按指定范围（如in、<、>、between and等，但是前提是此字段要建立索引）来检索，很常见。如：select * from student where id < 5，id上要有索引。

（7）index：全”表“扫描，但是是在索引树中扫描，通常比ALL快，因为索引文件通常比数据文件小，index扫描是通过二叉树的方式扫描，而all是扫描物理表。（也就是说虽然all和index都是读全表，但index是从索引中读取的，而all是从硬盘中读的）。例如：select name from student，但name字段上需要建立索引，也就是查询的字段属于索引中的字段。

（8）all：全表扫描，扫描完整的物理表，此时就需要优化了。

这8种type代表性能由好到差，一般优化可达range或者ref

#### 6.possible_keys

指出 MySQL 能在该表中可能使用的索引，显示的是索引的名称，多个索引用逗号隔开，如果没有，则为null。

#### 7.key

MySQL决定实际用到的索引，显示的是索引的名称，多个索引用逗号隔开，如果没有，则为null。

#### 8.key_len

当用到组合索引的时候判断索引是否完全用上。

> 实例：假设student表中有id int,name char(20) DEFAULT NULL,address varchar(20) DEFAULT NULL,remark varchar(20) NOT NULL 字段，建立的索引是 idx_address_remark（在address和remark上建立的组合索引）
>
> 查询的sql是：select * from student where address='深圳' and remark='java coder'，此时，执行计划中的key_len是 （20*3+1+2）+ （20*3+2）= 125，那么这个是怎么得来的呢？
>
> 解析：20表示建表的时候 varchar(20) ，3表示utf8字符集占用3个字节，1表示MySQL需要1个字节表示null，2表示变长字段（varchar是变长的）。  
>
> 假设drop掉刚刚建立的索引，新建索引 idx_name_address（在name和address上建立组合索引）
>
> 查询的sql是：select * from student where name='xbq' and address='深圳'，此时，执行计划中的key_len是 （20*3+1）+ （20*3+2）= 123，那么这个值是怎么得来的呢？
>
> 解析：20表示建表的时候 char(20) ，3表示utf8字符集占用3个字节，1表示MySQL需要1个字节标识null，即 20*3+1，后面的同样的道理。

key_len只计算where条件用到的索引长度，而排序和分组就算用到了索引，也不会计算到key_len中。

计算key_len的公式：

> varchr(10)变长字段且允许NULL = 10 * ( character set：utf8=3,gbk=2,latin1=1) + 1(NULL) + 2(变长字段)
>
> varchr(10)变长字段且不允许NULL = 10 *( character set：utf8=3,gbk=2,latin1=1) + 2(变长字段)
>
> char(10)固定字段且允许NULL = 10 * ( character set：utf8=3,gbk=2,latin1=1)+1(NULL)
>
> char(10)固定字段且不允许NULL = 10 * ( character set：utf8=3,gbk=2,latin1=1)

#### 9.ref

显示索引的哪一列被使用了，如果可能的话，是一个常数

#### 10.rows

显示mysql认为执行查询时必须要返回的行数，可结合type和key分析，没有用上索引的情况下，会全表扫描。rows的值越小越好，说明检索的数据少

#### 11.filtered

给出了一个百分比的值，这个百分比值和rows列的值一起使用，可以估计出那些将要和执行计划中的前一个表（前一个表就是指id列的值比当前表的id小的表）进行连接的行的数目。

这一列在5.5版本中，需要加上 explain extended select ....。

#### 12.extra

此字段显示一些额外的信息，但是此字段的部分值具有优化的参考意义。

（1）using where：表示查询使用了where 语句来处理结果

（2）using index：表示使用了覆盖索引。这个值重点强调了只需要使用索引就可以满足查询表的要求，不需要直接访问表数据。

（3）using join buffer：这个值强调了在获取连接条件时没有使用索引，并且需要连接缓冲区来存储中间结果。如果出现了这个值，那应该注意，根据查询的具体情况可能需要添加索引来改进性能

（4）using filesort：这是 order by 语句的结果。这可能是一个CPU密集型的过程。using filesort表示出现了文件内排序，表示很不好的现象，必须要优化，特别是大表，可以通过选择合适的索引来改进性能，用索引来为查询结果排序。

（5）using temporary：mysql需要创建一张临时表来保存中间结果。 也就是说，需要先把数据放到临时表中，然后从临时表中获取需要的数据。出现这种临时表，也是必须需要优化的地方，特别是数据量大的情况。两个常见的原因是在来自不同表的列上使用了distinct，或者使用了不同的 order by 和 group by 列。

### sql索引优化

对查询进行优化，应尽量避免全表扫描，首先应考虑在 where 及 order by 涉及的列上建立索引。

#### 1、避免在where子句中使用!=或<或>操作符，否则将引擎放弃使用索引而进行全表扫描。

![image-20220209110259285.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/201dd710-d7d3-48c3-a5bd-49d822b470b4.png)

但该效果仅仅是让该字段索引失效，比如以上面的例子来说，如果有以order_status为首的联合索引，那么该联合索引不能命中，但如果还有其他单列索引，是仍然可以命中索引的。下面的语句都是一样的，失效只是导致当前索引失效。

![image-20220209110604150.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/c9b93726-dc7d-4736-8ea4-8f3c85ba93d7.png)

#### 2、尽量避免在字段开头模糊查询，会导致数据库引擎放弃索引进行全表扫描。

```text
SELECT * FROM sys_job_log WHERE job_name like '%HandleCustomerDayAmountChangeJob%'
```

优化方式：尽量在字段后面使用模糊查询。如下：

```text
SELECT * FROM sys_job_log WHERE job_name like 'HandleCustomerDayAmountChangeJob%'
```

如果需求是要在前面使用模糊查询，

- 使用FullText全文索引，用match against 检索
- 数据量较大的情况，建议引用ElasticSearch、solr，亿级数据量检索速度秒级

下面是全文索引

![image-20220209115051398.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/33976da2-3b7b-4aeb-96cf-cc306d43a392.png)

---分割线---

![image-20220209115205488.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/d99cde70-8a8d-4a3e-aebf-360eba779271.png)

#### 3、关于IN和OR和IS NULL。

mysql在8.0.13的版本已经优化了关于IN、OR和IS NULL的索引命中

![image-20220209193523227.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/2e52fd21-b787-45c9-ae59-032cf26c4d18.png)

#### 4、尽量避免使用NOT IN或IS NOT NULL等否定关键字，会导致数据库引擎放弃索引进行全表扫描。

![image-20220209193723159.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/6923c283-2fef-4306-8283-57064e15200b.png)

---分割线---

![image-20220209194131592.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/2e3ed807-0c96-42c4-9849-cd4db5b14b65.png)

#### 5、尽量避免在where条件中等号的左侧进行表达式、函数操作，会导致数据库引擎放弃索引进行全表扫描。

![image-20220209195726228.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/cf55939c-496a-41c3-80cd-986e6eadd9d2.png)

---分割线---

![image-20220209195653187.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/697a7095-96f7-4449-98fd-771e9ff2270b.png)

#### 6、where条件中没有联合索引的前置项导致联合索引完全失效

![image-20220209202643790.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/b6db75f0-65fc-4cdb-bf27-a90c76ee4d52.png)

**结果2**![image-20220209202741884.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/b06b832e-f570-4a15-9c07-47e1c6a13bc8.png)

**结果3**![image-20220209202748838.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/82c2e67d-73bd-4244-b274-011a48d3d096.png)

**结果4**![image-20220209202757561.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/cf55f3ad-ed60-46aa-af2d-c37e66649449.png)

**结果5**![image-20220209202803738.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/d0127e0b-cd47-457e-92af-9c1ffbca8648.png)

最左匹配法则，where条件中必须包括联合索引最左边的一项，否则无法命中索引。

这里需要注意的是mysql中会内部优化where的条件，来匹配最佳的索引。

#### 7、隐式类型转换造成不使用索引

如下SQL语句由于索引对列类型为varchar，但给定的值为数值，涉及隐式类型转换，造成不能正确走索引。

![image-20220209203710764.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/1ca7a281-74e6-4f4e-a18e-3340fd9d413b.png)

![image-20220209203728796.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/022fb57a-dabb-4ffc-a49e-3e059f3df368.png)

--------未完成----------

### 语句优化

tips：

1、避免将常更新的字段设置为索引

2、避免将区分度不大的字段设置为索引

(String), true(Boolean), true(Boolean), false(Boolean), true(Boolean), true(Boolean), 2022-02-11 11:25:31.02(Timestamp), 1446769938234671105(Long), 1491400438823596033(Long)
2022-02-11 11:25:31.063 DEBUG 40296 --- [http-nio-8065-exec-8] c.y.e.mapper.ArticleMapper.updateById    : <==    Updates: 1
2022-02-11 11:25:31.066 DEBUG 40296 --- [http-nio-8065-exec-8] c.y.e.m.A.deleteReally                   : ==>  Preparing: DELETE FROM article_tag_relation WHERE article_id = ?
2022-02-11 11:25:31.066 DEBUG 40296 --- [http-nio-8065-exec-8] c.y.e.m.A.deleteReally                   : ==> Parameters: 1491400438823596033(Long)
2022-02-11 11:25:31.082 DEBUG 40296 --- [http-nio-8065-exec-8] c.y.e.m.A.deleteReally                   : <==    Updates: 0
2022-02-11 11:25:31.493 DEBUG 40296 --- [http-nio-8065-exec-9] c.y.e.mapper.TagMapper.listTagDTO        : ==>  Preparing: select * from tag where deleted = 0
2022-02-11 11:25:31.493 DEBUG 40296 --- [http-nio-8065-exec-9] c.y.e.mapper.TagMapper.listTagDTO        : ==> Parameters: 
2022-02-11 11:25:31.503 DEBUG 40296 --- [http-nio-8065-exec-9] c.y.e.mapper.TagMapper.listTagDTO        : <==      Total: 7
2022-02-11 11:25:40.498 DEBUG 40296 --- [http-nio-8065-exec-10] c.y.e.m.A.pageArticleDTOWeb_mpCount      : ==>  Preparing: SELECT COUNT(*) FROM article WHERE deleted = 0 AND status = ?
2022-02-11 11:25:40.499 DEBUG 40296 --- [http-nio-8065-exec-10] c.y.e.m.A.pageArticleDTOWeb_mpCount      : ==> Parameters: 1(Integer)
2022-02-11 11:25:40.507 DEBUG 40296 --- [http-nio-8065-exec-10] c.y.e.m.A.pageArticleDTOWeb_mpCount      : <==      Total: 1
2022-02-11 11:25:40.508 DEBUG 40296 --- [http-nio-8065-exec-10] c.y.e.m.ArticleMapper.pageArticleDTOWeb  : ==>  Preparing: SELECT id, title, create_time, update_time FROM article where deleted = 0 and status = ? ORDER BY update_time DESC LIMIT ?
2022-02-11 11:25:40.509 DEBUG 40296 --- [http-nio-8065-exec-10] c.y.e.m.ArticleMapper.pageArticleDTOWeb  : ==> Parameters: 1(Integer), 8(Long)
2022-02-11 11:25:40.519 DEBUG 40296 --- [http-nio-8065-exec-10] c.y.e.m.ArticleMapper.pageArticleDTOWeb  : <==      Total: 7
2022-02-11 11:25:40.520 DEBUG 40296 --- [http-nio-8065-exec-10] c.y.e.mapper.TagMapper.listTagVo         : ==>  Preparing: SELECT t1.*, COUNT(t2.article_id) article_counts FROM tag t1 LEFT JOIN article_tag_relation t2 ON t1.id = t2.tag_id and t2.deleted = 0 WHERE t1.deleted = 0 GROUP BY t1.id
2022-02-11 11:25:40.520 DEBUG 40296 --- [http-nio-8065-exec-10] c.y.e.mapper.TagMapper.listTagVo         : ==> Parameters: 
2022-02-11 11:25:40.530 DEBUG 40296 --- [http-nio-8065-exec-10] c.y.e.mapper.TagMapper.listTagVo         : <==      Total: 7
2022-02-11 11:25:40.531 DEBUG 40296 --- [http-nio-8065-exec-10] c.y.e.m.CategoryMapper.listCategoryVo    : ==>  Preparing: SELECT t1.id, t1.NAME, COUNT(t2.category_id) article_counts FROM category t1 LEFT JOIN article t2 ON t1.id = t2.category_id and t2.deleted = 0 and t2.status != 0 where t1.deleted = 0 GROUP BY t1.id
2022-02-11 11:25:40.531 DEBUG 40296 --- [http-nio-8065-exec-10] c.y.e.m.CategoryMapper.listCategoryVo    : ==> Parameters: 
2022-02-11 11:25:40.540 DEBUG 40296 --- [http-nio-8065-exec-10] c.y.e.m.CategoryMapper.listCategoryVo    : <==      Total: 2
2022-02-11 11:25:40.544 DEBUG 40296 --- [http-nio-8065-exec-10] c.y.e.mapper.UserMapper.getUser          : ==>  Preparing: SELECT * FROM user WHERE deleted = 0 AND id = ?
2022-02-11 11:25:40.544 DEBUG 40296 --- [http-nio-8065-exec-10] c.y.e.mapper.UserMapper.getUser          : ==> Parameters: 1(Long)
2022-02-11 11:25:40.553 DEBUG 40296 --- [http-nio-8065-exec-10] c.y.e.mapper.UserMapper.getUser          : <==      Total: 1
2022-02-11 11:25:40.557 DEBUG 40296 --- [http-nio-8065-exec-10] c.y.e.mapper.UserMapper.updateById       : ==>  Preparing: UPDATE user SET qq=?, email=?, wechat=?, avatar=?, banner=?, nickname=?, user_signature=?, views=?, create_time=?, update_time=? WHERE id=? AND deleted=0
2022-02-11 11:25:40.557 DEBUG 40296 --- [http-nio-8065-exec-10] c.y.e.mapper.UserMapper.updateById       : ==> Parameters: 2044619214(String), lyric0926@163.com(String), 17805428855(String), https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2021-07-11/6a879a71-ca69-4ef3-a5f7-e8c6f67dd0b7Screenshot_20210424_204530.jpg(String), https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2021-09-16/fdb78008-7df7-4224-8d3a-c97268b9b066wallhaven-v95om8.jpg(String), lyric(String), 许多事情我们的确无能为力。
但即使如此我们也不该因此消沉不是吗？
乐观起来，忘记伤痛继续前行远比一次又一次揭开伤疤要好得多！(String), 14584(Integer), 2020-09-02 15:16:51.0(Timestamp), 2022-02-11 11:25:40.557(Timestamp), 1(Long)
2022-02-11 11:25:40.574 DEBUG 40296 --- [http-nio-8065-exec-10] c.y.e.mapper.UserMapper.updateById       : <==    Updates: 1
2022-02-11 11:25:40.578 DEBUG 40296 --- [http-nio-8065-exec-10] c.y.e.m.T.listTechnicalSupportVo         : ==>  Preparing: SELECT * FROM technical_support where deleted = 0
2022-02-11 11:25:40.578 DEBUG 40296 --- [http-nio-8065-exec-10] c.y.e.m.T.listTechnicalSupportVo         : ==> Parameters: 
2022-02-11 11:25:40.586 DEBUG 40296 --- [http-nio-8065-exec-10] c.y.e.m.T.listTechnicalSupportVo         : <==      Total: 3
2022-02-11 11:26:22.715  INFO 12536 --- [restartedMain] c.yi.enhancement.EnhancementApplication  : Starting EnhancementApplication using Java 1.8.0_311 on LAPTOP-7I9LVMS7 with PID 12536 (E:\1-my-project\blog-enhancement\target\classes started by 刘文鉴 in E:\1-my-project\blog-enhancement)
2022-02-11 11:26:22.717 DEBUG 12536 --- [restartedMain] c.yi.enhancement.EnhancementApplication  : Running with Spring Boot v2.5.0, Spring v5.3.7
2022-02-11 11:26:22.717  INFO 12536 --- [restartedMain] c.yi.enhancement.EnhancementApplication  : No active profile set, falling back to default profiles: default
2022-02-11 11:26:22.744  INFO 12536 --- [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in E:\maven-repository\blog-enhancement-maven\blog-enhancement-repository\com\sun\xml\bind\jaxb-impl\2.2.3-1\jaxb-impl-2.2.3-1.jar referenced one or more files that do not exist: file:/E:/maven-repository/blog-enhancement-maven/blog-enhancement-repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jaxb-api.jar,file:/E:/maven-repository/blog-enhancement-maven/blog-enhancement-repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/activation.jar,file:/E:/maven-repository/blog-enhancement-maven/blog-enhancement-repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jsr173_1.0_api.jar,file:/E:/maven-repository/blog-enhancement-maven/blog-enhancement-repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jaxb1-impl.jar
2022-02-11 11:26:22.744  INFO 12536 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-02-11 11:26:22.744  INFO 12536 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-02-11 11:26:23.522  INFO 12536 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8065 (http)
2022-02-11 11:26:23.529  INFO 12536 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2022-02-11 11:26:23.529  INFO 12536 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.46]
2022-02-11 11:26:23.611  INFO 12536 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2022-02-11 11:26:23.611  INFO 12536 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 866 ms
2022-02-11 11:26:23.935  WARN 12536 --- [restartedMain] c.b.m.core.metadata.TableInfoHelper      : Can not find table primary key in Class: "com.yi.enhancement.model.entity.UserAvatar".
2022-02-11 11:26:24.813  INFO 12536 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2022-02-11 11:26:25.165  INFO 12536 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2022-02-11 11:26:25.689  INFO 12536 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8065 (http) with context path ''
2022-02-11 11:26:25.940  INFO 12536 --- [restartedMain] c.yi.enhancement.EnhancementApplication  : Started EnhancementApplication in 3.78 seconds (JVM running for 4.584)
2022-02-11 11:26:25.941  INFO 12536 --- [restartedMain] o.s.b.a.ApplicationAvailabilityBean      : Application availability state LivenessState changed to CORRECT
2022-02-11 11:26:25.942  INFO 12536 --- [restartedMain] o.s.b.a.ApplicationAvailabilityBean      : Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
2022-02-11 11:26:30.135  INFO 12536 --- [http-nio-8065-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-02-11 11:26:30.136  INFO 12536 --- [http-nio-8065-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2022-02-11 11:26:30.136  INFO 12536 --- [http-nio-8065-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 0 ms
2022-02-11 11:26:30.209  INFO 12536 --- [http-nio-8065-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2022-02-11 11:26:30.390  INFO 12536 --- [http-nio-8065-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2022-02-11 11:26:30.396 DEBUG 12536 --- [http-nio-8065-exec-1] c.y.e.m.A.pageArticleDTO_mpCount         : ==>  Preparing: SELECT COUNT(*) FROM (SELECT t1.id, t1.title, t1.stamp, t1.comments, t1.original, t1.status, t1.recommend, t1.appreciate, t1.views, t1.create_time, t1.update_time, t1.user_id, t1.category_id, t2.name category_name, COUNT(t3.id) comment_counts FROM article t1 LEFT JOIN category t2 ON t1.category_id = t2.id LEFT JOIN comment t3 ON t1.id = t3.article_id WHERE 1 = 1 AND t1.deleted = 0 GROUP BY t1.id ORDER BY t1.update_time DESC) TOTAL
2022-02-11 11:26:30.410 DEBUG 12536 --- [http-nio-8065-exec-1] c.y.e.m.A.pageArticleDTO_mpCount         : ==> Parameters: 
2022-02-11 11:26:30.430 DEBUG 12536 --- [http-nio-8065-exec-1] c.y.e.m.A.pageArticleDTO_mpCount         : <==      Total: 1
2022-02-11 11:26:30.437 DEBUG 12536 --- [http-nio-8065-exec-1] c.y.e.m.ArticleMapper.pageArticleDTO     : ==>  Preparing: SELECT t1.id, t1.title, t1.stamp, t1.comments, t1.original, t1.status, t1.recommend, t1.appreciate, t1.views, t1.create_time, t1.update_time, t1.user_id, t1.category_id, t2.name category_name, COUNT(t3.id) comment_counts FROM article t1 left join category t2 on t1.category_id = t2.id left join comment t3 on t1.id = t3.article_id where 1 = 1 and t1.deleted = 0 GROUP BY t1.id ORDER BY t1.update_time DESC LIMIT ?
2022-02-11 11:26:30.438 DEBUG 12536 --- [http-nio-8065-exec-1] c.y.e.m.ArticleMapper.pageArticleDTO     : ==> Parameters: 10(Long)
2022-02-11 11:26:30.450 DEBUG 12536 --- [http-nio-8065-exec-1] c.y.e.m.ArticleMapper.pageArticleDTO     : <==      Total: 8
2022-02-11 11:26:30.452 DEBUG 12536 --- [http-nio-8065-exec-3] c.y.e.mapper.TagMapper.listTagDTO        : ==>  Preparing: select * from tag where deleted = 0
2022-02-11 11:26:30.452 DEBUG 12536 --- [http-nio-8065-exec-3] c.y.e.mapper.TagMapper.listTagDTO        : ==> Parameters: 
2022-02-11 11:26:30.461 DEBUG 12536 --- [http-nio-8065-exec-3] c.y.e.mapper.TagMapper.listTagDTO        : <==      Total: 7
2022-02-11 11:26:30.462 DEBUG 12536 --- [http-nio-8065-exec-2] c.y.e.m.CategoryMapper.listCategoryDTO   : ==>  Preparing: select * from category where deleted = 0
2022-02-11 11:26:30.462 DEBUG 12536 --- [http-nio-8065-exec-2] c.y.e.m.CategoryMapper.listCategoryDTO   : ==> Parameters: 
2022-02-11 11:26:30.470 DEBUG 12536 --- [http-nio-8065-exec-2] c.y.e.m.CategoryMapper.listCategoryDTO   : <==      Total: 2
2022-02-11 11:26:30.470 DEBUG 12536 --- [http-nio-8065-exec-1] c.y.e.m.A.listArticleTagRelation         : ==>  Preparing: SELECT t1.article_id, t1.tag_id, t2.NAME tag_name FROM `article_tag_relation` t1 LEFT JOIN tag t2 ON t1.tag_id = t2.id where t1.deleted = 0 and t1.article_id in ( ? , ? , ? , ? , ? , ? , ? , ? )
2022-02-11 11:26:30.470 DEBUG 12536 --- [http-nio-8065-exec-1] c.y.e.m.A.listArticleTagRelation         : ==> Parameters: 1491400438823596033(Long), 1478682493945196546(Long), 1473299945589125122(Long), 1471060099663474689(Long), 1463756487044231169(Long), 1461568605407682562(Long), 1459070158997823489(Long), 1455442044157722626(Long)
2022-02-11 11:26:30.479 DEBUG 12536 --- [http-nio-8065-exec-1] c.y.e.m.A.listArticleTagRelation         : <==      Total: 8
2022-02-11 11:26:32.030 DEBUG 12536 --- [http-nio-8065-exec-5] c.y.e.m.CategoryMapper.listCategoryDTO   : ==>  Preparing: select * from category where deleted = 0
2022-02-11 11:26:32.030 DEBUG 12536 --- [http-nio-8065-exec-6] c.y.e.mapper.TagMapper.listTagDTO        : ==>  Preparing: select * from tag where deleted = 0
2022-02-11 11:26:32.030 DEBUG 12536 --- [http-nio-8065-exec-5] c.y.e.m.CategoryMapper.listCategoryDTO   : ==> Parameters: 
2022-02-11 11:26:32.030 DEBUG 12536 --- [http-nio-8065-exec-6] c.y.e.mapper.TagMapper.listTagDTO        : ==> Parameters: 
2022-02-11 11:26:32.031 DEBUG 12536 --- [http-nio-8065-exec-4] c.y.e.m.ArticleMapper.getArticleDetail   : ==>  Preparing: SELECT t1.id, t1.title, t1.stamp, t1.comments, t1.original, t1.content, t1.status, t1.recommend, t1.appreciate, t1.views, t1.create_time, t1.update_time, t1.user_id, t1.category_id, t2.name category_name FROM article t1 left join category t2 on t1.category_id = t2.id where t1.deleted = 0 and t1.id = ?
2022-02-11 11:26:32.031 DEBUG 12536 --- [http-nio-8065-exec-4] c.y.e.m.ArticleMapper.getArticleDetail   : ==> Parameters: 1491400438823596033(Long)
2022-02-11 11:26:32.040 DEBUG 12536 --- [http-nio-8065-exec-5] c.y.e.m.CategoryMapper.listCategoryDTO   : <==      Total: 2
2022-02-11 11:26:32.040 DEBUG 12536 --- [http-nio-8065-exec-6] c.y.e.mapper.TagMapper.listTagDTO        : <==      Total: 7
2022-02-11 11:26:32.044 DEBUG 12536 --- [http-nio-8065-exec-4] c.y.e.m.A.listTagByArticleId             : ====>  Preparing: SELECT t2.id, t2.name FROM article_tag_relation t1 LEFT JOIN tag t2 ON t1.tag_id = t2.id WHERE t1.deleted = 0 and t1.article_id = ?
2022-02-11 11:26:32.045 DEBUG 12536 --- [http-nio-8065-exec-4] c.y.e.m.A.listTagByArticleId             : ====> Parameters: 1491400438823596033(Long)
2022-02-11 11:26:32.054 DEBUG 12536 --- [http-nio-8065-exec-4] c.y.e.m.A.listTagByArticleId             : <====      Total: 0
2022-02-11 11:26:32.054 DEBUG 12536 --- [http-nio-8065-exec-4] c.y.e.m.ArticleMapper.getArticleDetail   : <==      Total: 1
2022-02-11 11:26:33.032 DEBUG 12536 --- [http-nio-8065-exec-7] c.y.e.mapper.ArticleMapper.getArticle    : ==>  Preparing: SELECT t1.id, t1.title, t1.stamp, t1.comments, t1.original, t1.status, t1.recommend, t1.appreciate, t1.views, t1.create_time, t1.update_time, t1.user_id, t1.category_id, t2.name category_name FROM article t1 left join category t2 on t1.category_id = t2.id where t1.deleted = 0 and t1.id = ?
2022-02-11 11:26:33.032 DEBUG 12536 --- [http-nio-8065-exec-7] c.y.e.mapper.ArticleMapper.getArticle    : ==> Parameters: 1491400438823596033(Long)
2022-02-11 11:26:33.041 DEBUG 12536 --- [http-nio-8065-exec-7] c.y.e.m.A.listTagByArticleId             : ====>  Preparing: SELECT t2.id, t2.name FROM article_tag_relation t1 LEFT JOIN tag t2 ON t1.tag_id = t2.id WHERE t1.deleted = 0 and t1.article_id = ?
2022-02-11 11:26:33.041 DEBUG 12536 --- [http-nio-8065-exec-7] c.y.e.m.A.listTagByArticleId             : ====> Parameters: 1491400438823596033(Long)
2022-02-11 11:26:33.048 DEBUG 12536 --- [http-nio-8065-exec-7] c.y.e.m.A.listTagByArticleId             : <====      Total: 0
2022-02-11 11:26:33.049 DEBUG 12536 --- [http-nio-8065-exec-7] c.y.e.mapper.ArticleMapper.getArticle    : <==      Total: 1
2022-02-11 11:26:35.060 DEBUG 12536 --- [http-nio-8065-exec-8] c.y.e.mapper.ArticleMapper.selectById    : ==>  Preparing: SELECT id,title,content,first_picture,stamp,comments,original,status,recommend,appreciate,views,create_time,update_time,category_id,user_id,deleted FROM article WHERE id=? AND deleted=0
2022-02-11 11:26:35.060 DEBUG 12536 --- [http-nio-8065-exec-8] c.y.e.mapper.ArticleMapper.selectById    : ==> Parameters: 1491400438823596033(Long)
2022-02-11 11:26:35.070 DEBUG 12536 --- [http-nio-8065-exec-8] c.y.e.mapper.ArticleMapper.selectById    : <==      Total: 1
2022-02-11 11:26:35.078 DEBUG 12536 --- [http-nio-8065-exec-8] c.y.e.mapper.ArticleMapper.updateById    : ==>  Preparing: UPDATE article SET title=?, content=?, stamp=?, comments=?, status=?, recommend=?, appreciate=?, update_time=?, category_id=? WHERE id=? AND deleted=0
2022-02-11 11:26:35.082 DEBUG 12536 --- [http-nio-8065-exec-8] c.y.e.mapper.ArticleMapper.updateById    : ==> Parameters: 优化sql(String), ## sql优化

### sql优化需知

mysql版本：Server version: 8.0.13 MySQL

sql优化遵从三点：

- 最大化利用索引；
- 尽可能避免全表扫描；
- 减少无效数据的查询；

#### select语句-语法顺序

```sql
1. SELECT 
2. DISTINCT <select_list>
3. FROM <left_table>
4. <join_type> JOIN <right_table>
5. ON <join_condition>
6. WHERE <where_condition>
7. GROUP BY <group_by_list>
8. HAVING <having_condition>
9. ORDER BY <order_by_condition>
10.LIMIT <limit_number>
```

#### select语句-执行顺序

**FROM**
<表名> # 选取表，将多个表数据通过笛卡尔积变成一个表。
**ON**
<筛选条件> # 对笛卡尔积的虚表进行筛选
**JOIN** <join, left join, right join...>
<join表> # 指定join，用于添加数据到on之后的虚表中，例如left join会将左表的剩余数据添加到虚表中
**WHERE**
<where条件> # 对上述虚表进行筛选
**GROUP BY**
<分组条件> # 分组
<SUM()等聚合函数> # 用于having子句进行判断，在书写上这类聚合函数是写在having判断里面的
**HAVING**
<分组筛选> # 对分组后的结果进行聚合筛选
**SELECT**
<返回数据列表> # 返回的单列必须在group by子句中，聚合函数除外
**DISTINCT**
\# 数据除重
**ORDER BY**
<排序条件> # 排序
**LIMIT**
<行数限制>

#### 优化关键字：explain

针对慢sql，常常用explain这个命令来查看一个这些SQL语句的执行计划，查看该SQL语句有没有使用上了索引，有没有做全表扫描，这都可以通过explain命令来查看。所以我们深入了解MySQL的基于开销的优化器，还可以获得很多可能被优化器考虑到的访问策略的细节，以及当运行SQL语句时哪种策略预计会被优化器采用。

![image-20220209103041703.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/e69179ee-45ae-470d-b266-a749eb4cb6e6.png)
下面对这些字段出现的可能进行解释：

### 1、id

表示select标识符，同时表明执行顺序，也就是说id是一个查询的序列号，查询序号即为sql语句执行的顺序。

（1）当id值相同时，按从上到下的顺序执行。

（2）当id全部不同时，按id从大到小执行。

（3）当id部分不同时，先执行id大的，id相同的，按从上到下的顺序执行。

#### 2、select_type

（1）simple：表示简单的select，没有union和子查询

（2）primary：最外面的查询 或者 主查询，在有子查询的语句中，最外面的select查询就是primary

（3）subquery：子查询

（4）union：union语句的第二个或者说是后面那一个select

（5）union result：union之后的结果

（6）dependent unoin：unoin 中的第二个或随后的 select 查询，依赖于外部查询的结果集

（7）dependent subquery：子查询中的第一个 select 查询，依赖于外部 查询的结果集

（8）derived：衍生表（5.7版本中不存在这一个）

#### 3、table

通常是表名，或者表的别名，或者一个为查询产生临时表的标示符（如派生表、子查询、集合）

#### 4、partitions

使用的哪些分区（对于非分区表值为null），在5.5版本中需要加上explain partitions select ...

#### 5.type

（1）const：表中最多有一个匹配行，const用于比较primary key 或者unique索引。因为只匹配一行数据，所以很快

（2）eq_ref：唯一性索引扫描，对于每个来自于前面的表的记录，从该表中读取唯一一行

（3）ref：非唯一性索引扫描，对于每个来自于前面的表的记录，所有匹配的行从这张表取出

（4）ref_or_null：类似于ref，但是可以搜索包含null值的行，例如：select * from student where address='xxx' or address is null，需要在address建立索引。

（5）index_merge：查询语句用到了一张表的多个索引时，mysql会将多个索引合并到一起

（6）range：按指定范围（如in、<、>、between and等，但是前提是此字段要建立索引）来检索，很常见。如：select * from student where id < 5，id上要有索引。

（7）index：全”表“扫描，但是是在索引树中扫描，通常比ALL快，因为索引文件通常比数据文件小，index扫描是通过二叉树的方式扫描，而all是扫描物理表。（也就是说虽然all和index都是读全表，但index是从索引中读取的，而all是从硬盘中读的）。例如：select name from student，但name字段上需要建立索引，也就是查询的字段属于索引中的字段。

（8）all：全表扫描，扫描完整的物理表，此时就需要优化了。

这8种type代表性能由好到差，一般优化可达range或者ref

#### 6.possible_keys

指出 MySQL 能在该表中可能使用的索引，显示的是索引的名称，多个索引用逗号隔开，如果没有，则为null。

#### 7.key

MySQL决定实际用到的索引，显示的是索引的名称，多个索引用逗号隔开，如果没有，则为null。

#### 8.key_len

当用到组合索引的时候判断索引是否完全用上。

> 实例：假设student表中有id int,name char(20) DEFAULT NULL,address varchar(20) DEFAULT NULL,remark varchar(20) NOT NULL 字段，建立的索引是 idx_address_remark（在address和remark上建立的组合索引）
>
> 查询的sql是：select * from student where address='深圳' and remark='java coder'，此时，执行计划中的key_len是 （20*3+1+2）+ （20*3+2）= 125，那么这个是怎么得来的呢？
>
> 解析：20表示建表的时候 varchar(20) ，3表示utf8字符集占用3个字节，1表示MySQL需要1个字节表示null，2表示变长字段（varchar是变长的）。  
>
> 假设drop掉刚刚建立的索引，新建索引 idx_name_address（在name和address上建立组合索引）
>
> 查询的sql是：select * from student where name='xbq' and address='深圳'，此时，执行计划中的key_len是 （20*3+1）+ （20*3+2）= 123，那么这个值是怎么得来的呢？
>
> 解析：20表示建表的时候 char(20) ，3表示utf8字符集占用3个字节，1表示MySQL需要1个字节标识null，即 20*3+1，后面的同样的道理。

key_len只计算where条件用到的索引长度，而排序和分组就算用到了索引，也不会计算到key_len中。

计算key_len的公式：

> varchr(10)变长字段且允许NULL = 10 * ( character set：utf8=3,gbk=2,latin1=1) + 1(NULL) + 2(变长字段)
>
> varchr(10)变长字段且不允许NULL = 10 *( character set：utf8=3,gbk=2,latin1=1) + 2(变长字段)
>
> char(10)固定字段且允许NULL = 10 * ( character set：utf8=3,gbk=2,latin1=1)+1(NULL)
>
> char(10)固定字段且不允许NULL = 10 * ( character set：utf8=3,gbk=2,latin1=1)

#### 9.ref

显示索引的哪一列被使用了，如果可能的话，是一个常数

#### 10.rows

显示mysql认为执行查询时必须要返回的行数，可结合type和key分析，没有用上索引的情况下，会全表扫描。rows的值越小越好，说明检索的数据少

#### 11.filtered

给出了一个百分比的值，这个百分比值和rows列的值一起使用，可以估计出那些将要和执行计划中的前一个表（前一个表就是指id列的值比当前表的id小的表）进行连接的行的数目。

这一列在5.5版本中，需要加上 explain extended select ....。

#### 12.extra

此字段显示一些额外的信息，但是此字段的部分值具有优化的参考意义。

（1）using where：表示查询使用了where 语句来处理结果

（2）using index：表示使用了覆盖索引。这个值重点强调了只需要使用索引就可以满足查询表的要求，不需要直接访问表数据。

（3）using join buffer：这个值强调了在获取连接条件时没有使用索引，并且需要连接缓冲区来存储中间结果。如果出现了这个值，那应该注意，根据查询的具体情况可能需要添加索引来改进性能

（4）using filesort：这是 order by 语句的结果。这可能是一个CPU密集型的过程。using filesort表示出现了文件内排序，表示很不好的现象，必须要优化，特别是大表，可以通过选择合适的索引来改进性能，用索引来为查询结果排序。

（5）using temporary：mysql需要创建一张临时表来保存中间结果。 也就是说，需要先把数据放到临时表中，然后从临时表中获取需要的数据。出现这种临时表，也是必须需要优化的地方，特别是数据量大的情况。两个常见的原因是在来自不同表的列上使用了distinct，或者使用了不同的 order by 和 group by 列。

### sql索引优化

对查询进行优化，应尽量避免全表扫描，首先应考虑在 where 及 order by 涉及的列上建立索引。

#### 1、避免在where子句中使用!=或<或>操作符，否则将引擎放弃使用索引而进行全表扫描。

![image-20220209110259285.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/201dd710-d7d3-48c3-a5bd-49d822b470b4.png)

但该效果仅仅是让该字段索引失效，比如以上面的例子来说，如果有以order_status为首的联合索引，那么该联合索引不能命中，但如果还有其他单列索引，是仍然可以命中索引的。下面的语句都是一样的，失效只是导致当前索引失效。

![image-20220209110604150.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/c9b93726-dc7d-4736-8ea4-8f3c85ba93d7.png)

#### 2、尽量避免在字段开头模糊查询，会导致数据库引擎放弃索引进行全表扫描。

```text
SELECT * FROM sys_job_log WHERE job_name like '%HandleCustomerDayAmountChangeJob%'
```

优化方式：尽量在字段后面使用模糊查询。如下：

```text
SELECT * FROM sys_job_log WHERE job_name like 'HandleCustomerDayAmountChangeJob%'
```

如果需求是要在前面使用模糊查询，

- 使用FullText全文索引，用match against 检索
- 数据量较大的情况，建议引用ElasticSearch、solr，亿级数据量检索速度秒级

下面是全文索引

![image-20220209115051398.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/33976da2-3b7b-4aeb-96cf-cc306d43a392.png)

---分割线---

![image-20220209115205488.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/d99cde70-8a8d-4a3e-aebf-360eba779271.png)

#### 3、关于IN和OR和IS NULL。

mysql在8.0.13的版本已经优化了关于IN、OR和IS NULL的索引命中

![image-20220209193523227.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/2e52fd21-b787-45c9-ae59-032cf26c4d18.png)

#### 4、尽量避免使用NOT IN或IS NOT NULL等否定关键字，会导致数据库引擎放弃索引进行全表扫描。

![image-20220209193723159.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/6923c283-2fef-4306-8283-57064e15200b.png)

---分割线---

![image-20220209194131592.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/2e3ed807-0c96-42c4-9849-cd4db5b14b65.png)

#### 5、尽量避免在where条件中等号的左侧进行表达式、函数操作，会导致数据库引擎放弃索引进行全表扫描。

![image-20220209195726228.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/cf55939c-496a-41c3-80cd-986e6eadd9d2.png)

---分割线---

![image-20220209195653187.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/697a7095-96f7-4449-98fd-771e9ff2270b.png)

#### 6、where条件中没有联合索引的前置项导致联合索引完全失效

![image-20220209202643790.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/b6db75f0-65fc-4cdb-bf27-a90c76ee4d52.png)

**结果2**![image-20220209202741884.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/b06b832e-f570-4a15-9c07-47e1c6a13bc8.png)

**结果3**![image-20220209202748838.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/82c2e67d-73bd-4244-b274-011a48d3d096.png)

**结果4**![image-20220209202757561.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/cf55f3ad-ed60-46aa-af2d-c37e66649449.png)

**结果5**![image-20220209202803738.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/d0127e0b-cd47-457e-92af-9c1ffbca8648.png)

最左匹配法则，where条件中必须包括联合索引最左边的一项，否则无法命中索引。

这里需要注意的是mysql中会内部优化where的条件，来匹配最佳的索引。

#### 7、隐式类型转换造成不使用索引

如下SQL语句由于索引对列类型为varchar，但给定的值为数值，涉及隐式类型转换，造成不能正确走索引。

![image-20220209203710764.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/1ca7a281-74e6-4f4e-a18e-3340fd9d413b.png)

![image-20220209203728796.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/022fb57a-dabb-4ffc-a49e-3e059f3df368.png)

--------未完成----------

### 语句优化

tips：

1、避免将常更新的字段设置为索引

2、避免将区分度不大的字段设置为索引

(String), true(Boolean), true(Boolean), true(Boolean), true(Boolean), true(Boolean), 2022-02-11 11:26:35.058(Timestamp), 1446769938234671105(Long), 1491400438823596033(Long)
2022-02-11 11:26:35.098 DEBUG 12536 --- [http-nio-8065-exec-8] c.y.e.mapper.ArticleMapper.updateById    : <==    Updates: 1
2022-02-11 11:26:35.100 DEBUG 12536 --- [http-nio-8065-exec-8] c.y.e.m.A.deleteReally                   : ==>  Preparing: DELETE FROM article_tag_relation WHERE article_id = ?
2022-02-11 11:26:35.100 DEBUG 12536 --- [http-nio-8065-exec-8] c.y.e.m.A.deleteReally                   : ==> Parameters: 1491400438823596033(Long)
2022-02-11 11:26:35.115 DEBUG 12536 --- [http-nio-8065-exec-8] c.y.e.m.A.deleteReally                   : <==    Updates: 0
2022-02-11 11:26:35.274 DEBUG 12536 --- [http-nio-8065-exec-9] c.y.e.mapper.TagMapper.listTagDTO        : ==>  Preparing: select * from tag where deleted = 0
2022-02-11 11:26:35.274 DEBUG 12536 --- [http-nio-8065-exec-9] c.y.e.mapper.TagMapper.listTagDTO        : ==> Parameters: 
2022-02-11 11:26:35.283 DEBUG 12536 --- [http-nio-8065-exec-9] c.y.e.mapper.TagMapper.listTagDTO        : <==      Total: 7
2022-02-11 11:26:36.665 DEBUG 12536 --- [http-nio-8065-exec-10] c.y.e.m.A.pageArticleDTOWeb_mpCount      : ==>  Preparing: SELECT COUNT(*) FROM article WHERE deleted = 0 AND status = ?
2022-02-11 11:26:36.666 DEBUG 12536 --- [http-nio-8065-exec-10] c.y.e.m.A.pageArticleDTOWeb_mpCount      : ==> Parameters: 1(Integer)
2022-02-11 11:26:36.673 DEBUG 12536 --- [http-nio-8065-exec-10] c.y.e.m.A.pageArticleDTOWeb_mpCount      : <==      Total: 1
2022-02-11 11:26:36.674 DEBUG 12536 --- [http-nio-8065-exec-10] c.y.e.m.ArticleMapper.pageArticleDTOWeb  : ==>  Preparing: SELECT id, title, create_time, update_time FROM article where deleted = 0 and status = ? ORDER BY update_time DESC LIMIT ?
2022-02-11 11:26:36.674 DEBUG 12536 --- [http-nio-8065-exec-10] c.y.e.m.ArticleMapper.pageArticleDTOWeb  : ==> Parameters: 1(Integer), 8(Long)
2022-02-11 11:26:36.685 DEBUG 12536 --- [http-nio-8065-exec-10] c.y.e.m.ArticleMapper.pageArticleDTOWeb  : <==      Total: 8
2022-02-11 11:26:36.685 DEBUG 12536 --- [http-nio-8065-exec-10] c.y.e.mapper.TagMapper.listTagVo         : ==>  Preparing: SELECT t1.*, COUNT(t2.article_id) article_counts FROM tag t1 LEFT JOIN article_tag_relation t2 ON t1.id = t2.tag_id and t2.deleted = 0 WHERE t1.deleted = 0 GROUP BY t1.id
2022-02-11 11:26:36.685 DEBUG 12536 --- [http-nio-8065-exec-10] c.y.e.mapper.TagMapper.listTagVo         : ==> Parameters: 
2022-02-11 11:26:36.695 DEBUG 12536 --- [http-nio-8065-exec-10] c.y.e.mapper.TagMapper.listTagVo         : <==      Total: 7
2022-02-11 11:26:36.696 DEBUG 12536 --- [http-nio-8065-exec-10] c.y.e.m.CategoryMapper.listCategoryVo    : ==>  Preparing: SELECT t1.id, t1.NAME, COUNT(t2.category_id) article_counts FROM category t1 LEFT JOIN article t2 ON t1.id = t2.category_id and t2.deleted = 0 and t2.status != 0 where t1.deleted = 0 GROUP BY t1.id
2022-02-11 11:26:36.696 DEBUG 12536 --- [http-nio-8065-exec-10] c.y.e.m.CategoryMapper.listCategoryVo    : ==> Parameters: 
2022-02-11 11:26:36.705 DEBUG 12536 --- [http-nio-8065-exec-10] c.y.e.m.CategoryMapper.listCategoryVo    : <==      Total: 2
2022-02-11 11:26:36.708 DEBUG 12536 --- [http-nio-8065-exec-10] c.y.e.mapper.UserMapper.getUser          : ==>  Preparing: SELECT * FROM user WHERE deleted = 0 AND id = ?
2022-02-11 11:26:36.709 DEBUG 12536 --- [http-nio-8065-exec-10] c.y.e.mapper.UserMapper.getUser          : ==> Parameters: 1(Long)
2022-02-11 11:26:36.717 DEBUG 12536 --- [http-nio-8065-exec-10] c.y.e.mapper.UserMapper.getUser          : <==      Total: 1
2022-02-11 11:26:36.720 DEBUG 12536 --- [http-nio-8065-exec-10] c.y.e.mapper.UserMapper.updateById       : ==>  Preparing: UPDATE user SET qq=?, email=?, wechat=?, avatar=?, banner=?, nickname=?, user_signature=?, views=?, create_time=?, update_time=? WHERE id=? AND deleted=0
2022-02-11 11:26:36.721 DEBUG 12536 --- [http-nio-8065-exec-10] c.y.e.mapper.UserMapper.updateById       : ==> Parameters: 2044619214(String), lyric0926@163.com(String), 17805428855(String), https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2021-07-11/6a879a71-ca69-4ef3-a5f7-e8c6f67dd0b7Screenshot_20210424_204530.jpg(String), https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2021-09-16/fdb78008-7df7-4224-8d3a-c97268b9b066wallhaven-v95om8.jpg(String), lyric(String), 许多事情我们的确无能为力。
但即使如此我们也不该因此消沉不是吗？
乐观起来，忘记伤痛继续前行远比一次又一次揭开伤疤要好得多！(String), 14585(Integer), 2020-09-02 15:16:51.0(Timestamp), 2022-02-11 11:26:36.72(Timestamp), 1(Long)
2022-02-11 11:26:36.738 DEBUG 12536 --- [http-nio-8065-exec-10] c.y.e.mapper.UserMapper.updateById       : <==    Updates: 1
2022-02-11 11:26:36.742 DEBUG 12536 --- [http-nio-8065-exec-10] c.y.e.m.T.listTechnicalSupportVo         : ==>  Preparing: SELECT * FROM technical_support where deleted = 0
2022-02-11 11:26:36.742 DEBUG 12536 --- [http-nio-8065-exec-10] c.y.e.m.T.listTechnicalSupportVo         : ==> Parameters: 
2022-02-11 11:26:36.750 DEBUG 12536 --- [http-nio-8065-exec-10] c.y.e.m.T.listTechnicalSupportVo         : <==      Total: 3
2022-02-11 11:26:53.047 DEBUG 12536 --- [http-nio-8065-exec-2] c.y.e.m.A.pageArticleDTO_mpCount         : ==>  Preparing: SELECT COUNT(*) FROM (SELECT t1.id, t1.title, t1.stamp, t1.comments, t1.original, t1.status, t1.recommend, t1.appreciate, t1.views, t1.create_time, t1.update_time, t1.user_id, t1.category_id, t2.name category_name, COUNT(t3.id) comment_counts FROM article t1 LEFT JOIN category t2 ON t1.category_id = t2.id LEFT JOIN comment t3 ON t1.id = t3.article_id WHERE 1 = 1 AND t1.deleted = 0 GROUP BY t1.id ORDER BY t1.update_time DESC) TOTAL
2022-02-11 11:26:53.048 DEBUG 12536 --- [http-nio-8065-exec-2] c.y.e.m.A.pageArticleDTO_mpCount         : ==> Parameters: 
2022-02-11 11:26:53.057 DEBUG 12536 --- [http-nio-8065-exec-2] c.y.e.m.A.pageArticleDTO_mpCount         : <==      Total: 1
2022-02-11 11:26:53.058 DEBUG 12536 --- [http-nio-8065-exec-2] c.y.e.m.ArticleMapper.pageArticleDTO     : ==>  Preparing: SELECT t1.id, t1.title, t1.stamp, t1.comments, t1.original, t1.status, t1.recommend, t1.appreciate, t1.views, t1.create_time, t1.update_time, t1.user_id, t1.category_id, t2.name category_name, COUNT(t3.id) comment_counts FROM article t1 left join category t2 on t1.category_id = t2.id left join comment t3 on t1.id = t3.article_id where 1 = 1 and t1.deleted = 0 GROUP BY t1.id ORDER BY t1.update_time DESC LIMIT ?
2022-02-11 11:26:53.058 DEBUG 12536 --- [http-nio-8065-exec-2] c.y.e.m.ArticleMapper.pageArticleDTO     : ==> Parameters: 10(Long)
2022-02-11 11:26:53.069 DEBUG 12536 --- [http-nio-8065-exec-2] c.y.e.m.ArticleMapper.pageArticleDTO     : <==      Total: 8
2022-02-11 11:26:53.069 DEBUG 12536 --- [http-nio-8065-exec-2] c.y.e.m.A.listArticleTagRelation         : ==>  Preparing: SELECT t1.article_id, t1.tag_id, t2.NAME tag_name FROM `article_tag_relation` t1 LEFT JOIN tag t2 ON t1.tag_id = t2.id where t1.deleted = 0 and t1.article_id in ( ? , ? , ? , ? , ? , ? , ? , ? )
2022-02-11 11:26:53.070 DEBUG 12536 --- [http-nio-8065-exec-2] c.y.e.m.A.listArticleTagRelation         : ==> Parameters: 1491400438823596033(Long), 1478682493945196546(Long), 1473299945589125122(Long), 1471060099663474689(Long), 1463756487044231169(Long), 1461568605407682562(Long), 1459070158997823489(Long), 1455442044157722626(Long)
2022-02-11 11:26:53.078 DEBUG 12536 --- [http-nio-8065-exec-2] c.y.e.m.A.listArticleTagRelation         : <==      Total: 8
2022-02-11 11:26:53.348 DEBUG 12536 --- [http-nio-8065-exec-9] c.y.e.mapper.TagMapper.listTagDTO        : ==>  Preparing: select * from tag where deleted = 0
2022-02-11 11:26:53.348 DEBUG 12536 --- [http-nio-8065-exec-9] c.y.e.mapper.TagMapper.listTagDTO        : ==> Parameters: 
2022-02-11 11:26:53.355 DEBUG 12536 --- [http-nio-8065-exec-1] c.y.e.m.CategoryMapper.listCategoryDTO   : ==>  Preparing: select * from category where deleted = 0
2022-02-11 11:26:53.355 DEBUG 12536 --- [http-nio-8065-exec-1] c.y.e.m.CategoryMapper.listCategoryDTO   : ==> Parameters: 
2022-02-11 11:26:53.355 DEBUG 12536 --- [http-nio-8065-exec-9] c.y.e.mapper.TagMapper.listTagDTO        : <==      Total: 7
2022-02-11 11:26:53.364 DEBUG 12536 --- [http-nio-8065-exec-1] c.y.e.m.CategoryMapper.listCategoryDTO   : <==      Total: 2
2022-02-11 11:26:54.571 DEBUG 12536 --- [http-nio-8065-exec-7] c.y.e.m.CategoryMapper.listCategoryDTO   : ==>  Preparing: select * from category where deleted = 0
2022-02-11 11:26:54.571 DEBUG 12536 --- [http-nio-8065-exec-8] c.y.e.m.ArticleMapper.getArticleDetail   : ==>  Preparing: SELECT t1.id, t1.title, t1.stamp, t1.comments, t1.original, t1.content, t1.status, t1.recommend, t1.appreciate, t1.views, t1.create_time, t1.update_time, t1.user_id, t1.category_id, t2.name category_name FROM article t1 left join category t2 on t1.category_id = t2.id where t1.deleted = 0 and t1.id = ?
2022-02-11 11:26:54.571 DEBUG 12536 --- [http-nio-8065-exec-7] c.y.e.m.CategoryMapper.listCategoryDTO   : ==> Parameters: 
2022-02-11 11:26:54.571 DEBUG 12536 --- [http-nio-8065-exec-8] c.y.e.m.ArticleMapper.getArticleDetail   : ==> Parameters: 1491400438823596033(Long)
2022-02-11 11:26:54.572 DEBUG 12536 --- [http-nio-8065-exec-10] c.y.e.mapper.TagMapper.listTagDTO        : ==>  Preparing: select * from tag where deleted = 0
2022-02-11 11:26:54.573 DEBUG 12536 --- [http-nio-8065-exec-10] c.y.e.mapper.TagMapper.listTagDTO        : ==> Parameters: 
2022-02-11 11:26:54.580 DEBUG 12536 --- [http-nio-8065-exec-7] c.y.e.m.CategoryMapper.listCategoryDTO   : <==      Total: 2
2022-02-11 11:26:54.581 DEBUG 12536 --- [http-nio-8065-exec-8] c.y.e.m.A.listTagByArticleId             : ====>  Preparing: SELECT t2.id, t2.name FROM article_tag_relation t1 LEFT JOIN tag t2 ON t1.tag_id = t2.id WHERE t1.deleted = 0 and t1.article_id = ?
2022-02-11 11:26:54.581 DEBUG 12536 --- [http-nio-8065-exec-8] c.y.e.m.A.listTagByArticleId             : ====> Parameters: 1491400438823596033(Long)
2022-02-11 11:26:54.583 DEBUG 12536 --- [http-nio-8065-exec-10] c.y.e.mapper.TagMapper.listTagDTO        : <==      Total: 7
2022-02-11 11:26:54.590 DEBUG 12536 --- [http-nio-8065-exec-8] c.y.e.m.A.listTagByArticleId             : <====      Total: 0
2022-02-11 11:26:54.591 DEBUG 12536 --- [http-nio-8065-exec-8] c.y.e.m.ArticleMapper.getArticleDetail   : <==      Total: 1
2022-02-11 11:26:55.694 DEBUG 12536 --- [http-nio-8065-exec-3] c.y.e.mapper.ArticleMapper.getArticle    : ==>  Preparing: SELECT t1.id, t1.title, t1.stamp, t1.comments, t1.original, t1.status, t1.recommend, t1.appreciate, t1.views, t1.create_time, t1.update_time, t1.user_id, t1.category_id, t2.name category_name FROM article t1 left join category t2 on t1.category_id = t2.id where t1.deleted = 0 and t1.id = ?
2022-02-11 11:26:55.694 DEBUG 12536 --- [http-nio-8065-exec-3] c.y.e.mapper.ArticleMapper.getArticle    : ==> Parameters: 1491400438823596033(Long)
2022-02-11 11:26:55.702 DEBUG 12536 --- [http-nio-8065-exec-3] c.y.e.m.A.listTagByArticleId             : ====>  Preparing: SELECT t2.id, t2.name FROM article_tag_relation t1 LEFT JOIN tag t2 ON t1.tag_id = t2.id WHERE t1.deleted = 0 and t1.article_id = ?
2022-02-11 11:26:55.703 DEBUG 12536 --- [http-nio-8065-exec-3] c.y.e.m.A.listTagByArticleId             : ====> Parameters: 1491400438823596033(Long)
2022-02-11 11:26:55.711 DEBUG 12536 --- [http-nio-8065-exec-3] c.y.e.m.A.listTagByArticleId             : <====      Total: 0
2022-02-11 11:26:55.711 DEBUG 12536 --- [http-nio-8065-exec-3] c.y.e.mapper.ArticleMapper.getArticle    : <==      Total: 1
2022-02-11 11:27:20.890 DEBUG 12536 --- [http-nio-8065-exec-4] c.y.e.mapper.ArticleMapper.selectById    : ==>  Preparing: SELECT id,title,content,first_picture,stamp,comments,original,status,recommend,appreciate,views,create_time,update_time,category_id,user_id,deleted FROM article WHERE id=? AND deleted=0
2022-02-11 11:27:20.891 DEBUG 12536 --- [http-nio-8065-exec-4] c.y.e.mapper.ArticleMapper.selectById    : ==> Parameters: 1491400438823596033(Long)
2022-02-11 11:27:20.900 DEBUG 12536 --- [http-nio-8065-exec-4] c.y.e.mapper.ArticleMapper.selectById    : <==      Total: 1
2022-02-11 11:27:20.901 DEBUG 12536 --- [http-nio-8065-exec-4] c.y.e.mapper.ArticleMapper.updateById    : ==>  Preparing: UPDATE article SET title=?, content=?, stamp=?, comments=?, status=?, recommend=?, appreciate=?, update_time=?, category_id=? WHERE id=? AND deleted=0
2022-02-11 11:27:20.902 DEBUG 12536 --- [http-nio-8065-exec-4] c.y.e.mapper.ArticleMapper.updateById    : ==> Parameters: 优化sql(String), ## sql优化

### sql优化需知

mysql版本：Server version: 8.0.13 MySQL

sql优化遵从三点：

- 最大化利用索引；
- 尽可能避免全表扫描；
- 减少无效数据的查询；

#### select语句-语法顺序

```sql
1. SELECT 
2. DISTINCT <select_list>
3. FROM <left_table>
4. <join_type> JOIN <right_table>
5. ON <join_condition>
6. WHERE <where_condition>
7. GROUP BY <group_by_list>
8. HAVING <having_condition>
9. ORDER BY <order_by_condition>
10.LIMIT <limit_number>
```

#### select语句-执行顺序

**FROM**
<表名> # 选取表，将多个表数据通过笛卡尔积变成一个表。
**ON**
<筛选条件> # 对笛卡尔积的虚表进行筛选
**JOIN** <join, left join, right join...>
<join表> # 指定join，用于添加数据到on之后的虚表中，例如left join会将左表的剩余数据添加到虚表中
**WHERE**
<where条件> # 对上述虚表进行筛选
**GROUP BY**
<分组条件> # 分组
<SUM()等聚合函数> # 用于having子句进行判断，在书写上这类聚合函数是写在having判断里面的
**HAVING**
<分组筛选> # 对分组后的结果进行聚合筛选
**SELECT**
<返回数据列表> # 返回的单列必须在group by子句中，聚合函数除外
**DISTINCT**
\# 数据除重
**ORDER BY**
<排序条件> # 排序
**LIMIT**
<行数限制>

#### 优化关键字：explain

针对慢sql，常常用explain这个命令来查看一个这些SQL语句的执行计划，查看该SQL语句有没有使用上了索引，有没有做全表扫描，这都可以通过explain命令来查看。所以我们深入了解MySQL的基于开销的优化器，还可以获得很多可能被优化器考虑到的访问策略的细节，以及当运行SQL语句时哪种策略预计会被优化器采用。

![image-20220209103041703.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/e69179ee-45ae-470d-b266-a749eb4cb6e6.png)
下面对这些字段出现的可能进行解释：

### 1、id

表示select标识符，同时表明执行顺序，也就是说id是一个查询的序列号，查询序号即为sql语句执行的顺序。

（1）当id值相同时，按从上到下的顺序执行。

（2）当id全部不同时，按id从大到小执行。

（3）当id部分不同时，先执行id大的，id相同的，按从上到下的顺序执行。

#### 2、select_type

（1）simple：表示简单的select，没有union和子查询

（2）primary：最外面的查询 或者 主查询，在有子查询的语句中，最外面的select查询就是primary

（3）subquery：子查询

（4）union：union语句的第二个或者说是后面那一个select

（5）union result：union之后的结果

（6）dependent unoin：unoin 中的第二个或随后的 select 查询，依赖于外部查询的结果集

（7）dependent subquery：子查询中的第一个 select 查询，依赖于外部 查询的结果集

（8）derived：衍生表（5.7版本中不存在这一个）

#### 3、table

通常是表名，或者表的别名，或者一个为查询产生临时表的标示符（如派生表、子查询、集合）

#### 4、partitions

使用的哪些分区（对于非分区表值为null），在5.5版本中需要加上explain partitions select ...

#### 5.type

（1）const：表中最多有一个匹配行，const用于比较primary key 或者unique索引。因为只匹配一行数据，所以很快

（2）eq_ref：唯一性索引扫描，对于每个来自于前面的表的记录，从该表中读取唯一一行

（3）ref：非唯一性索引扫描，对于每个来自于前面的表的记录，所有匹配的行从这张表取出

（4）ref_or_null：类似于ref，但是可以搜索包含null值的行，例如：select * from student where address='xxx' or address is null，需要在address建立索引。

（5）index_merge：查询语句用到了一张表的多个索引时，mysql会将多个索引合并到一起

（6）range：按指定范围（如in、<、>、between and等，但是前提是此字段要建立索引）来检索，很常见。如：select * from student where id < 5，id上要有索引。

（7）index：全”表“扫描，但是是在索引树中扫描，通常比ALL快，因为索引文件通常比数据文件小，index扫描是通过二叉树的方式扫描，而all是扫描物理表。（也就是说虽然all和index都是读全表，但index是从索引中读取的，而all是从硬盘中读的）。例如：select name from student，但name字段上需要建立索引，也就是查询的字段属于索引中的字段。

（8）all：全表扫描，扫描完整的物理表，此时就需要优化了。

这8种type代表性能由好到差，一般优化可达range或者ref

#### 6.possible_keys

指出 MySQL 能在该表中可能使用的索引，显示的是索引的名称，多个索引用逗号隔开，如果没有，则为null。

#### 7.key

MySQL决定实际用到的索引，显示的是索引的名称，多个索引用逗号隔开，如果没有，则为null。

#### 8.key_len

当用到组合索引的时候判断索引是否完全用上。

> 实例：假设student表中有id int,name char(20) DEFAULT NULL,address varchar(20) DEFAULT NULL,remark varchar(20) NOT NULL 字段，建立的索引是 idx_address_remark（在address和remark上建立的组合索引）
>
> 查询的sql是：select * from student where address='深圳' and remark='java coder'，此时，执行计划中的key_len是 （20*3+1+2）+ （20*3+2）= 125，那么这个是怎么得来的呢？
>
> 解析：20表示建表的时候 varchar(20) ，3表示utf8字符集占用3个字节，1表示MySQL需要1个字节表示null，2表示变长字段（varchar是变长的）。  
>
> 假设drop掉刚刚建立的索引，新建索引 idx_name_address（在name和address上建立组合索引）
>
> 查询的sql是：select * from student where name='xbq' and address='深圳'，此时，执行计划中的key_len是 （20*3+1）+ （20*3+2）= 123，那么这个值是怎么得来的呢？
>
> 解析：20表示建表的时候 char(20) ，3表示utf8字符集占用3个字节，1表示MySQL需要1个字节标识null，即 20*3+1，后面的同样的道理。

key_len只计算where条件用到的索引长度，而排序和分组就算用到了索引，也不会计算到key_len中。

计算key_len的公式：

> varchr(10)变长字段且允许NULL = 10 * ( character set：utf8=3,gbk=2,latin1=1) + 1(NULL) + 2(变长字段)
>
> varchr(10)变长字段且不允许NULL = 10 *( character set：utf8=3,gbk=2,latin1=1) + 2(变长字段)
>
> char(10)固定字段且允许NULL = 10 * ( character set：utf8=3,gbk=2,latin1=1)+1(NULL)
>
> char(10)固定字段且不允许NULL = 10 * ( character set：utf8=3,gbk=2,latin1=1)

#### 9.ref

显示索引的哪一列被使用了，如果可能的话，是一个常数

#### 10.rows

显示mysql认为执行查询时必须要返回的行数，可结合type和key分析，没有用上索引的情况下，会全表扫描。rows的值越小越好，说明检索的数据少

#### 11.filtered

给出了一个百分比的值，这个百分比值和rows列的值一起使用，可以估计出那些将要和执行计划中的前一个表（前一个表就是指id列的值比当前表的id小的表）进行连接的行的数目。

这一列在5.5版本中，需要加上 explain extended select ....。

#### 12.extra

此字段显示一些额外的信息，但是此字段的部分值具有优化的参考意义。

（1）using where：表示查询使用了where 语句来处理结果

（2）using index：表示使用了覆盖索引。这个值重点强调了只需要使用索引就可以满足查询表的要求，不需要直接访问表数据。

（3）using join buffer：这个值强调了在获取连接条件时没有使用索引，并且需要连接缓冲区来存储中间结果。如果出现了这个值，那应该注意，根据查询的具体情况可能需要添加索引来改进性能

（4）using filesort：这是 order by 语句的结果。这可能是一个CPU密集型的过程。using filesort表示出现了文件内排序，表示很不好的现象，必须要优化，特别是大表，可以通过选择合适的索引来改进性能，用索引来为查询结果排序。

（5）using temporary：mysql需要创建一张临时表来保存中间结果。 也就是说，需要先把数据放到临时表中，然后从临时表中获取需要的数据。出现这种临时表，也是必须需要优化的地方，特别是数据量大的情况。两个常见的原因是在来自不同表的列上使用了distinct，或者使用了不同的 order by 和 group by 列。

### sql索引优化

对查询进行优化，应尽量避免全表扫描，首先应考虑在 where 及 order by 涉及的列上建立索引。

#### 1、避免在where子句中使用!=或<或>操作符，否则将引擎放弃使用索引而进行全表扫描。

![image-20220209110259285.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/201dd710-d7d3-48c3-a5bd-49d822b470b4.png)

但该效果仅仅是让该字段索引失效，比如以上面的例子来说，如果有以order_status为首的联合索引，那么该联合索引不能命中，但如果还有其他单列索引，是仍然可以命中索引的。下面的语句都是一样的，失效只是导致当前索引失效。

![image-20220209110604150.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/c9b93726-dc7d-4736-8ea4-8f3c85ba93d7.png)

#### 2、尽量避免在字段开头模糊查询，会导致数据库引擎放弃索引进行全表扫描。

```text
SELECT * FROM sys_job_log WHERE job_name like '%HandleCustomerDayAmountChangeJob%'
```

优化方式：尽量在字段后面使用模糊查询。如下：

```text
SELECT * FROM sys_job_log WHERE job_name like 'HandleCustomerDayAmountChangeJob%'
```

如果需求是要在前面使用模糊查询，

- 使用FullText全文索引，用match against 检索
- 数据量较大的情况，建议引用ElasticSearch、solr，亿级数据量检索速度秒级

下面是全文索引

![image-20220209115051398.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/33976da2-3b7b-4aeb-96cf-cc306d43a392.png)

---分割线---

![image-20220209115205488.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/d99cde70-8a8d-4a3e-aebf-360eba779271.png)

#### 3、关于IN和OR和IS NULL。

mysql在8.0.13的版本已经优化了关于IN、OR和IS NULL的索引命中

![image-20220209193523227.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/2e52fd21-b787-45c9-ae59-032cf26c4d18.png)

#### 4、尽量避免使用NOT IN或IS NOT NULL等否定关键字，会导致数据库引擎放弃索引进行全表扫描。

![image-20220209193723159.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/6923c283-2fef-4306-8283-57064e15200b.png)

---分割线---

![image-20220209194131592.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/2e3ed807-0c96-42c4-9849-cd4db5b14b65.png)

#### 5、尽量避免在where条件中等号的左侧进行表达式、函数操作，会导致数据库引擎放弃索引进行全表扫描。

![image-20220209195726228.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/cf55939c-496a-41c3-80cd-986e6eadd9d2.png)

---分割线---

![image-20220209195653187.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/697a7095-96f7-4449-98fd-771e9ff2270b.png)

#### 6、where条件中没有联合索引的前置项导致联合索引完全失效

![image-20220209202643790.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/b6db75f0-65fc-4cdb-bf27-a90c76ee4d52.png)

**结果2**![image-20220209202741884.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/b06b832e-f570-4a15-9c07-47e1c6a13bc8.png)

**结果3**![image-20220209202748838.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/82c2e67d-73bd-4244-b274-011a48d3d096.png)

**结果4**![image-20220209202757561.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/cf55f3ad-ed60-46aa-af2d-c37e66649449.png)

**结果5**![image-20220209202803738.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/d0127e0b-cd47-457e-92af-9c1ffbca8648.png)

最左匹配法则，where条件中必须包括联合索引最左边的一项，否则无法命中索引。

这里需要注意的是mysql中会内部优化where的条件，来匹配最佳的索引。

#### 7、隐式类型转换造成不使用索引

如下SQL语句由于索引对列类型为varchar，但给定的值为数值，涉及隐式类型转换，造成不能正确走索引。

![image-20220209203710764.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/1ca7a281-74e6-4f4e-a18e-3340fd9d413b.png)

![image-20220209203728796.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/022fb57a-dabb-4ffc-a49e-3e059f3df368.png)

--------未完成----------

### 语句优化

tips：

1、避免将常更新的字段设置为索引

2、避免将区分度不大的字段设置为索引

(String), true(Boolean), true(Boolean), false(Boolean), true(Boolean), true(Boolean), 2022-02-11 11:27:20.89(Timestamp), 1446769938234671105(Long), 1491400438823596033(Long)
2022-02-11 11:27:20.919 DEBUG 12536 --- [http-nio-8065-exec-4] c.y.e.mapper.ArticleMapper.updateById    : <==    Updates: 1
2022-02-11 11:27:20.920 DEBUG 12536 --- [http-nio-8065-exec-4] c.y.e.m.A.deleteReally                   : ==>  Preparing: DELETE FROM article_tag_relation WHERE article_id = ?
2022-02-11 11:27:20.920 DEBUG 12536 --- [http-nio-8065-exec-4] c.y.e.m.A.deleteReally                   : ==> Parameters: 1491400438823596033(Long)
2022-02-11 11:27:20.935 DEBUG 12536 --- [http-nio-8065-exec-4] c.y.e.m.A.deleteReally                   : <==    Updates: 0
2022-02-11 11:27:21.139 DEBUG 12536 --- [http-nio-8065-exec-5] c.y.e.mapper.TagMapper.listTagDTO        : ==>  Preparing: select * from tag where deleted = 0
2022-02-11 11:27:21.139 DEBUG 12536 --- [http-nio-8065-exec-5] c.y.e.mapper.TagMapper.listTagDTO        : ==> Parameters: 
2022-02-11 11:27:21.147 DEBUG 12536 --- [http-nio-8065-exec-5] c.y.e.mapper.TagMapper.listTagDTO        : <==      Total: 7
2022-02-11 11:27:52.370 DEBUG 12536 --- [http-nio-8065-exec-8] c.y.e.m.A.pageArticleDTO_mpCount         : ==>  Preparing: SELECT COUNT(*) FROM (SELECT t1.id, t1.title, t1.stamp, t1.comments, t1.original, t1.status, t1.recommend, t1.appreciate, t1.views, t1.create_time, t1.update_time, t1.user_id, t1.category_id, t2.name category_name, COUNT(t3.id) comment_counts FROM article t1 LEFT JOIN category t2 ON t1.category_id = t2.id LEFT JOIN comment t3 ON t1.id = t3.article_id WHERE 1 = 1 AND t1.deleted = 0 GROUP BY t1.id ORDER BY t1.update_time DESC) TOTAL
2022-02-11 11:27:52.371 DEBUG 12536 --- [http-nio-8065-exec-8] c.y.e.m.A.pageArticleDTO_mpCount         : ==> Parameters: 
2022-02-11 11:27:52.379 DEBUG 12536 --- [http-nio-8065-exec-8] c.y.e.m.A.pageArticleDTO_mpCount         : <==      Total: 1
2022-02-11 11:27:52.380 DEBUG 12536 --- [http-nio-8065-exec-8] c.y.e.m.ArticleMapper.pageArticleDTO     : ==>  Preparing: SELECT t1.id, t1.title, t1.stamp, t1.comments, t1.original, t1.status, t1.recommend, t1.appreciate, t1.views, t1.create_time, t1.update_time, t1.user_id, t1.category_id, t2.name category_name, COUNT(t3.id) comment_counts FROM article t1 left join category t2 on t1.category_id = t2.id left join comment t3 on t1.id = t3.article_id where 1 = 1 and t1.deleted = 0 GROUP BY t1.id ORDER BY t1.update_time DESC LIMIT ?
2022-02-11 11:27:52.380 DEBUG 12536 --- [http-nio-8065-exec-8] c.y.e.m.ArticleMapper.pageArticleDTO     : ==> Parameters: 10(Long)
2022-02-11 11:27:52.390 DEBUG 12536 --- [http-nio-8065-exec-8] c.y.e.m.ArticleMapper.pageArticleDTO     : <==      Total: 8
2022-02-11 11:27:52.391 DEBUG 12536 --- [http-nio-8065-exec-8] c.y.e.m.A.listArticleTagRelation         : ==>  Preparing: SELECT t1.article_id, t1.tag_id, t2.NAME tag_name FROM `article_tag_relation` t1 LEFT JOIN tag t2 ON t1.tag_id = t2.id where t1.deleted = 0 and t1.article_id in ( ? , ? , ? , ? , ? , ? , ? , ? )
2022-02-11 11:27:52.391 DEBUG 12536 --- [http-nio-8065-exec-8] c.y.e.m.A.listArticleTagRelation         : ==> Parameters: 1491400438823596033(Long), 1478682493945196546(Long), 1473299945589125122(Long), 1471060099663474689(Long), 1463756487044231169(Long), 1461568605407682562(Long), 1459070158997823489(Long), 1455442044157722626(Long)
2022-02-11 11:27:52.402 DEBUG 12536 --- [http-nio-8065-exec-8] c.y.e.m.A.listArticleTagRelation         : <==      Total: 8
2022-02-11 11:27:52.670 DEBUG 12536 --- [http-nio-8065-exec-3] c.y.e.m.CategoryMapper.listCategoryDTO   : ==>  Preparing: select * from category where deleted = 0
2022-02-11 11:27:52.671 DEBUG 12536 --- [http-nio-8065-exec-3] c.y.e.m.CategoryMapper.listCategoryDTO   : ==> Parameters: 
2022-02-11 11:27:52.679 DEBUG 12536 --- [http-nio-8065-exec-4] c.y.e.mapper.TagMapper.listTagDTO        : ==>  Preparing: select * from tag where deleted = 0
2022-02-11 11:27:52.679 DEBUG 12536 --- [http-nio-8065-exec-4] c.y.e.mapper.TagMapper.listTagDTO        : ==> Parameters: 
2022-02-11 11:27:52.680 DEBUG 12536 --- [http-nio-8065-exec-3] c.y.e.m.CategoryMapper.listCategoryDTO   : <==      Total: 2
2022-02-11 11:27:52.687 DEBUG 12536 --- [http-nio-8065-exec-4] c.y.e.mapper.TagMapper.listTagDTO        : <==      Total: 7
2022-02-11 11:27:53.820 DEBUG 12536 --- [http-nio-8065-exec-9] c.y.e.m.CategoryMapper.listCategoryDTO   : ==>  Preparing: select * from category where deleted = 0
2022-02-11 11:27:53.820 DEBUG 12536 --- [http-nio-8065-exec-5] c.y.e.m.ArticleMapper.getArticleDetail   : ==>  Preparing: SELECT t1.id, t1.title, t1.stamp, t1.comments, t1.original, t1.content, t1.status, t1.recommend, t1.appreciate, t1.views, t1.create_time, t1.update_time, t1.user_id, t1.category_id, t2.name category_name FROM article t1 left join category t2 on t1.category_id = t2.id where t1.deleted = 0 and t1.id = ?
2022-02-11 11:27:53.820 DEBUG 12536 --- [http-nio-8065-exec-6] c.y.e.mapper.TagMapper.listTagDTO        : ==>  Preparing: select * from tag where deleted = 0
2022-02-11 11:27:53.820 DEBUG 12536 --- [http-nio-8065-exec-9] c.y.e.m.CategoryMapper.listCategoryDTO   : ==> Parameters: 
2022-02-11 11:27:53.820 DEBUG 12536 --- [http-nio-8065-exec-6] c.y.e.mapper.TagMapper.listTagDTO        : ==> Parameters: 
2022-02-11 11:27:53.820 DEBUG 12536 --- [http-nio-8065-exec-5] c.y.e.m.ArticleMapper.getArticleDetail   : ==> Parameters: 1491400438823596033(Long)
2022-02-11 11:27:53.827 DEBUG 12536 --- [http-nio-8065-exec-9] c.y.e.m.CategoryMapper.listCategoryDTO   : <==      Total: 2
2022-02-11 11:27:53.827 DEBUG 12536 --- [http-nio-8065-exec-6] c.y.e.mapper.TagMapper.listTagDTO        : <==      Total: 7
2022-02-11 11:27:53.828 DEBUG 12536 --- [http-nio-8065-exec-5] c.y.e.m.A.listTagByArticleId             : ====>  Preparing: SELECT t2.id, t2.name FROM article_tag_relation t1 LEFT JOIN tag t2 ON t1.tag_id = t2.id WHERE t1.deleted = 0 and t1.article_id = ?
2022-02-11 11:27:53.828 DEBUG 12536 --- [http-nio-8065-exec-5] c.y.e.m.A.listTagByArticleId             : ====> Parameters: 1491400438823596033(Long)
2022-02-11 11:27:53.837 DEBUG 12536 --- [http-nio-8065-exec-5] c.y.e.m.A.listTagByArticleId             : <====      Total: 0
2022-02-11 11:27:53.838 DEBUG 12536 --- [http-nio-8065-exec-5] c.y.e.m.ArticleMapper.getArticleDetail   : <==      Total: 1
2022-02-11 11:27:54.966 DEBUG 12536 --- [http-nio-8065-exec-2] c.y.e.mapper.ArticleMapper.getArticle    : ==>  Preparing: SELECT t1.id, t1.title, t1.stamp, t1.comments, t1.original, t1.status, t1.recommend, t1.appreciate, t1.views, t1.create_time, t1.update_time, t1.user_id, t1.category_id, t2.name category_name FROM article t1 left join category t2 on t1.category_id = t2.id where t1.deleted = 0 and t1.id = ?
2022-02-11 11:27:54.966 DEBUG 12536 --- [http-nio-8065-exec-2] c.y.e.mapper.ArticleMapper.getArticle    : ==> Parameters: 1491400438823596033(Long)
2022-02-11 11:27:54.975 DEBUG 12536 --- [http-nio-8065-exec-2] c.y.e.m.A.listTagByArticleId             : ====>  Preparing: SELECT t2.id, t2.name FROM article_tag_relation t1 LEFT JOIN tag t2 ON t1.tag_id = t2.id WHERE t1.deleted = 0 and t1.article_id = ?
2022-02-11 11:27:54.975 DEBUG 12536 --- [http-nio-8065-exec-2] c.y.e.m.A.listTagByArticleId             : ====> Parameters: 1491400438823596033(Long)
2022-02-11 11:27:54.983 DEBUG 12536 --- [http-nio-8065-exec-2] c.y.e.m.A.listTagByArticleId             : <====      Total: 0
2022-02-11 11:27:54.983 DEBUG 12536 --- [http-nio-8065-exec-2] c.y.e.mapper.ArticleMapper.getArticle    : <==      Total: 1
2022-02-11 11:28:03.268 DEBUG 12536 --- [http-nio-8065-exec-10] c.y.e.mapper.ArticleMapper.selectById    : ==>  Preparing: SELECT id,title,content,first_picture,stamp,comments,original,status,recommend,appreciate,views,create_time,update_time,category_id,user_id,deleted FROM article WHERE id=? AND deleted=0
2022-02-11 11:28:03.270 DEBUG 12536 --- [http-nio-8065-exec-10] c.y.e.mapper.ArticleMapper.selectById    : ==> Parameters: 1491400438823596033(Long)
2022-02-11 11:28:03.299 DEBUG 12536 --- [http-nio-8065-exec-10] c.y.e.mapper.ArticleMapper.selectById    : <==      Total: 1
2022-02-11 11:28:03.302 DEBUG 12536 --- [http-nio-8065-exec-10] c.y.e.mapper.ArticleMapper.updateById    : ==>  Preparing: UPDATE article SET title=?, content=?, stamp=?, comments=?, status=?, recommend=?, appreciate=?, update_time=?, category_id=? WHERE id=? AND deleted=0
2022-02-11 11:28:03.310 DEBUG 12536 --- [http-nio-8065-exec-10] c.y.e.mapper.ArticleMapper.updateById    : ==> Parameters: 优化sql(String), ## sql优化

### sql优化需知

mysql版本：Server version: 8.0.13 MySQL

sql优化遵从三点：

- 最大化利用索引；
- 尽可能避免全表扫描；
- 减少无效数据的查询；

#### select语句-语法顺序

```sql
1. SELECT 
2. DISTINCT <select_list>
3. FROM <left_table>
4. <join_type> JOIN <right_table>
5. ON <join_condition>
6. WHERE <where_condition>
7. GROUP BY <group_by_list>
8. HAVING <having_condition>
9. ORDER BY <order_by_condition>
10.LIMIT <limit_number>
```

#### select语句-执行顺序

**FROM**
<表名> # 选取表，将多个表数据通过笛卡尔积变成一个表。
**ON**
<筛选条件> # 对笛卡尔积的虚表进行筛选
**JOIN** <join, left join, right join...>
<join表> # 指定join，用于添加数据到on之后的虚表中，例如left join会将左表的剩余数据添加到虚表中
**WHERE**
<where条件> # 对上述虚表进行筛选
**GROUP BY**
<分组条件> # 分组
<SUM()等聚合函数> # 用于having子句进行判断，在书写上这类聚合函数是写在having判断里面的
**HAVING**
<分组筛选> # 对分组后的结果进行聚合筛选
**SELECT**
<返回数据列表> # 返回的单列必须在group by子句中，聚合函数除外
**DISTINCT**
\# 数据除重
**ORDER BY**
<排序条件> # 排序
**LIMIT**
<行数限制>

#### 优化关键字：explain

针对慢sql，常常用explain这个命令来查看一个这些SQL语句的执行计划，查看该SQL语句有没有使用上了索引，有没有做全表扫描，这都可以通过explain命令来查看。所以我们深入了解MySQL的基于开销的优化器，还可以获得很多可能被优化器考虑到的访问策略的细节，以及当运行SQL语句时哪种策略预计会被优化器采用。

![image-20220209103041703.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/e69179ee-45ae-470d-b266-a749eb4cb6e6.png)
下面对这些字段出现的可能进行解释：

### 1、id

表示select标识符，同时表明执行顺序，也就是说id是一个查询的序列号，查询序号即为sql语句执行的顺序。

（1）当id值相同时，按从上到下的顺序执行。

（2）当id全部不同时，按id从大到小执行。

（3）当id部分不同时，先执行id大的，id相同的，按从上到下的顺序执行。

#### 2、select_type

（1）simple：表示简单的select，没有union和子查询

（2）primary：最外面的查询 或者 主查询，在有子查询的语句中，最外面的select查询就是primary

（3）subquery：子查询

（4）union：union语句的第二个或者说是后面那一个select

（5）union result：union之后的结果

（6）dependent unoin：unoin 中的第二个或随后的 select 查询，依赖于外部查询的结果集

（7）dependent subquery：子查询中的第一个 select 查询，依赖于外部 查询的结果集

（8）derived：衍生表（5.7版本中不存在这一个）

#### 3、table

通常是表名，或者表的别名，或者一个为查询产生临时表的标示符（如派生表、子查询、集合）

#### 4、partitions

使用的哪些分区（对于非分区表值为null），在5.5版本中需要加上explain partitions select ...

#### 5.type

（1）const：表中最多有一个匹配行，const用于比较primary key 或者unique索引。因为只匹配一行数据，所以很快

（2）eq_ref：唯一性索引扫描，对于每个来自于前面的表的记录，从该表中读取唯一一行

（3）ref：非唯一性索引扫描，对于每个来自于前面的表的记录，所有匹配的行从这张表取出

（4）ref_or_null：类似于ref，但是可以搜索包含null值的行，例如：select * from student where address='xxx' or address is null，需要在address建立索引。

（5）index_merge：查询语句用到了一张表的多个索引时，mysql会将多个索引合并到一起

（6）range：按指定范围（如in、<、>、between and等，但是前提是此字段要建立索引）来检索，很常见。如：select * from student where id < 5，id上要有索引。

（7）index：全”表“扫描，但是是在索引树中扫描，通常比ALL快，因为索引文件通常比数据文件小，index扫描是通过二叉树的方式扫描，而all是扫描物理表。（也就是说虽然all和index都是读全表，但index是从索引中读取的，而all是从硬盘中读的）。例如：select name from student，但name字段上需要建立索引，也就是查询的字段属于索引中的字段。

（8）all：全表扫描，扫描完整的物理表，此时就需要优化了。

这8种type代表性能由好到差，一般优化可达range或者ref

#### 6.possible_keys

指出 MySQL 能在该表中可能使用的索引，显示的是索引的名称，多个索引用逗号隔开，如果没有，则为null。

#### 7.key

MySQL决定实际用到的索引，显示的是索引的名称，多个索引用逗号隔开，如果没有，则为null。

#### 8.key_len

当用到组合索引的时候判断索引是否完全用上。

> 实例：假设student表中有id int,name char(20) DEFAULT NULL,address varchar(20) DEFAULT NULL,remark varchar(20) NOT NULL 字段，建立的索引是 idx_address_remark（在address和remark上建立的组合索引）
>
> 查询的sql是：select * from student where address='深圳' and remark='java coder'，此时，执行计划中的key_len是 （20*3+1+2）+ （20*3+2）= 125，那么这个是怎么得来的呢？
>
> 解析：20表示建表的时候 varchar(20) ，3表示utf8字符集占用3个字节，1表示MySQL需要1个字节表示null，2表示变长字段（varchar是变长的）。  
>
> 假设drop掉刚刚建立的索引，新建索引 idx_name_address（在name和address上建立组合索引）
>
> 查询的sql是：select * from student where name='xbq' and address='深圳'，此时，执行计划中的key_len是 （20*3+1）+ （20*3+2）= 123，那么这个值是怎么得来的呢？
>
> 解析：20表示建表的时候 char(20) ，3表示utf8字符集占用3个字节，1表示MySQL需要1个字节标识null，即 20*3+1，后面的同样的道理。

key_len只计算where条件用到的索引长度，而排序和分组就算用到了索引，也不会计算到key_len中。

计算key_len的公式：

> varchr(10)变长字段且允许NULL = 10 * ( character set：utf8=3,gbk=2,latin1=1) + 1(NULL) + 2(变长字段)
>
> varchr(10)变长字段且不允许NULL = 10 *( character set：utf8=3,gbk=2,latin1=1) + 2(变长字段)
>
> char(10)固定字段且允许NULL = 10 * ( character set：utf8=3,gbk=2,latin1=1)+1(NULL)
>
> char(10)固定字段且不允许NULL = 10 * ( character set：utf8=3,gbk=2,latin1=1)

#### 9.ref

显示索引的哪一列被使用了，如果可能的话，是一个常数

#### 10.rows

显示mysql认为执行查询时必须要返回的行数，可结合type和key分析，没有用上索引的情况下，会全表扫描。rows的值越小越好，说明检索的数据少

#### 11.filtered

给出了一个百分比的值，这个百分比值和rows列的值一起使用，可以估计出那些将要和执行计划中的前一个表（前一个表就是指id列的值比当前表的id小的表）进行连接的行的数目。

这一列在5.5版本中，需要加上 explain extended select ....。

#### 12.extra

此字段显示一些额外的信息，但是此字段的部分值具有优化的参考意义。

（1）using where：表示查询使用了where 语句来处理结果

（2）using index：表示使用了覆盖索引。这个值重点强调了只需要使用索引就可以满足查询表的要求，不需要直接访问表数据。

（3）using join buffer：这个值强调了在获取连接条件时没有使用索引，并且需要连接缓冲区来存储中间结果。如果出现了这个值，那应该注意，根据查询的具体情况可能需要添加索引来改进性能

（4）using filesort：这是 order by 语句的结果。这可能是一个CPU密集型的过程。using filesort表示出现了文件内排序，表示很不好的现象，必须要优化，特别是大表，可以通过选择合适的索引来改进性能，用索引来为查询结果排序。

（5）using temporary：mysql需要创建一张临时表来保存中间结果。 也就是说，需要先把数据放到临时表中，然后从临时表中获取需要的数据。出现这种临时表，也是必须需要优化的地方，特别是数据量大的情况。两个常见的原因是在来自不同表的列上使用了distinct，或者使用了不同的 order by 和 group by 列。

### sql索引优化

对查询进行优化，应尽量避免全表扫描，首先应考虑在 where 及 order by 涉及的列上建立索引。

#### 1、避免在where子句中使用!=或<或>操作符，否则将引擎放弃使用索引而进行全表扫描。

![image-20220209110259285.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/201dd710-d7d3-48c3-a5bd-49d822b470b4.png)

但该效果仅仅是让该字段索引失效，比如以上面的例子来说，如果有以order_status为首的联合索引，那么该联合索引不能命中，但如果还有其他单列索引，是仍然可以命中索引的。下面的语句都是一样的，失效只是导致当前索引失效。

![image-20220209110604150.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/c9b93726-dc7d-4736-8ea4-8f3c85ba93d7.png)

#### 2、尽量避免在字段开头模糊查询，会导致数据库引擎放弃索引进行全表扫描。

```text
SELECT * FROM sys_job_log WHERE job_name like '%HandleCustomerDayAmountChangeJob%'
```

优化方式：尽量在字段后面使用模糊查询。如下：

```text
SELECT * FROM sys_job_log WHERE job_name like 'HandleCustomerDayAmountChangeJob%'
```

如果需求是要在前面使用模糊查询，

- 使用FullText全文索引，用match against 检索
- 数据量较大的情况，建议引用ElasticSearch、solr，亿级数据量检索速度秒级

下面是全文索引

![image-20220209115051398.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/33976da2-3b7b-4aeb-96cf-cc306d43a392.png)

---分割线---

![image-20220209115205488.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/d99cde70-8a8d-4a3e-aebf-360eba779271.png)

#### 3、关于IN和OR和IS NULL。

mysql在8.0.13的版本已经优化了关于IN、OR和IS NULL的索引命中

![image-20220209193523227.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/2e52fd21-b787-45c9-ae59-032cf26c4d18.png)

#### 4、尽量避免使用NOT IN或IS NOT NULL等否定关键字，会导致数据库引擎放弃索引进行全表扫描。

![image-20220209193723159.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/6923c283-2fef-4306-8283-57064e15200b.png)

---分割线---

![image-20220209194131592.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/2e3ed807-0c96-42c4-9849-cd4db5b14b65.png)

#### 5、尽量避免在where条件中等号的左侧进行表达式、函数操作，会导致数据库引擎放弃索引进行全表扫描。

![image-20220209195726228.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/cf55939c-496a-41c3-80cd-986e6eadd9d2.png)

---分割线---

![image-20220209195653187.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/697a7095-96f7-4449-98fd-771e9ff2270b.png)

#### 6、where条件中没有联合索引的前置项导致联合索引完全失效

![image-20220209202643790.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/b6db75f0-65fc-4cdb-bf27-a90c76ee4d52.png)

**结果2**![image-20220209202741884.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/b06b832e-f570-4a15-9c07-47e1c6a13bc8.png)

**结果3**![image-20220209202748838.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/82c2e67d-73bd-4244-b274-011a48d3d096.png)

**结果4**![image-20220209202757561.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/cf55f3ad-ed60-46aa-af2d-c37e66649449.png)

**结果5**![image-20220209202803738.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/d0127e0b-cd47-457e-92af-9c1ffbca8648.png)

最左匹配法则，where条件中必须包括联合索引最左边的一项，否则无法命中索引。

这里需要注意的是mysql中会内部优化where的条件，来匹配最佳的索引。

#### 7、隐式类型转换造成不使用索引

如下SQL语句由于索引对列类型为varchar，但给定的值为数值，涉及隐式类型转换，造成不能正确走索引。

![image-20220209203710764.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/1ca7a281-74e6-4f4e-a18e-3340fd9d413b.png)

![image-20220209203728796.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/022fb57a-dabb-4ffc-a49e-3e059f3df368.png)

--------未完成----------

### 语句优化

tips：

1、避免将常更新的字段设置为索引

2、避免将区分度不大的字段设置为索引

(String), true(Boolean), true(Boolean), true(Boolean), true(Boolean), true(Boolean), 2022-02-11 11:28:02.772(Timestamp), 1446769938234671105(Long), 1491400438823596033(Long)
2022-02-11 11:28:03.342 DEBUG 12536 --- [http-nio-8065-exec-10] c.y.e.mapper.ArticleMapper.updateById    : <==    Updates: 1
2022-02-11 11:29:08.145  WARN 12536 --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m6s76ms82µs800ns).
2022-02-11 11:29:09.946 DEBUG 12536 --- [http-nio-8065-exec-10] c.y.e.m.A.deleteReally                   : ==>  Preparing: DELETE FROM article_tag_relation WHERE article_id = ?
2022-02-11 11:29:09.947 DEBUG 12536 --- [http-nio-8065-exec-10] c.y.e.m.A.deleteReally                   : ==> Parameters: 1491400438823596033(Long)
2022-02-11 11:29:09.963 DEBUG 12536 --- [http-nio-8065-exec-10] c.y.e.m.A.deleteReally                   : <==    Updates: 0
2022-02-11 11:29:10.287 DEBUG 12536 --- [http-nio-8065-exec-1] c.y.e.m.CategoryMapper.listCategoryDTO   : ==>  Preparing: select * from category where deleted = 0
2022-02-11 11:29:10.287 DEBUG 12536 --- [http-nio-8065-exec-1] c.y.e.m.CategoryMapper.listCategoryDTO   : ==> Parameters: 
2022-02-11 11:29:10.296 DEBUG 12536 --- [http-nio-8065-exec-1] c.y.e.m.CategoryMapper.listCategoryDTO   : <==      Total: 2
2022-02-11 11:29:10.297 DEBUG 12536 --- [http-nio-8065-exec-7] c.y.e.m.A.pageArticleDTO_mpCount         : ==>  Preparing: SELECT COUNT(*) FROM (SELECT t1.id, t1.title, t1.stamp, t1.comments, t1.original, t1.status, t1.recommend, t1.appreciate, t1.views, t1.create_time, t1.update_time, t1.user_id, t1.category_id, t2.name category_name, COUNT(t3.id) comment_counts FROM article t1 LEFT JOIN category t2 ON t1.category_id = t2.id LEFT JOIN comment t3 ON t1.id = t3.article_id WHERE 1 = 1 AND t1.deleted = 0 GROUP BY t1.id ORDER BY t1.update_time DESC) TOTAL
2022-02-11 11:29:10.297 DEBUG 12536 --- [http-nio-8065-exec-7] c.y.e.m.A.pageArticleDTO_mpCount         : ==> Parameters: 
2022-02-11 11:29:10.304 DEBUG 12536 --- [http-nio-8065-exec-7] c.y.e.m.A.pageArticleDTO_mpCount         : <==      Total: 1
2022-02-11 11:29:10.305 DEBUG 12536 --- [http-nio-8065-exec-7] c.y.e.m.ArticleMapper.pageArticleDTO     : ==>  Preparing: SELECT t1.id, t1.title, t1.stamp, t1.comments, t1.original, t1.status, t1.recommend, t1.appreciate, t1.views, t1.create_time, t1.update_time, t1.user_id, t1.category_id, t2.name category_name, COUNT(t3.id) comment_counts FROM article t1 left join category t2 on t1.category_id = t2.id left join comment t3 on t1.id = t3.article_id where 1 = 1 and t1.deleted = 0 GROUP BY t1.id ORDER BY t1.update_time DESC LIMIT ?
2022-02-11 11:29:10.305 DEBUG 12536 --- [http-nio-8065-exec-7] c.y.e.m.ArticleMapper.pageArticleDTO     : ==> Parameters: 10(Long)
2022-02-11 11:29:10.314 DEBUG 12536 --- [http-nio-8065-exec-7] c.y.e.m.ArticleMapper.pageArticleDTO     : <==      Total: 8
2022-02-11 11:29:10.314 DEBUG 12536 --- [http-nio-8065-exec-8] c.y.e.mapper.TagMapper.listTagDTO        : ==>  Preparing: select * from tag where deleted = 0
2022-02-11 11:29:10.314 DEBUG 12536 --- [http-nio-8065-exec-8] c.y.e.mapper.TagMapper.listTagDTO        : ==> Parameters: 
2022-02-11 11:29:10.323 DEBUG 12536 --- [http-nio-8065-exec-8] c.y.e.mapper.TagMapper.listTagDTO        : <==      Total: 7
2022-02-11 11:29:10.323 DEBUG 12536 --- [http-nio-8065-exec-7] c.y.e.m.A.listArticleTagRelation         : ==>  Preparing: SELECT t1.article_id, t1.tag_id, t2.NAME tag_name FROM `article_tag_relation` t1 LEFT JOIN tag t2 ON t1.tag_id = t2.id where t1.deleted = 0 and t1.article_id in ( ? , ? , ? , ? , ? , ? , ? , ? )
2022-02-11 11:29:10.323 DEBUG 12536 --- [http-nio-8065-exec-7] c.y.e.m.A.listArticleTagRelation         : ==> Parameters: 1491400438823596033(Long), 1478682493945196546(Long), 1473299945589125122(Long), 1471060099663474689(Long), 1463756487044231169(Long), 1461568605407682562(Long), 1459070158997823489(Long), 1455442044157722626(Long)
2022-02-11 11:29:10.330 DEBUG 12536 --- [http-nio-8065-exec-7] c.y.e.m.A.listArticleTagRelation         : <==      Total: 8
2022-02-11 11:29:10.634 DEBUG 12536 --- [http-nio-8065-exec-3] c.y.e.mapper.TagMapper.listTagDTO        : ==>  Preparing: select * from tag where deleted = 0
2022-02-11 11:29:10.634 DEBUG 12536 --- [http-nio-8065-exec-3] c.y.e.mapper.TagMapper.listTagDTO        : ==> Parameters: 
2022-02-11 11:29:10.642 DEBUG 12536 --- [http-nio-8065-exec-3] c.y.e.mapper.TagMapper.listTagDTO        : <==      Total: 7
2022-02-11 11:29:56.805 DEBUG 12536 --- [http-nio-8065-exec-9] c.y.e.mapper.TagMapper.listTagDTO        : ==>  Preparing: select * from tag where deleted = 0
2022-02-11 11:29:56.805 DEBUG 12536 --- [http-nio-8065-exec-6] c.y.e.m.CategoryMapper.listCategoryDTO   : ==>  Preparing: select * from category where deleted = 0
2022-02-11 11:29:56.805 DEBUG 12536 --- [http-nio-8065-exec-4] c.y.e.m.ArticleMapper.getArticleDetail   : ==>  Preparing: SELECT t1.id, t1.title, t1.stamp, t1.comments, t1.original, t1.content, t1.status, t1.recommend, t1.appreciate, t1.views, t1.create_time, t1.update_time, t1.user_id, t1.category_id, t2.name category_name FROM article t1 left join category t2 on t1.category_id = t2.id where t1.deleted = 0 and t1.id = ?
2022-02-11 11:29:56.805 DEBUG 12536 --- [http-nio-8065-exec-9] c.y.e.mapper.TagMapper.listTagDTO        : ==> Parameters: 
2022-02-11 11:29:56.805 DEBUG 12536 --- [http-nio-8065-exec-6] c.y.e.m.CategoryMapper.listCategoryDTO   : ==> Parameters: 
2022-02-11 11:29:56.805 DEBUG 12536 --- [http-nio-8065-exec-4] c.y.e.m.ArticleMapper.getArticleDetail   : ==> Parameters: 1491400438823596033(Long)
2022-02-11 11:29:56.813 DEBUG 12536 --- [http-nio-8065-exec-9] c.y.e.mapper.TagMapper.listTagDTO        : <==      Total: 7
2022-02-11 11:29:56.814 DEBUG 12536 --- [http-nio-8065-exec-6] c.y.e.m.CategoryMapper.listCategoryDTO   : <==      Total: 2
2022-02-11 11:29:56.815 DEBUG 12536 --- [http-nio-8065-exec-4] c.y.e.m.A.listTagByArticleId             : ====>  Preparing: SELECT t2.id, t2.name FROM article_tag_relation t1 LEFT JOIN tag t2 ON t1.tag_id = t2.id WHERE t1.deleted = 0 and t1.article_id = ?
2022-02-11 11:29:56.815 DEBUG 12536 --- [http-nio-8065-exec-4] c.y.e.m.A.listTagByArticleId             : ====> Parameters: 1491400438823596033(Long)
2022-02-11 11:29:56.824 DEBUG 12536 --- [http-nio-8065-exec-4] c.y.e.m.A.listTagByArticleId             : <====      Total: 0
2022-02-11 11:29:56.825 DEBUG 12536 --- [http-nio-8065-exec-4] c.y.e.m.ArticleMapper.getArticleDetail   : <==      Total: 1
2022-02-11 11:30:05.612 DEBUG 12536 --- [http-nio-8065-exec-5] c.y.e.mapper.ArticleMapper.getArticle    : ==>  Preparing: SELECT t1.id, t1.title, t1.stamp, t1.comments, t1.original, t1.status, t1.recommend, t1.appreciate, t1.views, t1.create_time, t1.update_time, t1.user_id, t1.category_id, t2.name category_name FROM article t1 left join category t2 on t1.category_id = t2.id where t1.deleted = 0 and t1.id = ?
2022-02-11 11:30:05.613 DEBUG 12536 --- [http-nio-8065-exec-5] c.y.e.mapper.ArticleMapper.getArticle    : ==> Parameters: 1491400438823596033(Long)
2022-02-11 11:30:05.622 DEBUG 12536 --- [http-nio-8065-exec-5] c.y.e.m.A.listTagByArticleId             : ====>  Preparing: SELECT t2.id, t2.name FROM article_tag_relation t1 LEFT JOIN tag t2 ON t1.tag_id = t2.id WHERE t1.deleted = 0 and t1.article_id = ?
2022-02-11 11:30:05.622 DEBUG 12536 --- [http-nio-8065-exec-5] c.y.e.m.A.listTagByArticleId             : ====> Parameters: 1491400438823596033(Long)
2022-02-11 11:30:05.630 DEBUG 12536 --- [http-nio-8065-exec-5] c.y.e.m.A.listTagByArticleId             : <====      Total: 0
2022-02-11 11:30:05.631 DEBUG 12536 --- [http-nio-8065-exec-5] c.y.e.mapper.ArticleMapper.getArticle    : <==      Total: 1
2022-02-11 11:37:58.384  INFO 25328 --- [restartedMain] c.yi.enhancement.EnhancementApplication  : Starting EnhancementApplication using Java 1.8.0_311 on LAPTOP-7I9LVMS7 with PID 25328 (E:\1-my-project\blog-enhancement\target\classes started by 刘文鉴 in E:\1-my-project\blog-enhancement)
2022-02-11 11:37:58.386 DEBUG 25328 --- [restartedMain] c.yi.enhancement.EnhancementApplication  : Running with Spring Boot v2.5.0, Spring v5.3.7
2022-02-11 11:37:58.386  INFO 25328 --- [restartedMain] c.yi.enhancement.EnhancementApplication  : No active profile set, falling back to default profiles: default
2022-02-11 11:37:58.415  INFO 25328 --- [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in E:\maven-repository\blog-enhancement-maven\blog-enhancement-repository\com\sun\xml\bind\jaxb-impl\2.2.3-1\jaxb-impl-2.2.3-1.jar referenced one or more files that do not exist: file:/E:/maven-repository/blog-enhancement-maven/blog-enhancement-repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jaxb-api.jar,file:/E:/maven-repository/blog-enhancement-maven/blog-enhancement-repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/activation.jar,file:/E:/maven-repository/blog-enhancement-maven/blog-enhancement-repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jsr173_1.0_api.jar,file:/E:/maven-repository/blog-enhancement-maven/blog-enhancement-repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jaxb1-impl.jar
2022-02-11 11:37:58.416  INFO 25328 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-02-11 11:37:58.416  INFO 25328 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-02-11 11:37:59.257  INFO 25328 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8065 (http)
2022-02-11 11:37:59.271  INFO 25328 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2022-02-11 11:37:59.271  INFO 25328 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.46]
2022-02-11 11:37:59.342  INFO 25328 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2022-02-11 11:37:59.342  INFO 25328 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 925 ms
2022-02-11 11:37:59.675  WARN 25328 --- [restartedMain] c.b.m.core.metadata.TableInfoHelper      : Can not find table primary key in Class: "com.yi.enhancement.model.entity.UserAvatar".
2022-02-11 11:38:00.554  INFO 25328 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2022-02-11 11:38:00.914  INFO 25328 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2022-02-11 11:38:01.429  INFO 25328 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8065 (http) with context path ''
2022-02-11 11:38:01.678  INFO 25328 --- [restartedMain] c.yi.enhancement.EnhancementApplication  : Started EnhancementApplication in 3.895 seconds (JVM running for 4.7)
2022-02-11 11:38:01.680  INFO 25328 --- [restartedMain] o.s.b.a.ApplicationAvailabilityBean      : Application availability state LivenessState changed to CORRECT
2022-02-11 11:38:01.681  INFO 25328 --- [restartedMain] o.s.b.a.ApplicationAvailabilityBean      : Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
2022-02-11 11:42:36.720  INFO 29004 --- [restartedMain] c.yi.enhancement.EnhancementApplication  : Starting EnhancementApplication using Java 1.8.0_311 on LAPTOP-7I9LVMS7 with PID 29004 (E:\1-my-project\blog-enhancement\target\classes started by 刘文鉴 in E:\1-my-project\blog-enhancement)
2022-02-11 11:42:36.721 DEBUG 29004 --- [restartedMain] c.yi.enhancement.EnhancementApplication  : Running with Spring Boot v2.5.0, Spring v5.3.7
2022-02-11 11:42:36.721  INFO 29004 --- [restartedMain] c.yi.enhancement.EnhancementApplication  : No active profile set, falling back to default profiles: default
2022-02-11 11:42:36.748  INFO 29004 --- [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in E:\maven-repository\blog-enhancement-maven\blog-enhancement-repository\com\sun\xml\bind\jaxb-impl\2.2.3-1\jaxb-impl-2.2.3-1.jar referenced one or more files that do not exist: file:/E:/maven-repository/blog-enhancement-maven/blog-enhancement-repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jaxb-api.jar,file:/E:/maven-repository/blog-enhancement-maven/blog-enhancement-repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/activation.jar,file:/E:/maven-repository/blog-enhancement-maven/blog-enhancement-repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jsr173_1.0_api.jar,file:/E:/maven-repository/blog-enhancement-maven/blog-enhancement-repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jaxb1-impl.jar
2022-02-11 11:42:36.748  INFO 29004 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-02-11 11:42:36.748  INFO 29004 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-02-11 11:42:37.516  INFO 29004 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8065 (http)
2022-02-11 11:42:37.522  INFO 29004 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2022-02-11 11:42:37.523  INFO 29004 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.46]
2022-02-11 11:42:37.600  INFO 29004 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2022-02-11 11:42:37.600  INFO 29004 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 851 ms
2022-02-11 11:42:37.927  WARN 29004 --- [restartedMain] c.b.m.core.metadata.TableInfoHelper      : Can not find table primary key in Class: "com.yi.enhancement.model.entity.UserAvatar".
2022-02-11 11:42:38.847  INFO 29004 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2022-02-11 11:42:39.198  INFO 29004 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2022-02-11 11:42:39.725  INFO 29004 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8065 (http) with context path ''
2022-02-11 11:42:39.976  INFO 29004 --- [restartedMain] c.yi.enhancement.EnhancementApplication  : Started EnhancementApplication in 3.809 seconds (JVM running for 4.61)
2022-02-11 11:42:39.977  INFO 29004 --- [restartedMain] o.s.b.a.ApplicationAvailabilityBean      : Application availability state LivenessState changed to CORRECT
2022-02-11 11:42:39.979  INFO 29004 --- [restartedMain] o.s.b.a.ApplicationAvailabilityBean      : Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
2022-02-11 11:43:17.797  INFO 29004 --- [http-nio-8065-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-02-11 11:43:17.797  INFO 29004 --- [http-nio-8065-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2022-02-11 11:43:17.799  INFO 29004 --- [http-nio-8065-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2022-02-11 11:43:17.849  INFO 29004 --- [http-nio-8065-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2022-02-11 11:43:18.056  INFO 29004 --- [http-nio-8065-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2022-02-11 11:43:18.061 DEBUG 29004 --- [http-nio-8065-exec-1] c.y.e.m.CategoryMapper.listCategoryDTO   : ==>  Preparing: select * from category where deleted = 0
2022-02-11 11:43:18.076 DEBUG 29004 --- [http-nio-8065-exec-1] c.y.e.m.CategoryMapper.listCategoryDTO   : ==> Parameters: 
2022-02-11 11:43:18.099 DEBUG 29004 --- [http-nio-8065-exec-1] c.y.e.m.CategoryMapper.listCategoryDTO   : <==      Total: 2
2022-02-11 11:43:18.104 DEBUG 29004 --- [http-nio-8065-exec-2] c.y.e.mapper.TagMapper.listTagDTO        : ==>  Preparing: select * from tag where deleted = 0
2022-02-11 11:43:18.105 DEBUG 29004 --- [http-nio-8065-exec-2] c.y.e.mapper.TagMapper.listTagDTO        : ==> Parameters: 
2022-02-11 11:43:18.116 DEBUG 29004 --- [http-nio-8065-exec-2] c.y.e.mapper.TagMapper.listTagDTO        : <==      Total: 7
2022-02-11 11:43:30.756 DEBUG 29004 --- [http-nio-8065-exec-4] c.y.e.m.CategoryMapper.listCategoryDTO   : ==>  Preparing: select * from category where deleted = 0
2022-02-11 11:43:30.757 DEBUG 29004 --- [http-nio-8065-exec-4] c.y.e.m.CategoryMapper.listCategoryDTO   : ==> Parameters: 
2022-02-11 11:43:30.765 DEBUG 29004 --- [http-nio-8065-exec-4] c.y.e.m.CategoryMapper.listCategoryDTO   : <==      Total: 2
2022-02-11 11:43:30.801 DEBUG 29004 --- [http-nio-8065-exec-3] c.y.e.m.A.pageArticleDTO_mpCount         : ==>  Preparing: SELECT COUNT(*) FROM (SELECT t1.id, t1.title, t1.stamp, t1.comments, t1.original, t1.status, t1.recommend, t1.appreciate, t1.views, t1.create_time, t1.update_time, t1.user_id, t1.category_id, t2.name category_name, COUNT(t3.id) comment_counts FROM article t1 LEFT JOIN category t2 ON t1.category_id = t2.id LEFT JOIN comment t3 ON t1.id = t3.article_id WHERE 1 = 1 AND t1.deleted = 0 GROUP BY t1.id ORDER BY t1.update_time DESC) TOTAL
2022-02-11 11:43:30.802 DEBUG 29004 --- [http-nio-8065-exec-3] c.y.e.m.A.pageArticleDTO_mpCount         : ==> Parameters: 
2022-02-11 11:43:30.811 DEBUG 29004 --- [http-nio-8065-exec-3] c.y.e.m.A.pageArticleDTO_mpCount         : <==      Total: 1
2022-02-11 11:43:30.816 DEBUG 29004 --- [http-nio-8065-exec-3] c.y.e.m.ArticleMapper.pageArticleDTO     : ==>  Preparing: SELECT t1.id, t1.title, t1.stamp, t1.comments, t1.original, t1.status, t1.recommend, t1.appreciate, t1.views, t1.create_time, t1.update_time, t1.user_id, t1.category_id, t2.name category_name, COUNT(t3.id) comment_counts FROM article t1 left join category t2 on t1.category_id = t2.id left join comment t3 on t1.id = t3.article_id where 1 = 1 and t1.deleted = 0 GROUP BY t1.id ORDER BY t1.update_time DESC LIMIT ?
2022-02-11 11:43:30.816 DEBUG 29004 --- [http-nio-8065-exec-3] c.y.e.m.ArticleMapper.pageArticleDTO     : ==> Parameters: 10(Long)
2022-02-11 11:43:30.828 DEBUG 29004 --- [http-nio-8065-exec-3] c.y.e.m.ArticleMapper.pageArticleDTO     : <==      Total: 8
2022-02-11 11:43:30.836 DEBUG 29004 --- [http-nio-8065-exec-3] c.y.e.m.A.listArticleTagRelation         : ==>  Preparing: SELECT t1.article_id, t1.tag_id, t2.NAME tag_name FROM `article_tag_relation` t1 LEFT JOIN tag t2 ON t1.tag_id = t2.id where t1.deleted = 0 and t1.article_id in ( ? , ? , ? , ? , ? , ? , ? , ? )
2022-02-11 11:43:30.836 DEBUG 29004 --- [http-nio-8065-exec-3] c.y.e.m.A.listArticleTagRelation         : ==> Parameters: 1491400438823596033(Long), 1478682493945196546(Long), 1473299945589125122(Long), 1471060099663474689(Long), 1463756487044231169(Long), 1461568605407682562(Long), 1459070158997823489(Long), 1455442044157722626(Long)
2022-02-11 11:43:30.845 DEBUG 29004 --- [http-nio-8065-exec-3] c.y.e.m.A.listArticleTagRelation         : <==      Total: 8
2022-02-11 11:43:30.968 DEBUG 29004 --- [http-nio-8065-exec-5] c.y.e.mapper.TagMapper.listTagDTO        : ==>  Preparing: select * from tag where deleted = 0
2022-02-11 11:43:30.968 DEBUG 29004 --- [http-nio-8065-exec-5] c.y.e.mapper.TagMapper.listTagDTO        : ==> Parameters: 
2022-02-11 11:43:30.978 DEBUG 29004 --- [http-nio-8065-exec-5] c.y.e.mapper.TagMapper.listTagDTO        : <==      Total: 7
2022-02-11 11:43:32.030 DEBUG 29004 --- [http-nio-8065-exec-7] c.y.e.m.CategoryMapper.listCategoryDTO   : ==>  Preparing: select * from category where deleted = 0
2022-02-11 11:43:32.030 DEBUG 29004 --- [http-nio-8065-exec-8] c.y.e.mapper.TagMapper.listTagDTO        : ==>  Preparing: select * from tag where deleted = 0
2022-02-11 11:43:32.029 DEBUG 29004 --- [http-nio-8065-exec-6] c.y.e.m.ArticleMapper.getArticleDetail   : ==>  Preparing: SELECT t1.id, t1.title, t1.stamp, t1.comments, t1.original, t1.content, t1.status, t1.recommend, t1.appreciate, t1.views, t1.create_time, t1.update_time, t1.user_id, t1.category_id, t2.name category_name FROM article t1 left join category t2 on t1.category_id = t2.id where t1.deleted = 0 and t1.id = ?
2022-02-11 11:43:32.030 DEBUG 29004 --- [http-nio-8065-exec-8] c.y.e.mapper.TagMapper.listTagDTO        : ==> Parameters: 
2022-02-11 11:43:32.030 DEBUG 29004 --- [http-nio-8065-exec-7] c.y.e.m.CategoryMapper.listCategoryDTO   : ==> Parameters: 
2022-02-11 11:43:32.030 DEBUG 29004 --- [http-nio-8065-exec-6] c.y.e.m.ArticleMapper.getArticleDetail   : ==> Parameters: 1478682493945196546(Long)
2022-02-11 11:43:32.039 DEBUG 29004 --- [http-nio-8065-exec-7] c.y.e.m.CategoryMapper.listCategoryDTO   : <==      Total: 2
2022-02-11 11:43:32.040 DEBUG 29004 --- [http-nio-8065-exec-8] c.y.e.mapper.TagMapper.listTagDTO        : <==      Total: 7
2022-02-11 11:43:32.051 DEBUG 29004 --- [http-nio-8065-exec-6] c.y.e.m.A.listTagByArticleId             : ====>  Preparing: SELECT t2.id, t2.name FROM article_tag_relation t1 LEFT JOIN tag t2 ON t1.tag_id = t2.id WHERE t1.deleted = 0 and t1.article_id = ?
2022-02-11 11:43:32.052 DEBUG 29004 --- [http-nio-8065-exec-6] c.y.e.m.A.listTagByArticleId             : ====> Parameters: 1478682493945196546(Long)
2022-02-11 11:43:32.060 DEBUG 29004 --- [http-nio-8065-exec-6] c.y.e.m.A.listTagByArticleId             : <====      Total: 1
2022-02-11 11:43:32.060 DEBUG 29004 --- [http-nio-8065-exec-6] c.y.e.m.ArticleMapper.getArticleDetail   : <==      Total: 1
2022-02-11 11:43:33.418 DEBUG 29004 --- [http-nio-8065-exec-9] c.y.e.mapper.ArticleMapper.getArticle    : ==>  Preparing: SELECT t1.id, t1.title, t1.stamp, t1.comments, t1.original, t1.status, t1.recommend, t1.appreciate, t1.views, t1.create_time, t1.update_time, t1.user_id, t1.category_id, t2.name category_name FROM article t1 left join category t2 on t1.category_id = t2.id where t1.deleted = 0 and t1.id = ?
2022-02-11 11:43:33.418 DEBUG 29004 --- [http-nio-8065-exec-9] c.y.e.mapper.ArticleMapper.getArticle    : ==> Parameters: 1478682493945196546(Long)
2022-02-11 11:43:33.426 DEBUG 29004 --- [http-nio-8065-exec-9] c.y.e.m.A.listTagByArticleId             : ====>  Preparing: SELECT t2.id, t2.name FROM article_tag_relation t1 LEFT JOIN tag t2 ON t1.tag_id = t2.id WHERE t1.deleted = 0 and t1.article_id = ?
2022-02-11 11:43:33.427 DEBUG 29004 --- [http-nio-8065-exec-9] c.y.e.m.A.listTagByArticleId             : ====> Parameters: 1478682493945196546(Long)
2022-02-11 11:43:33.435 DEBUG 29004 --- [http-nio-8065-exec-9] c.y.e.m.A.listTagByArticleId             : <====      Total: 1
2022-02-11 11:43:33.436 DEBUG 29004 --- [http-nio-8065-exec-9] c.y.e.mapper.ArticleMapper.getArticle    : <==      Total: 1
2022-02-11 11:49:14.250  INFO 4752 --- [restartedMain] c.yi.enhancement.EnhancementApplication  : Starting EnhancementApplication using Java 1.8.0_311 on LAPTOP-7I9LVMS7 with PID 4752 (E:\1-my-project\blog-enhancement\target\classes started by 刘文鉴 in E:\1-my-project\blog-enhancement)
2022-02-11 11:49:14.252 DEBUG 4752 --- [restartedMain] c.yi.enhancement.EnhancementApplication  : Running with Spring Boot v2.5.0, Spring v5.3.7
2022-02-11 11:49:14.252  INFO 4752 --- [restartedMain] c.yi.enhancement.EnhancementApplication  : No active profile set, falling back to default profiles: default
2022-02-11 11:49:14.280  INFO 4752 --- [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in E:\maven-repository\blog-enhancement-maven\blog-enhancement-repository\com\sun\xml\bind\jaxb-impl\2.2.3-1\jaxb-impl-2.2.3-1.jar referenced one or more files that do not exist: file:/E:/maven-repository/blog-enhancement-maven/blog-enhancement-repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jaxb-api.jar,file:/E:/maven-repository/blog-enhancement-maven/blog-enhancement-repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/activation.jar,file:/E:/maven-repository/blog-enhancement-maven/blog-enhancement-repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jsr173_1.0_api.jar,file:/E:/maven-repository/blog-enhancement-maven/blog-enhancement-repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jaxb1-impl.jar
2022-02-11 11:49:14.281  INFO 4752 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-02-11 11:49:14.281  INFO 4752 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-02-11 11:49:15.097  INFO 4752 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8065 (http)
2022-02-11 11:49:15.104  INFO 4752 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2022-02-11 11:49:15.104  INFO 4752 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.46]
2022-02-11 11:49:15.187  INFO 4752 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2022-02-11 11:49:15.188  INFO 4752 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 907 ms
2022-02-11 11:49:15.528  WARN 4752 --- [restartedMain] c.b.m.core.metadata.TableInfoHelper      : Can not find table primary key in Class: "com.yi.enhancement.model.entity.UserAvatar".
2022-02-11 11:49:16.412  INFO 4752 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2022-02-11 11:49:16.780  INFO 4752 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2022-02-11 11:49:17.309  INFO 4752 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8065 (http) with context path ''
2022-02-11 11:49:17.561  INFO 4752 --- [restartedMain] c.yi.enhancement.EnhancementApplication  : Started EnhancementApplication in 3.886 seconds (JVM running for 4.738)
2022-02-11 11:49:17.562  INFO 4752 --- [restartedMain] o.s.b.a.ApplicationAvailabilityBean      : Application availability state LivenessState changed to CORRECT
2022-02-11 11:49:17.564  INFO 4752 --- [restartedMain] o.s.b.a.ApplicationAvailabilityBean      : Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
2022-02-11 11:51:56.263  INFO 4752 --- [http-nio-8065-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-02-11 11:51:56.263  INFO 4752 --- [http-nio-8065-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2022-02-11 11:51:56.264  INFO 4752 --- [http-nio-8065-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2022-02-11 11:51:56.300  INFO 4752 --- [http-nio-8065-exec-3] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2022-02-11 11:51:56.493  INFO 4752 --- [http-nio-8065-exec-3] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2022-02-11 11:51:56.498 DEBUG 4752 --- [http-nio-8065-exec-3] c.y.e.mapper.TagMapper.listTagDTO        : ==>  Preparing: select * from tag where deleted = 0
2022-02-11 11:51:56.512 DEBUG 4752 --- [http-nio-8065-exec-3] c.y.e.mapper.TagMapper.listTagDTO        : ==> Parameters: 
2022-02-11 11:51:56.534 DEBUG 4752 --- [http-nio-8065-exec-3] c.y.e.mapper.TagMapper.listTagDTO        : <==      Total: 7
2022-02-11 11:51:56.539 DEBUG 4752 --- [http-nio-8065-exec-1] c.y.e.m.CategoryMapper.listCategoryDTO   : ==>  Preparing: select * from category where deleted = 0
2022-02-11 11:51:56.539 DEBUG 4752 --- [http-nio-8065-exec-1] c.y.e.m.CategoryMapper.listCategoryDTO   : ==> Parameters: 
2022-02-11 11:51:56.549 DEBUG 4752 --- [http-nio-8065-exec-1] c.y.e.m.CategoryMapper.listCategoryDTO   : <==      Total: 2
2022-02-11 11:51:56.549 DEBUG 4752 --- [http-nio-8065-exec-2] c.y.e.m.A.pageArticleDTO_mpCount         : ==>  Preparing: SELECT COUNT(*) FROM (SELECT t1.id, t1.title, t1.stamp, t1.comments, t1.original, t1.status, t1.recommend, t1.appreciate, t1.views, t1.create_time, t1.update_time, t1.user_id, t1.category_id, t2.name category_name, COUNT(t3.id) comment_counts FROM article t1 LEFT JOIN category t2 ON t1.category_id = t2.id LEFT JOIN comment t3 ON t1.id = t3.article_id WHERE 1 = 1 AND t1.deleted = 0 GROUP BY t1.id ORDER BY t1.update_time DESC) TOTAL
2022-02-11 11:51:56.549 DEBUG 4752 --- [http-nio-8065-exec-2] c.y.e.m.A.pageArticleDTO_mpCount         : ==> Parameters: 
2022-02-11 11:51:56.558 DEBUG 4752 --- [http-nio-8065-exec-2] c.y.e.m.A.pageArticleDTO_mpCount         : <==      Total: 1
2022-02-11 11:51:56.562 DEBUG 4752 --- [http-nio-8065-exec-2] c.y.e.m.ArticleMapper.pageArticleDTO     : ==>  Preparing: SELECT t1.id, t1.title, t1.stamp, t1.comments, t1.original, t1.status, t1.recommend, t1.appreciate, t1.views, t1.create_time, t1.update_time, t1.user_id, t1.category_id, t2.name category_name, COUNT(t3.id) comment_counts FROM article t1 left join category t2 on t1.category_id = t2.id left join comment t3 on t1.id = t3.article_id where 1 = 1 and t1.deleted = 0 GROUP BY t1.id ORDER BY t1.update_time DESC LIMIT ?
2022-02-11 11:51:56.563 DEBUG 4752 --- [http-nio-8065-exec-2] c.y.e.m.ArticleMapper.pageArticleDTO     : ==> Parameters: 10(Long)
2022-02-11 11:51:56.575 DEBUG 4752 --- [http-nio-8065-exec-2] c.y.e.m.ArticleMapper.pageArticleDTO     : <==      Total: 8
2022-02-11 11:51:56.583 DEBUG 4752 --- [http-nio-8065-exec-2] c.y.e.m.A.listArticleTagRelation         : ==>  Preparing: SELECT t1.article_id, t1.tag_id, t2.NAME tag_name FROM `article_tag_relation` t1 LEFT JOIN tag t2 ON t1.tag_id = t2.id where t1.deleted = 0 and t1.article_id in ( ? , ? , ? , ? , ? , ? , ? , ? )
2022-02-11 11:51:56.583 DEBUG 4752 --- [http-nio-8065-exec-2] c.y.e.m.A.listArticleTagRelation         : ==> Parameters: 1491400438823596033(Long), 1478682493945196546(Long), 1473299945589125122(Long), 1471060099663474689(Long), 1463756487044231169(Long), 1461568605407682562(Long), 1459070158997823489(Long), 1455442044157722626(Long)
2022-02-11 11:51:56.592 DEBUG 4752 --- [http-nio-8065-exec-2] c.y.e.m.A.listArticleTagRelation         : <==      Total: 8
2022-02-11 11:51:58.143 DEBUG 4752 --- [http-nio-8065-exec-4] c.y.e.m.ArticleMapper.getArticleDetail   : ==>  Preparing: SELECT t1.id, t1.title, t1.stamp, t1.comments, t1.original, t1.content, t1.status, t1.recommend, t1.appreciate, t1.views, t1.create_time, t1.update_time, t1.user_id, t1.category_id, t2.name category_name FROM article t1 left join category t2 on t1.category_id = t2.id where t1.deleted = 0 and t1.id = ?
2022-02-11 11:51:58.143 DEBUG 4752 --- [http-nio-8065-exec-4] c.y.e.m.ArticleMapper.getArticleDetail   : ==> Parameters: 1491400438823596033(Long)
2022-02-11 11:51:58.157 DEBUG 4752 --- [http-nio-8065-exec-4] c.y.e.m.A.listTagByArticleId             : ====>  Preparing: SELECT t2.id, t2.name FROM article_tag_relation t1 LEFT JOIN tag t2 ON t1.tag_id = t2.id WHERE t1.deleted = 0 and t1.article_id = ?
2022-02-11 11:51:58.158 DEBUG 4752 --- [http-nio-8065-exec-4] c.y.e.m.A.listTagByArticleId             : ====> Parameters: 1491400438823596033(Long)
2022-02-11 11:51:58.166 DEBUG 4752 --- [http-nio-8065-exec-4] c.y.e.m.A.listTagByArticleId             : <====      Total: 0
2022-02-11 11:51:58.166 DEBUG 4752 --- [http-nio-8065-exec-4] c.y.e.m.ArticleMapper.getArticleDetail   : <==      Total: 1
2022-02-11 11:51:58.439 DEBUG 4752 --- [http-nio-8065-exec-6] c.y.e.m.CategoryMapper.listCategoryDTO   : ==>  Preparing: select * from category where deleted = 0
2022-02-11 11:51:58.440 DEBUG 4752 --- [http-nio-8065-exec-6] c.y.e.m.CategoryMapper.listCategoryDTO   : ==> Parameters: 
2022-02-11 11:51:58.447 DEBUG 4752 --- [http-nio-8065-exec-5] c.y.e.mapper.TagMapper.listTagDTO        : ==>  Preparing: select * from tag where deleted = 0
2022-02-11 11:51:58.447 DEBUG 4752 --- [http-nio-8065-exec-5] c.y.e.mapper.TagMapper.listTagDTO        : ==> Parameters: 
2022-02-11 11:51:58.447 DEBUG 4752 --- [http-nio-8065-exec-6] c.y.e.m.CategoryMapper.listCategoryDTO   : <==      Total: 2
2022-02-11 11:51:58.456 DEBUG 4752 --- [http-nio-8065-exec-5] c.y.e.mapper.TagMapper.listTagDTO        : <==      Total: 7
2022-02-11 11:51:59.633 DEBUG 4752 --- [http-nio-8065-exec-7] c.y.e.mapper.ArticleMapper.getArticle    : ==>  Preparing: SELECT t1.id, t1.title, t1.stamp, t1.comments, t1.original, t1.status, t1.recommend, t1.appreciate, t1.views, t1.create_time, t1.update_time, t1.user_id, t1.category_id, t2.name category_name FROM article t1 left join category t2 on t1.category_id = t2.id where t1.deleted = 0 and t1.id = ?
2022-02-11 11:51:59.633 DEBUG 4752 --- [http-nio-8065-exec-7] c.y.e.mapper.ArticleMapper.getArticle    : ==> Parameters: 1491400438823596033(Long)
2022-02-11 11:51:59.642 DEBUG 4752 --- [http-nio-8065-exec-7] c.y.e.m.A.listTagByArticleId             : ====>  Preparing: SELECT t2.id, t2.name FROM article_tag_relation t1 LEFT JOIN tag t2 ON t1.tag_id = t2.id WHERE t1.deleted = 0 and t1.article_id = ?
2022-02-11 11:51:59.642 DEBUG 4752 --- [http-nio-8065-exec-7] c.y.e.m.A.listTagByArticleId             : ====> Parameters: 1491400438823596033(Long)
2022-02-11 11:51:59.650 DEBUG 4752 --- [http-nio-8065-exec-7] c.y.e.m.A.listTagByArticleId             : <====      Total: 0
2022-02-11 11:51:59.650 DEBUG 4752 --- [http-nio-8065-exec-7] c.y.e.mapper.ArticleMapper.getArticle    : <==      Total: 1
2022-02-11 11:52:11.459 DEBUG 4752 --- [http-nio-8065-exec-8] c.y.e.mapper.ArticleMapper.selectById    : ==>  Preparing: SELECT id,title,content,first_picture,stamp,comments,original,status,recommend,appreciate,views,create_time,update_time,category_id,user_id,deleted FROM article WHERE id=? AND deleted=0
2022-02-11 11:52:11.460 DEBUG 4752 --- [http-nio-8065-exec-8] c.y.e.mapper.ArticleMapper.selectById    : ==> Parameters: 1491400438823596033(Long)
2022-02-11 11:52:11.469 DEBUG 4752 --- [http-nio-8065-exec-8] c.y.e.mapper.ArticleMapper.selectById    : <==      Total: 1
2022-02-11 11:52:11.479 DEBUG 4752 --- [http-nio-8065-exec-8] c.y.e.mapper.ArticleMapper.updateById    : ==>  Preparing: UPDATE article SET title=?, content=?, stamp=?, comments=?, status=?, recommend=?, appreciate=?, update_time=?, category_id=? WHERE id=? AND deleted=0
2022-02-11 11:52:11.482 DEBUG 4752 --- [http-nio-8065-exec-8] c.y.e.mapper.ArticleMapper.updateById    : ==> Parameters: 优化sql(String), ## sql优化

### sql优化需知

mysql版本：Server version: 8.0.13 MySQL

sql优化遵从三点：

- 最大化利用索引；
- 尽可能避免全表扫描；
- 减少无效数据的查询；

#### select语句-语法顺序

```sql
1. SELECT 
2. DISTINCT <select_list>
3. FROM <left_table>
4. <join_type> JOIN <right_table>
5. ON <join_condition>
6. WHERE <where_condition>
7. GROUP BY <group_by_list>
8. HAVING <having_condition>
9. ORDER BY <order_by_condition>
10.LIMIT <limit_number>
```

#### select语句-执行顺序

**FROM**
<表名> # 选取表，将多个表数据通过笛卡尔积变成一个表。
**ON**
<筛选条件> # 对笛卡尔积的虚表进行筛选
**JOIN** <join, left join, right join...>
<join表> # 指定join，用于添加数据到on之后的虚表中，例如left join会将左表的剩余数据添加到虚表中
**WHERE**
<where条件> # 对上述虚表进行筛选
**GROUP BY**
<分组条件> # 分组
<SUM()等聚合函数> # 用于having子句进行判断，在书写上这类聚合函数是写在having判断里面的
**HAVING**
<分组筛选> # 对分组后的结果进行聚合筛选
**SELECT**
<返回数据列表> # 返回的单列必须在group by子句中，聚合函数除外
**DISTINCT**
\# 数据除重
**ORDER BY**
<排序条件> # 排序
**LIMIT**
<行数限制>

#### 优化关键字：explain

针对慢sql，常常用explain这个命令来查看一个这些SQL语句的执行计划，查看该SQL语句有没有使用上了索引，有没有做全表扫描，这都可以通过explain命令来查看。所以我们深入了解MySQL的基于开销的优化器，还可以获得很多可能被优化器考虑到的访问策略的细节，以及当运行SQL语句时哪种策略预计会被优化器采用。

![image-20220209103041703.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/e69179ee-45ae-470d-b266-a749eb4cb6e6.png)
下面对这些字段出现的可能进行解释：

### 1、id

表示select标识符，同时表明执行顺序，也就是说id是一个查询的序列号，查询序号即为sql语句执行的顺序。

（1）当id值相同时，按从上到下的顺序执行。

（2）当id全部不同时，按id从大到小执行。

（3）当id部分不同时，先执行id大的，id相同的，按从上到下的顺序执行。

#### 2、select_type

（1）simple：表示简单的select，没有union和子查询

（2）primary：最外面的查询 或者 主查询，在有子查询的语句中，最外面的select查询就是primary

（3）subquery：子查询

（4）union：union语句的第二个或者说是后面那一个select

（5）union result：union之后的结果

（6）dependent unoin：unoin 中的第二个或随后的 select 查询，依赖于外部查询的结果集

（7）dependent subquery：子查询中的第一个 select 查询，依赖于外部 查询的结果集

（8）derived：衍生表（5.7版本中不存在这一个）

#### 3、table

通常是表名，或者表的别名，或者一个为查询产生临时表的标示符（如派生表、子查询、集合）

#### 4、partitions

使用的哪些分区（对于非分区表值为null），在5.5版本中需要加上explain partitions select ...

#### 5.type

（1）const：表中最多有一个匹配行，const用于比较primary key 或者unique索引。因为只匹配一行数据，所以很快

（2）eq_ref：唯一性索引扫描，对于每个来自于前面的表的记录，从该表中读取唯一一行

（3）ref：非唯一性索引扫描，对于每个来自于前面的表的记录，所有匹配的行从这张表取出

（4）ref_or_null：类似于ref，但是可以搜索包含null值的行，例如：select * from student where address='xxx' or address is null，需要在address建立索引。

（5）index_merge：查询语句用到了一张表的多个索引时，mysql会将多个索引合并到一起

（6）range：按指定范围（如in、<、>、between and等，但是前提是此字段要建立索引）来检索，很常见。如：select * from student where id < 5，id上要有索引。

（7）index：全”表“扫描，但是是在索引树中扫描，通常比ALL快，因为索引文件通常比数据文件小，index扫描是通过二叉树的方式扫描，而all是扫描物理表。（也就是说虽然all和index都是读全表，但index是从索引中读取的，而all是从硬盘中读的）。例如：select name from student，但name字段上需要建立索引，也就是查询的字段属于索引中的字段。

（8）all：全表扫描，扫描完整的物理表，此时就需要优化了。

这8种type代表性能由好到差，一般优化可达range或者ref

#### 6.possible_keys

指出 MySQL 能在该表中可能使用的索引，显示的是索引的名称，多个索引用逗号隔开，如果没有，则为null。

#### 7.key

MySQL决定实际用到的索引，显示的是索引的名称，多个索引用逗号隔开，如果没有，则为null。

#### 8.key_len

当用到组合索引的时候判断索引是否完全用上。

> 实例：假设student表中有id int,name char(20) DEFAULT NULL,address varchar(20) DEFAULT NULL,remark varchar(20) NOT NULL 字段，建立的索引是 idx_address_remark（在address和remark上建立的组合索引）
>
> 查询的sql是：select * from student where address='深圳' and remark='java coder'，此时，执行计划中的key_len是 （20*3+1+2）+ （20*3+2）= 125，那么这个是怎么得来的呢？
>
> 解析：20表示建表的时候 varchar(20) ，3表示utf8字符集占用3个字节，1表示MySQL需要1个字节表示null，2表示变长字段（varchar是变长的）。  
>
> 假设drop掉刚刚建立的索引，新建索引 idx_name_address（在name和address上建立组合索引）
>
> 查询的sql是：select * from student where name='xbq' and address='深圳'，此时，执行计划中的key_len是 （20*3+1）+ （20*3+2）= 123，那么这个值是怎么得来的呢？
>
> 解析：20表示建表的时候 char(20) ，3表示utf8字符集占用3个字节，1表示MySQL需要1个字节标识null，即 20*3+1，后面的同样的道理。

key_len只计算where条件用到的索引长度，而排序和分组就算用到了索引，也不会计算到key_len中。

计算key_len的公式：

> varchr(10)变长字段且允许NULL = 10 * ( character set：utf8=3,gbk=2,latin1=1) + 1(NULL) + 2(变长字段)
>
> varchr(10)变长字段且不允许NULL = 10 *( character set：utf8=3,gbk=2,latin1=1) + 2(变长字段)
>
> char(10)固定字段且允许NULL = 10 * ( character set：utf8=3,gbk=2,latin1=1)+1(NULL)
>
> char(10)固定字段且不允许NULL = 10 * ( character set：utf8=3,gbk=2,latin1=1)

#### 9.ref

显示索引的哪一列被使用了，如果可能的话，是一个常数

#### 10.rows

显示mysql认为执行查询时必须要返回的行数，可结合type和key分析，没有用上索引的情况下，会全表扫描。rows的值越小越好，说明检索的数据少

#### 11.filtered

给出了一个百分比的值，这个百分比值和rows列的值一起使用，可以估计出那些将要和执行计划中的前一个表（前一个表就是指id列的值比当前表的id小的表）进行连接的行的数目。

这一列在5.5版本中，需要加上 explain extended select ....。

#### 12.extra

此字段显示一些额外的信息，但是此字段的部分值具有优化的参考意义。

（1）using where：表示查询使用了where 语句来处理结果

（2）using index：表示使用了覆盖索引。这个值重点强调了只需要使用索引就可以满足查询表的要求，不需要直接访问表数据。

（3）using join buffer：这个值强调了在获取连接条件时没有使用索引，并且需要连接缓冲区来存储中间结果。如果出现了这个值，那应该注意，根据查询的具体情况可能需要添加索引来改进性能

（4）using filesort：这是 order by 语句的结果。这可能是一个CPU密集型的过程。using filesort表示出现了文件内排序，表示很不好的现象，必须要优化，特别是大表，可以通过选择合适的索引来改进性能，用索引来为查询结果排序。

（5）using temporary：mysql需要创建一张临时表来保存中间结果。 也就是说，需要先把数据放到临时表中，然后从临时表中获取需要的数据。出现这种临时表，也是必须需要优化的地方，特别是数据量大的情况。两个常见的原因是在来自不同表的列上使用了distinct，或者使用了不同的 order by 和 group by 列。

### sql索引优化

对查询进行优化，应尽量避免全表扫描，首先应考虑在 where 及 order by 涉及的列上建立索引。

#### 1、避免在where子句中使用!=或<或>操作符，否则将引擎放弃使用索引而进行全表扫描。

![image-20220209110259285.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/201dd710-d7d3-48c3-a5bd-49d822b470b4.png)

但该效果仅仅是让该字段索引失效，比如以上面的例子来说，如果有以order_status为首的联合索引，那么该联合索引不能命中，但如果还有其他单列索引，是仍然可以命中索引的。下面的语句都是一样的，失效只是导致当前索引失效。

![image-20220209110604150.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/c9b93726-dc7d-4736-8ea4-8f3c85ba93d7.png)

#### 2、尽量避免在字段开头模糊查询，会导致数据库引擎放弃索引进行全表扫描。

```text
SELECT * FROM sys_job_log WHERE job_name like '%HandleCustomerDayAmountChangeJob%'
```

优化方式：尽量在字段后面使用模糊查询。如下：

```text
SELECT * FROM sys_job_log WHERE job_name like 'HandleCustomerDayAmountChangeJob%'
```

如果需求是要在前面使用模糊查询，

- 使用FullText全文索引，用match against 检索
- 数据量较大的情况，建议引用ElasticSearch、solr，亿级数据量检索速度秒级

下面是全文索引

![image-20220209115051398.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/33976da2-3b7b-4aeb-96cf-cc306d43a392.png)

---分割线---

![image-20220209115205488.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/d99cde70-8a8d-4a3e-aebf-360eba779271.png)

#### 3、关于IN和OR和IS NULL。

mysql在8.0.13的版本已经优化了关于IN、OR和IS NULL的索引命中

![image-20220209193523227.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/2e52fd21-b787-45c9-ae59-032cf26c4d18.png)

#### 4、尽量避免使用NOT IN或IS NOT NULL等否定关键字，会导致数据库引擎放弃索引进行全表扫描。

![image-20220209193723159.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/6923c283-2fef-4306-8283-57064e15200b.png)

---分割线---

![image-20220209194131592.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/2e3ed807-0c96-42c4-9849-cd4db5b14b65.png)

#### 5、尽量避免在where条件中等号的左侧进行表达式、函数操作，会导致数据库引擎放弃索引进行全表扫描。

![image-20220209195726228.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/cf55939c-496a-41c3-80cd-986e6eadd9d2.png)

---分割线---

![image-20220209195653187.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/697a7095-96f7-4449-98fd-771e9ff2270b.png)

#### 6、where条件中没有联合索引的前置项导致联合索引完全失效

![image-20220209202643790.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/b6db75f0-65fc-4cdb-bf27-a90c76ee4d52.png)

**结果2**![image-20220209202741884.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/b06b832e-f570-4a15-9c07-47e1c6a13bc8.png)

**结果3**![image-20220209202748838.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/82c2e67d-73bd-4244-b274-011a48d3d096.png)

**结果4**![image-20220209202757561.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/cf55f3ad-ed60-46aa-af2d-c37e66649449.png)

**结果5**![image-20220209202803738.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/d0127e0b-cd47-457e-92af-9c1ffbca8648.png)

最左匹配法则，where条件中必须包括联合索引最左边的一项，否则无法命中索引。

这里需要注意的是mysql中会内部优化where的条件，来匹配最佳的索引。

#### 7、隐式类型转换造成不使用索引

如下SQL语句由于索引对列类型为varchar，但给定的值为数值，涉及隐式类型转换，造成不能正确走索引。

![image-20220209203710764.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/1ca7a281-74e6-4f4e-a18e-3340fd9d413b.png)

![image-20220209203728796.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/022fb57a-dabb-4ffc-a49e-3e059f3df368.png)

--------未完成----------

### 语句优化

tips：

1、避免将常更新的字段设置为索引

2、避免将区分度不大的字段设置为索引

(String), true(Boolean), true(Boolean), true(Boolean), true(Boolean), true(Boolean), 2022-02-11 11:52:11.458(Timestamp), 1446769938234671105(Long), 1491400438823596033(Long)
2022-02-11 11:52:11.499 DEBUG 4752 --- [http-nio-8065-exec-8] c.y.e.mapper.ArticleMapper.updateById    : <==    Updates: 1
2022-02-11 11:52:11.501 DEBUG 4752 --- [http-nio-8065-exec-8] c.y.e.m.A.deleteReally                   : ==>  Preparing: DELETE FROM article_tag_relation WHERE article_id = ?
2022-02-11 11:52:11.501 DEBUG 4752 --- [http-nio-8065-exec-8] c.y.e.m.A.deleteReally                   : ==> Parameters: 1491400438823596033(Long)
2022-02-11 11:52:11.515 DEBUG 4752 --- [http-nio-8065-exec-8] c.y.e.m.A.deleteReally                   : <==    Updates: 0
2022-02-11 11:52:11.519 DEBUG 4752 --- [http-nio-8065-exec-8] c.y.e.m.ArticleTagRelationMapper.insert  : ==>  Preparing: INSERT INTO article_tag_relation ( id, article_id, tag_id, deleted ) VALUES ( ?, ?, ?, ? )
2022-02-11 11:52:11.520 DEBUG 4752 --- [http-nio-8065-exec-8] c.y.e.m.ArticleTagRelationMapper.insert  : ==> Parameters: 1491983377311199234(Long), 1491400438823596033(Long), 1491400438878121985(Long), 0(Integer)
2022-02-11 11:52:11.972 DEBUG 4752 --- [http-nio-8065-exec-10] c.y.e.mapper.TagMapper.listTagDTO        : ==>  Preparing: select * from tag where deleted = 0
2022-02-11 11:52:11.972 DEBUG 4752 --- [http-nio-8065-exec-10] c.y.e.mapper.TagMapper.listTagDTO        : ==> Parameters: 
2022-02-11 11:52:11.982 DEBUG 4752 --- [http-nio-8065-exec-10] c.y.e.mapper.TagMapper.listTagDTO        : <==      Total: 7
2022-02-11 11:52:13.766 DEBUG 4752 --- [http-nio-8065-exec-9] c.y.e.m.A.pageArticleDTO_mpCount         : ==>  Preparing: SELECT COUNT(*) FROM (SELECT t1.id, t1.title, t1.stamp, t1.comments, t1.original, t1.status, t1.recommend, t1.appreciate, t1.views, t1.create_time, t1.update_time, t1.user_id, t1.category_id, t2.name category_name, COUNT(t3.id) comment_counts FROM article t1 LEFT JOIN category t2 ON t1.category_id = t2.id LEFT JOIN comment t3 ON t1.id = t3.article_id WHERE 1 = 1 AND t1.deleted = 0 GROUP BY t1.id ORDER BY t1.update_time DESC) TOTAL
2022-02-11 11:52:13.766 DEBUG 4752 --- [http-nio-8065-exec-9] c.y.e.m.A.pageArticleDTO_mpCount         : ==> Parameters: 
2022-02-11 11:52:13.775 DEBUG 4752 --- [http-nio-8065-exec-9] c.y.e.m.A.pageArticleDTO_mpCount         : <==      Total: 1
2022-02-11 11:52:13.776 DEBUG 4752 --- [http-nio-8065-exec-9] c.y.e.m.ArticleMapper.pageArticleDTO     : ==>  Preparing: SELECT t1.id, t1.title, t1.stamp, t1.comments, t1.original, t1.status, t1.recommend, t1.appreciate, t1.views, t1.create_time, t1.update_time, t1.user_id, t1.category_id, t2.name category_name, COUNT(t3.id) comment_counts FROM article t1 left join category t2 on t1.category_id = t2.id left join comment t3 on t1.id = t3.article_id where 1 = 1 and t1.deleted = 0 GROUP BY t1.id ORDER BY t1.update_time DESC LIMIT ?
2022-02-11 11:52:13.776 DEBUG 4752 --- [http-nio-8065-exec-9] c.y.e.m.ArticleMapper.pageArticleDTO     : ==> Parameters: 10(Long)
2022-02-11 11:52:13.788 DEBUG 4752 --- [http-nio-8065-exec-9] c.y.e.m.ArticleMapper.pageArticleDTO     : <==      Total: 8
2022-02-11 11:52:13.789 DEBUG 4752 --- [http-nio-8065-exec-9] c.y.e.m.A.listArticleTagRelation         : ==>  Preparing: SELECT t1.article_id, t1.tag_id, t2.NAME tag_name FROM `article_tag_relation` t1 LEFT JOIN tag t2 ON t1.tag_id = t2.id where t1.deleted = 0 and t1.article_id in ( ? , ? , ? , ? , ? , ? , ? , ? )
2022-02-11 11:52:13.789 DEBUG 4752 --- [http-nio-8065-exec-9] c.y.e.m.A.listArticleTagRelation         : ==> Parameters: 1491400438823596033(Long), 1478682493945196546(Long), 1473299945589125122(Long), 1471060099663474689(Long), 1463756487044231169(Long), 1461568605407682562(Long), 1459070158997823489(Long), 1455442044157722626(Long)
2022-02-11 11:52:13.798 DEBUG 4752 --- [http-nio-8065-exec-9] c.y.e.m.A.listArticleTagRelation         : <==      Total: 9
2022-02-11 11:52:14.067 DEBUG 4752 --- [http-nio-8065-exec-1] c.y.e.m.CategoryMapper.listCategoryDTO   : ==>  Preparing: select * from category where deleted = 0
2022-02-11 11:52:14.067 DEBUG 4752 --- [http-nio-8065-exec-1] c.y.e.m.CategoryMapper.listCategoryDTO   : ==> Parameters: 
2022-02-11 11:52:14.074 DEBUG 4752 --- [http-nio-8065-exec-3] c.y.e.mapper.TagMapper.listTagDTO        : ==>  Preparing: select * from tag where deleted = 0
2022-02-11 11:52:14.074 DEBUG 4752 --- [http-nio-8065-exec-3] c.y.e.mapper.TagMapper.listTagDTO        : ==> Parameters: 
2022-02-11 11:52:14.075 DEBUG 4752 --- [http-nio-8065-exec-1] c.y.e.m.CategoryMapper.listCategoryDTO   : <==      Total: 2
2022-02-11 11:52:14.082 DEBUG 4752 --- [http-nio-8065-exec-3] c.y.e.mapper.TagMapper.listTagDTO        : <==      Total: 7
2022-02-11 11:52:15.979 DEBUG 4752 --- [http-nio-8065-exec-4] c.y.e.m.CategoryMapper.listCategoryDTO   : ==>  Preparing: select * from category where deleted = 0
2022-02-11 11:52:15.979 DEBUG 4752 --- [http-nio-8065-exec-2] c.y.e.m.ArticleMapper.getArticleDetail   : ==>  Preparing: SELECT t1.id, t1.title, t1.stamp, t1.comments, t1.original, t1.content, t1.status, t1.recommend, t1.appreciate, t1.views, t1.create_time, t1.update_time, t1.user_id, t1.category_id, t2.name category_name FROM article t1 left join category t2 on t1.category_id = t2.id where t1.deleted = 0 and t1.id = ?
2022-02-11 11:52:15.979 DEBUG 4752 --- [http-nio-8065-exec-6] c.y.e.mapper.TagMapper.listTagDTO        : ==>  Preparing: select * from tag where deleted = 0
2022-02-11 11:52:15.979 DEBUG 4752 --- [http-nio-8065-exec-4] c.y.e.m.CategoryMapper.listCategoryDTO   : ==> Parameters: 
2022-02-11 11:52:15.979 DEBUG 4752 --- [http-nio-8065-exec-6] c.y.e.mapper.TagMapper.listTagDTO        : ==> Parameters: 
2022-02-11 11:52:15.979 DEBUG 4752 --- [http-nio-8065-exec-2] c.y.e.m.ArticleMapper.getArticleDetail   : ==> Parameters: 1491400438823596033(Long)
2022-02-11 11:52:15.989 DEBUG 4752 --- [http-nio-8065-exec-6] c.y.e.mapper.TagMapper.listTagDTO        : <==      Total: 7
2022-02-11 11:52:15.990 DEBUG 4752 --- [http-nio-8065-exec-4] c.y.e.m.CategoryMapper.listCategoryDTO   : <==      Total: 2
2022-02-11 11:52:15.990 DEBUG 4752 --- [http-nio-8065-exec-2] c.y.e.m.A.listTagByArticleId             : ====>  Preparing: SELECT t2.id, t2.name FROM article_tag_relation t1 LEFT JOIN tag t2 ON t1.tag_id = t2.id WHERE t1.deleted = 0 and t1.article_id = ?
2022-02-11 11:52:16.029 DEBUG 4752 --- [http-nio-8065-exec-2] c.y.e.m.A.listTagByArticleId             : ====> Parameters: 1491400438823596033(Long)
2022-02-11 11:52:16.037 DEBUG 4752 --- [http-nio-8065-exec-2] c.y.e.m.A.listTagByArticleId             : <====      Total: 1
2022-02-11 11:52:16.038 DEBUG 4752 --- [http-nio-8065-exec-2] c.y.e.m.ArticleMapper.getArticleDetail   : <==      Total: 1
2022-02-11 11:52:17.097 DEBUG 4752 --- [http-nio-8065-exec-5] c.y.e.mapper.ArticleMapper.getArticle    : ==>  Preparing: SELECT t1.id, t1.title, t1.stamp, t1.comments, t1.original, t1.status, t1.recommend, t1.appreciate, t1.views, t1.create_time, t1.update_time, t1.user_id, t1.category_id, t2.name category_name FROM article t1 left join category t2 on t1.category_id = t2.id where t1.deleted = 0 and t1.id = ?
2022-02-11 11:52:17.097 DEBUG 4752 --- [http-nio-8065-exec-5] c.y.e.mapper.ArticleMapper.getArticle    : ==> Parameters: 1491400438823596033(Long)
2022-02-11 11:52:17.108 DEBUG 4752 --- [http-nio-8065-exec-5] c.y.e.m.A.listTagByArticleId             : ====>  Preparing: SELECT t2.id, t2.name FROM article_tag_relation t1 LEFT JOIN tag t2 ON t1.tag_id = t2.id WHERE t1.deleted = 0 and t1.article_id = ?
2022-02-11 11:52:17.108 DEBUG 4752 --- [http-nio-8065-exec-5] c.y.e.m.A.listTagByArticleId             : ====> Parameters: 1491400438823596033(Long)
2022-02-11 11:52:17.116 DEBUG 4752 --- [http-nio-8065-exec-5] c.y.e.m.A.listTagByArticleId             : <====      Total: 1
2022-02-11 11:52:17.116 DEBUG 4752 --- [http-nio-8065-exec-5] c.y.e.mapper.ArticleMapper.getArticle    : <==      Total: 1
2022-02-11 11:52:26.194 DEBUG 4752 --- [http-nio-8065-exec-7] c.y.e.mapper.ArticleMapper.getArticle    : ==>  Preparing: SELECT t1.id, t1.title, t1.stamp, t1.comments, t1.original, t1.status, t1.recommend, t1.appreciate, t1.views, t1.create_time, t1.update_time, t1.user_id, t1.category_id, t2.name category_name FROM article t1 left join category t2 on t1.category_id = t2.id where t1.deleted = 0 and t1.id = ?
2022-02-11 11:52:26.194 DEBUG 4752 --- [http-nio-8065-exec-7] c.y.e.mapper.ArticleMapper.getArticle    : ==> Parameters: 1491400438823596033(Long)
2022-02-11 11:52:26.202 DEBUG 4752 --- [http-nio-8065-exec-7] c.y.e.m.A.listTagByArticleId             : ====>  Preparing: SELECT t2.id, t2.name FROM article_tag_relation t1 LEFT JOIN tag t2 ON t1.tag_id = t2.id WHERE t1.deleted = 0 and t1.article_id = ?
2022-02-11 11:52:26.202 DEBUG 4752 --- [http-nio-8065-exec-7] c.y.e.m.A.listTagByArticleId             : ====> Parameters: 1491400438823596033(Long)
2022-02-11 11:52:26.210 DEBUG 4752 --- [http-nio-8065-exec-7] c.y.e.m.A.listTagByArticleId             : <====      Total: 1
2022-02-11 11:52:26.210 DEBUG 4752 --- [http-nio-8065-exec-7] c.y.e.mapper.ArticleMapper.getArticle    : <==      Total: 1
2022-02-11 11:52:29.943 DEBUG 4752 --- [http-nio-8065-exec-8] c.y.e.mapper.ArticleMapper.selectById    : ==>  Preparing: SELECT id,title,content,first_picture,stamp,comments,original,status,recommend,appreciate,views,create_time,update_time,category_id,user_id,deleted FROM article WHERE id=? AND deleted=0
2022-02-11 11:52:29.943 DEBUG 4752 --- [http-nio-8065-exec-8] c.y.e.mapper.ArticleMapper.selectById    : ==> Parameters: 1491400438823596033(Long)
2022-02-11 11:52:29.953 DEBUG 4752 --- [http-nio-8065-exec-8] c.y.e.mapper.ArticleMapper.selectById    : <==      Total: 1
2022-02-11 11:52:29.953 DEBUG 4752 --- [http-nio-8065-exec-8] c.y.e.mapper.ArticleMapper.updateById    : ==>  Preparing: UPDATE article SET title=?, content=?, stamp=?, comments=?, status=?, recommend=?, appreciate=?, update_time=?, category_id=? WHERE id=? AND deleted=0
2022-02-11 11:52:29.954 DEBUG 4752 --- [http-nio-8065-exec-8] c.y.e.mapper.ArticleMapper.updateById    : ==> Parameters: 优化sql(String), ## sql优化

### sql优化需知

mysql版本：Server version: 8.0.13 MySQL

sql优化遵从三点：

- 最大化利用索引；
- 尽可能避免全表扫描；
- 减少无效数据的查询；

#### select语句-语法顺序

```sql
1. SELECT 
2. DISTINCT <select_list>
3. FROM <left_table>
4. <join_type> JOIN <right_table>
5. ON <join_condition>
6. WHERE <where_condition>
7. GROUP BY <group_by_list>
8. HAVING <having_condition>
9. ORDER BY <order_by_condition>
10.LIMIT <limit_number>
```

#### select语句-执行顺序

**FROM**
<表名> # 选取表，将多个表数据通过笛卡尔积变成一个表。
**ON**
<筛选条件> # 对笛卡尔积的虚表进行筛选
**JOIN** <join, left join, right join...>
<join表> # 指定join，用于添加数据到on之后的虚表中，例如left join会将左表的剩余数据添加到虚表中
**WHERE**
<where条件> # 对上述虚表进行筛选
**GROUP BY**
<分组条件> # 分组
<SUM()等聚合函数> # 用于having子句进行判断，在书写上这类聚合函数是写在having判断里面的
**HAVING**
<分组筛选> # 对分组后的结果进行聚合筛选
**SELECT**
<返回数据列表> # 返回的单列必须在group by子句中，聚合函数除外
**DISTINCT**
\# 数据除重
**ORDER BY**
<排序条件> # 排序
**LIMIT**
<行数限制>

#### 优化关键字：explain

针对慢sql，常常用explain这个命令来查看一个这些SQL语句的执行计划，查看该SQL语句有没有使用上了索引，有没有做全表扫描，这都可以通过explain命令来查看。所以我们深入了解MySQL的基于开销的优化器，还可以获得很多可能被优化器考虑到的访问策略的细节，以及当运行SQL语句时哪种策略预计会被优化器采用。

![image-20220209103041703.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/e69179ee-45ae-470d-b266-a749eb4cb6e6.png)
下面对这些字段出现的可能进行解释：

### 1、id

表示select标识符，同时表明执行顺序，也就是说id是一个查询的序列号，查询序号即为sql语句执行的顺序。

（1）当id值相同时，按从上到下的顺序执行。

（2）当id全部不同时，按id从大到小执行。

（3）当id部分不同时，先执行id大的，id相同的，按从上到下的顺序执行。

#### 2、select_type

（1）simple：表示简单的select，没有union和子查询

（2）primary：最外面的查询 或者 主查询，在有子查询的语句中，最外面的select查询就是primary

（3）subquery：子查询

（4）union：union语句的第二个或者说是后面那一个select

（5）union result：union之后的结果

（6）dependent unoin：unoin 中的第二个或随后的 select 查询，依赖于外部查询的结果集

（7）dependent subquery：子查询中的第一个 select 查询，依赖于外部 查询的结果集

（8）derived：衍生表（5.7版本中不存在这一个）

#### 3、table

通常是表名，或者表的别名，或者一个为查询产生临时表的标示符（如派生表、子查询、集合）

#### 4、partitions

使用的哪些分区（对于非分区表值为null），在5.5版本中需要加上explain partitions select ...

#### 5.type

（1）const：表中最多有一个匹配行，const用于比较primary key 或者unique索引。因为只匹配一行数据，所以很快

（2）eq_ref：唯一性索引扫描，对于每个来自于前面的表的记录，从该表中读取唯一一行

（3）ref：非唯一性索引扫描，对于每个来自于前面的表的记录，所有匹配的行从这张表取出

（4）ref_or_null：类似于ref，但是可以搜索包含null值的行，例如：select * from student where address='xxx' or address is null，需要在address建立索引。

（5）index_merge：查询语句用到了一张表的多个索引时，mysql会将多个索引合并到一起

（6）range：按指定范围（如in、<、>、between and等，但是前提是此字段要建立索引）来检索，很常见。如：select * from student where id < 5，id上要有索引。

（7）index：全”表“扫描，但是是在索引树中扫描，通常比ALL快，因为索引文件通常比数据文件小，index扫描是通过二叉树的方式扫描，而all是扫描物理表。（也就是说虽然all和index都是读全表，但index是从索引中读取的，而all是从硬盘中读的）。例如：select name from student，但name字段上需要建立索引，也就是查询的字段属于索引中的字段。

（8）all：全表扫描，扫描完整的物理表，此时就需要优化了。

这8种type代表性能由好到差，一般优化可达range或者ref

#### 6.possible_keys

指出 MySQL 能在该表中可能使用的索引，显示的是索引的名称，多个索引用逗号隔开，如果没有，则为null。

#### 7.key

MySQL决定实际用到的索引，显示的是索引的名称，多个索引用逗号隔开，如果没有，则为null。

#### 8.key_len

当用到组合索引的时候判断索引是否完全用上。

> 实例：假设student表中有id int,name char(20) DEFAULT NULL,address varchar(20) DEFAULT NULL,remark varchar(20) NOT NULL 字段，建立的索引是 idx_address_remark（在address和remark上建立的组合索引）
>
> 查询的sql是：select * from student where address='深圳' and remark='java coder'，此时，执行计划中的key_len是 （20*3+1+2）+ （20*3+2）= 125，那么这个是怎么得来的呢？
>
> 解析：20表示建表的时候 varchar(20) ，3表示utf8字符集占用3个字节，1表示MySQL需要1个字节表示null，2表示变长字段（varchar是变长的）。  
>
> 假设drop掉刚刚建立的索引，新建索引 idx_name_address（在name和address上建立组合索引）
>
> 查询的sql是：select * from student where name='xbq' and address='深圳'，此时，执行计划中的key_len是 （20*3+1）+ （20*3+2）= 123，那么这个值是怎么得来的呢？
>
> 解析：20表示建表的时候 char(20) ，3表示utf8字符集占用3个字节，1表示MySQL需要1个字节标识null，即 20*3+1，后面的同样的道理。

key_len只计算where条件用到的索引长度，而排序和分组就算用到了索引，也不会计算到key_len中。

计算key_len的公式：

> varchr(10)变长字段且允许NULL = 10 * ( character set：utf8=3,gbk=2,latin1=1) + 1(NULL) + 2(变长字段)
>
> varchr(10)变长字段且不允许NULL = 10 *( character set：utf8=3,gbk=2,latin1=1) + 2(变长字段)
>
> char(10)固定字段且允许NULL = 10 * ( character set：utf8=3,gbk=2,latin1=1)+1(NULL)
>
> char(10)固定字段且不允许NULL = 10 * ( character set：utf8=3,gbk=2,latin1=1)

#### 9.ref

显示索引的哪一列被使用了，如果可能的话，是一个常数

#### 10.rows

显示mysql认为执行查询时必须要返回的行数，可结合type和key分析，没有用上索引的情况下，会全表扫描。rows的值越小越好，说明检索的数据少

#### 11.filtered

给出了一个百分比的值，这个百分比值和rows列的值一起使用，可以估计出那些将要和执行计划中的前一个表（前一个表就是指id列的值比当前表的id小的表）进行连接的行的数目。

这一列在5.5版本中，需要加上 explain extended select ....。

#### 12.extra

此字段显示一些额外的信息，但是此字段的部分值具有优化的参考意义。

（1）using where：表示查询使用了where 语句来处理结果

（2）using index：表示使用了覆盖索引。这个值重点强调了只需要使用索引就可以满足查询表的要求，不需要直接访问表数据。

（3）using join buffer：这个值强调了在获取连接条件时没有使用索引，并且需要连接缓冲区来存储中间结果。如果出现了这个值，那应该注意，根据查询的具体情况可能需要添加索引来改进性能

（4）using filesort：这是 order by 语句的结果。这可能是一个CPU密集型的过程。using filesort表示出现了文件内排序，表示很不好的现象，必须要优化，特别是大表，可以通过选择合适的索引来改进性能，用索引来为查询结果排序。

（5）using temporary：mysql需要创建一张临时表来保存中间结果。 也就是说，需要先把数据放到临时表中，然后从临时表中获取需要的数据。出现这种临时表，也是必须需要优化的地方，特别是数据量大的情况。两个常见的原因是在来自不同表的列上使用了distinct，或者使用了不同的 order by 和 group by 列。

### sql索引优化

对查询进行优化，应尽量避免全表扫描，首先应考虑在 where 及 order by 涉及的列上建立索引。

#### 1、避免在where子句中使用!=或<或>操作符，否则将引擎放弃使用索引而进行全表扫描。

![image-20220209110259285.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/201dd710-d7d3-48c3-a5bd-49d822b470b4.png)

但该效果仅仅是让该字段索引失效，比如以上面的例子来说，如果有以order_status为首的联合索引，那么该联合索引不能命中，但如果还有其他单列索引，是仍然可以命中索引的。下面的语句都是一样的，失效只是导致当前索引失效。

![image-20220209110604150.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/c9b93726-dc7d-4736-8ea4-8f3c85ba93d7.png)

#### 2、尽量避免在字段开头模糊查询，会导致数据库引擎放弃索引进行全表扫描。

```text
SELECT * FROM sys_job_log WHERE job_name like '%HandleCustomerDayAmountChangeJob%'
```

优化方式：尽量在字段后面使用模糊查询。如下：

```text
SELECT * FROM sys_job_log WHERE job_name like 'HandleCustomerDayAmountChangeJob%'
```

如果需求是要在前面使用模糊查询，

- 使用FullText全文索引，用match against 检索
- 数据量较大的情况，建议引用ElasticSearch、solr，亿级数据量检索速度秒级

下面是全文索引

![image-20220209115051398.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/33976da2-3b7b-4aeb-96cf-cc306d43a392.png)

---分割线---

![image-20220209115205488.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/d99cde70-8a8d-4a3e-aebf-360eba779271.png)

#### 3、关于IN和OR和IS NULL。

mysql在8.0.13的版本已经优化了关于IN、OR和IS NULL的索引命中

![image-20220209193523227.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/2e52fd21-b787-45c9-ae59-032cf26c4d18.png)

#### 4、尽量避免使用NOT IN或IS NOT NULL等否定关键字，会导致数据库引擎放弃索引进行全表扫描。

![image-20220209193723159.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/6923c283-2fef-4306-8283-57064e15200b.png)

---分割线---

![image-20220209194131592.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/2e3ed807-0c96-42c4-9849-cd4db5b14b65.png)

#### 5、尽量避免在where条件中等号的左侧进行表达式、函数操作，会导致数据库引擎放弃索引进行全表扫描。

![image-20220209195726228.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/cf55939c-496a-41c3-80cd-986e6eadd9d2.png)

---分割线---

![image-20220209195653187.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/697a7095-96f7-4449-98fd-771e9ff2270b.png)

#### 6、where条件中没有联合索引的前置项导致联合索引完全失效

![image-20220209202643790.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/b6db75f0-65fc-4cdb-bf27-a90c76ee4d52.png)

**结果2**![image-20220209202741884.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/b06b832e-f570-4a15-9c07-47e1c6a13bc8.png)

**结果3**![image-20220209202748838.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/82c2e67d-73bd-4244-b274-011a48d3d096.png)

**结果4**![image-20220209202757561.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/cf55f3ad-ed60-46aa-af2d-c37e66649449.png)

**结果5**![image-20220209202803738.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/d0127e0b-cd47-457e-92af-9c1ffbca8648.png)

最左匹配法则，where条件中必须包括联合索引最左边的一项，否则无法命中索引。

这里需要注意的是mysql中会内部优化where的条件，来匹配最佳的索引。

#### 7、隐式类型转换造成不使用索引

如下SQL语句由于索引对列类型为varchar，但给定的值为数值，涉及隐式类型转换，造成不能正确走索引。

![image-20220209203710764.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/1ca7a281-74e6-4f4e-a18e-3340fd9d413b.png)

![image-20220209203728796.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/022fb57a-dabb-4ffc-a49e-3e059f3df368.png)

--------未完成----------

### 语句优化

tips：

1、避免将常更新的字段设置为索引

2、避免将区分度不大的字段设置为索引

(String), true(Boolean), true(Boolean), false(Boolean), true(Boolean), true(Boolean), 2022-02-11 11:52:29.943(Timestamp), 1446769938234671105(Long), 1491400438823596033(Long)
2022-02-11 11:52:29.971 DEBUG 4752 --- [http-nio-8065-exec-8] c.y.e.mapper.ArticleMapper.updateById    : <==    Updates: 1
2022-02-11 11:52:29.972 DEBUG 4752 --- [http-nio-8065-exec-8] c.y.e.m.A.deleteReally                   : ==>  Preparing: DELETE FROM article_tag_relation WHERE article_id = ?
2022-02-11 11:52:29.972 DEBUG 4752 --- [http-nio-8065-exec-8] c.y.e.m.A.deleteReally                   : ==> Parameters: 1491400438823596033(Long)
2022-02-11 11:52:29.989 DEBUG 4752 --- [http-nio-8065-exec-8] c.y.e.m.A.deleteReally                   : <==    Updates: 1
2022-02-11 11:52:29.990 DEBUG 4752 --- [http-nio-8065-exec-8] c.y.e.m.ArticleTagRelationMapper.insert  : ==>  Preparing: INSERT INTO article_tag_relation ( id, article_id, tag_id, deleted ) VALUES ( ?, ?, ?, ? )
2022-02-11 11:52:29.990 DEBUG 4752 --- [http-nio-8065-exec-8] c.y.e.m.ArticleTagRelationMapper.insert  : ==> Parameters: 1491983454733856769(Long), 1491400438823596033(Long), 1491400438878121985(Long), 0(Integer)
2022-02-11 11:52:30.418 DEBUG 4752 --- [http-nio-8065-exec-10] c.y.e.mapper.TagMapper.listTagDTO        : ==>  Preparing: select * from tag where deleted = 0
2022-02-11 11:52:30.418 DEBUG 4752 --- [http-nio-8065-exec-10] c.y.e.mapper.TagMapper.listTagDTO        : ==> Parameters: 
2022-02-11 11:52:30.428 DEBUG 4752 --- [http-nio-8065-exec-10] c.y.e.mapper.TagMapper.listTagDTO        : <==      Total: 7
2022-02-11 11:52:36.384 DEBUG 4752 --- [http-nio-8065-exec-9] c.y.e.m.A.pageArticleDTO_mpCount         : ==>  Preparing: SELECT COUNT(*) FROM (SELECT t1.id, t1.title, t1.stamp, t1.comments, t1.original, t1.status, t1.recommend, t1.appreciate, t1.views, t1.create_time, t1.update_time, t1.user_id, t1.category_id, t2.name category_name, COUNT(t3.id) comment_counts FROM article t1 LEFT JOIN category t2 ON t1.category_id = t2.id LEFT JOIN comment t3 ON t1.id = t3.article_id WHERE 1 = 1 AND t1.deleted = 0 GROUP BY t1.id ORDER BY t1.update_time DESC) TOTAL
2022-02-11 11:52:36.385 DEBUG 4752 --- [http-nio-8065-exec-9] c.y.e.m.A.pageArticleDTO_mpCount         : ==> Parameters: 
2022-02-11 11:52:36.393 DEBUG 4752 --- [http-nio-8065-exec-9] c.y.e.m.A.pageArticleDTO_mpCount         : <==      Total: 1
2022-02-11 11:52:36.394 DEBUG 4752 --- [http-nio-8065-exec-9] c.y.e.m.ArticleMapper.pageArticleDTO     : ==>  Preparing: SELECT t1.id, t1.title, t1.stamp, t1.comments, t1.original, t1.status, t1.recommend, t1.appreciate, t1.views, t1.create_time, t1.update_time, t1.user_id, t1.category_id, t2.name category_name, COUNT(t3.id) comment_counts FROM article t1 left join category t2 on t1.category_id = t2.id left join comment t3 on t1.id = t3.article_id where 1 = 1 and t1.deleted = 0 GROUP BY t1.id ORDER BY t1.update_time DESC LIMIT ?
2022-02-11 11:52:36.394 DEBUG 4752 --- [http-nio-8065-exec-9] c.y.e.m.ArticleMapper.pageArticleDTO     : ==> Parameters: 10(Long)
2022-02-11 11:52:36.405 DEBUG 4752 --- [http-nio-8065-exec-9] c.y.e.m.ArticleMapper.pageArticleDTO     : <==      Total: 8
2022-02-11 11:52:36.405 DEBUG 4752 --- [http-nio-8065-exec-9] c.y.e.m.A.listArticleTagRelation         : ==>  Preparing: SELECT t1.article_id, t1.tag_id, t2.NAME tag_name FROM `article_tag_relation` t1 LEFT JOIN tag t2 ON t1.tag_id = t2.id where t1.deleted = 0 and t1.article_id in ( ? , ? , ? , ? , ? , ? , ? , ? )
2022-02-11 11:52:36.406 DEBUG 4752 --- [http-nio-8065-exec-9] c.y.e.m.A.listArticleTagRelation         : ==> Parameters: 1491400438823596033(Long), 1478682493945196546(Long), 1473299945589125122(Long), 1471060099663474689(Long), 1463756487044231169(Long), 1461568605407682562(Long), 1459070158997823489(Long), 1455442044157722626(Long)
2022-02-11 11:52:36.414 DEBUG 4752 --- [http-nio-8065-exec-9] c.y.e.m.A.listArticleTagRelation         : <==      Total: 9
2022-02-11 11:52:36.677 DEBUG 4752 --- [http-nio-8065-exec-1] c.y.e.m.CategoryMapper.listCategoryDTO   : ==>  Preparing: select * from category where deleted = 0
2022-02-11 11:52:36.678 DEBUG 4752 --- [http-nio-8065-exec-1] c.y.e.m.CategoryMapper.listCategoryDTO   : ==> Parameters: 
2022-02-11 11:52:36.685 DEBUG 4752 --- [http-nio-8065-exec-3] c.y.e.mapper.TagMapper.listTagDTO        : ==>  Preparing: select * from tag where deleted = 0
2022-02-11 11:52:36.685 DEBUG 4752 --- [http-nio-8065-exec-3] c.y.e.mapper.TagMapper.listTagDTO        : ==> Parameters: 
2022-02-11 11:52:36.686 DEBUG 4752 --- [http-nio-8065-exec-1] c.y.e.m.CategoryMapper.listCategoryDTO   : <==      Total: 2
2022-02-11 11:52:36.692 DEBUG 4752 --- [http-nio-8065-exec-3] c.y.e.mapper.TagMapper.listTagDTO        : <==      Total: 7
2022-02-11 11:52:51.793 DEBUG 4752 --- [http-nio-8065-exec-4] c.y.e.m.A.pageArticleDTOWeb_mpCount      : ==>  Preparing: SELECT COUNT(*) FROM article WHERE deleted = 0 AND status = ?
2022-02-11 11:52:51.794 DEBUG 4752 --- [http-nio-8065-exec-4] c.y.e.m.A.pageArticleDTOWeb_mpCount      : ==> Parameters: 1(Integer)
2022-02-11 11:52:51.802 DEBUG 4752 --- [http-nio-8065-exec-4] c.y.e.m.A.pageArticleDTOWeb_mpCount      : <==      Total: 1
2022-02-11 11:52:51.802 DEBUG 4752 --- [http-nio-8065-exec-4] c.y.e.m.ArticleMapper.pageArticleDTOWeb  : ==>  Preparing: SELECT id, title, create_time, update_time FROM article where deleted = 0 and status = ? ORDER BY update_time DESC LIMIT ?
2022-02-11 11:52:51.803 DEBUG 4752 --- [http-nio-8065-exec-4] c.y.e.m.ArticleMapper.pageArticleDTOWeb  : ==> Parameters: 1(Integer), 8(Long)
2022-02-11 11:52:51.812 DEBUG 4752 --- [http-nio-8065-exec-4] c.y.e.m.ArticleMapper.pageArticleDTOWeb  : <==      Total: 7
2022-02-11 11:52:51.813 DEBUG 4752 --- [http-nio-8065-exec-4] c.y.e.mapper.TagMapper.listTagVo         : ==>  Preparing: SELECT t1.*, COUNT(t2.article_id) article_counts FROM tag t1 LEFT JOIN article_tag_relation t2 ON t1.id = t2.tag_id and t2.deleted = 0 WHERE t1.deleted = 0 GROUP BY t1.id
2022-02-11 11:52:51.813 DEBUG 4752 --- [http-nio-8065-exec-4] c.y.e.mapper.TagMapper.listTagVo         : ==> Parameters: 
2022-02-11 11:52:51.822 DEBUG 4752 --- [http-nio-8065-exec-4] c.y.e.mapper.TagMapper.listTagVo         : <==      Total: 7
2022-02-11 11:52:51.823 DEBUG 4752 --- [http-nio-8065-exec-4] c.y.e.m.CategoryMapper.listCategoryVo    : ==>  Preparing: SELECT t1.id, t1.NAME, COUNT(t2.category_id) article_counts FROM category t1 LEFT JOIN article t2 ON t1.id = t2.category_id and t2.deleted = 0 and t2.status != 0 where t1.deleted = 0 GROUP BY t1.id
2022-02-11 11:52:51.823 DEBUG 4752 --- [http-nio-8065-exec-4] c.y.e.m.CategoryMapper.listCategoryVo    : ==> Parameters: 
2022-02-11 11:52:51.832 DEBUG 4752 --- [http-nio-8065-exec-4] c.y.e.m.CategoryMapper.listCategoryVo    : <==      Total: 2
2022-02-11 11:52:51.836 DEBUG 4752 --- [http-nio-8065-exec-4] c.y.e.mapper.UserMapper.getUser          : ==>  Preparing: SELECT * FROM user WHERE deleted = 0 AND id = ?
2022-02-11 11:52:51.836 DEBUG 4752 --- [http-nio-8065-exec-4] c.y.e.mapper.UserMapper.getUser          : ==> Parameters: 1(Long)
2022-02-11 11:52:51.846 DEBUG 4752 --- [http-nio-8065-exec-4] c.y.e.mapper.UserMapper.getUser          : <==      Total: 1
2022-02-11 11:52:51.850 DEBUG 4752 --- [http-nio-8065-exec-4] c.y.e.mapper.UserMapper.updateById       : ==>  Preparing: UPDATE user SET qq=?, email=?, wechat=?, avatar=?, banner=?, nickname=?, user_signature=?, views=?, create_time=?, update_time=? WHERE id=? AND deleted=0
2022-02-11 11:52:51.851 DEBUG 4752 --- [http-nio-8065-exec-4] c.y.e.mapper.UserMapper.updateById       : ==> Parameters: 2044619214(String), lyric0926@163.com(String), 17805428855(String), https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2021-07-11/6a879a71-ca69-4ef3-a5f7-e8c6f67dd0b7Screenshot_20210424_204530.jpg(String), https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2021-09-16/fdb78008-7df7-4224-8d3a-c97268b9b066wallhaven-v95om8.jpg(String), lyric(String), 许多事情我们的确无能为力。
但即使如此我们也不该因此消沉不是吗？
乐观起来，忘记伤痛继续前行远比一次又一次揭开伤疤要好得多！(String), 14592(Integer), 2020-09-02 15:16:51.0(Timestamp), 2022-02-11 11:52:51.85(Timestamp), 1(Long)
2022-02-11 11:52:51.868 DEBUG 4752 --- [http-nio-8065-exec-4] c.y.e.mapper.UserMapper.updateById       : <==    Updates: 1
2022-02-11 11:52:51.872 DEBUG 4752 --- [http-nio-8065-exec-4] c.y.e.m.T.listTechnicalSupportVo         : ==>  Preparing: SELECT * FROM technical_support where deleted = 0
2022-02-11 11:52:51.872 DEBUG 4752 --- [http-nio-8065-exec-4] c.y.e.m.T.listTechnicalSupportVo         : ==> Parameters: 
2022-02-11 11:52:51.881 DEBUG 4752 --- [http-nio-8065-exec-4] c.y.e.m.T.listTechnicalSupportVo         : <==      Total: 3
2022-02-11 11:56:18.922  INFO 28132 --- [restartedMain] c.yi.enhancement.EnhancementApplication  : Starting EnhancementApplication using Java 1.8.0_311 on LAPTOP-7I9LVMS7 with PID 28132 (E:\1-my-project\blog-enhancement\target\classes started by 刘文鉴 in E:\1-my-project\blog-enhancement)
2022-02-11 11:56:18.924 DEBUG 28132 --- [restartedMain] c.yi.enhancement.EnhancementApplication  : Running with Spring Boot v2.5.0, Spring v5.3.7
2022-02-11 11:56:18.924  INFO 28132 --- [restartedMain] c.yi.enhancement.EnhancementApplication  : No active profile set, falling back to default profiles: default
2022-02-11 11:56:18.951  INFO 28132 --- [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in E:\maven-repository\blog-enhancement-maven\blog-enhancement-repository\com\sun\xml\bind\jaxb-impl\2.2.3-1\jaxb-impl-2.2.3-1.jar referenced one or more files that do not exist: file:/E:/maven-repository/blog-enhancement-maven/blog-enhancement-repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jaxb-api.jar,file:/E:/maven-repository/blog-enhancement-maven/blog-enhancement-repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/activation.jar,file:/E:/maven-repository/blog-enhancement-maven/blog-enhancement-repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jsr173_1.0_api.jar,file:/E:/maven-repository/blog-enhancement-maven/blog-enhancement-repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jaxb1-impl.jar
2022-02-11 11:56:18.952  INFO 28132 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-02-11 11:56:18.952  INFO 28132 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-02-11 11:56:19.737  INFO 28132 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8065 (http)
2022-02-11 11:56:19.744  INFO 28132 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2022-02-11 11:56:19.744  INFO 28132 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.46]
2022-02-11 11:56:19.832  INFO 28132 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2022-02-11 11:56:19.832  INFO 28132 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 880 ms
2022-02-11 11:56:20.190  WARN 28132 --- [restartedMain] c.b.m.core.metadata.TableInfoHelper      : Can not find table primary key in Class: "com.yi.enhancement.model.entity.UserAvatar".
2022-02-11 11:56:21.086  INFO 28132 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2022-02-11 11:56:21.454  INFO 28132 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2022-02-11 11:56:21.969  INFO 28132 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8065 (http) with context path ''
2022-02-11 11:56:22.228  INFO 28132 --- [restartedMain] c.yi.enhancement.EnhancementApplication  : Started EnhancementApplication in 3.879 seconds (JVM running for 4.682)
2022-02-11 11:56:22.230  INFO 28132 --- [restartedMain] o.s.b.a.ApplicationAvailabilityBean      : Application availability state LivenessState changed to CORRECT
2022-02-11 11:56:22.231  INFO 28132 --- [restartedMain] o.s.b.a.ApplicationAvailabilityBean      : Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
2022-02-11 11:56:24.091  INFO 28132 --- [http-nio-8065-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-02-11 11:56:24.091  INFO 28132 --- [http-nio-8065-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2022-02-11 11:56:24.092  INFO 28132 --- [http-nio-8065-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2022-02-11 11:56:24.157  INFO 28132 --- [http-nio-8065-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2022-02-11 11:56:24.344  INFO 28132 --- [http-nio-8065-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2022-02-11 11:56:24.349 DEBUG 28132 --- [http-nio-8065-exec-1] c.y.e.m.A.pageArticleDTOWeb_mpCount      : ==>  Preparing: SELECT COUNT(*) FROM article WHERE deleted = 0 AND status = ?
2022-02-11 11:56:24.363 DEBUG 28132 --- [http-nio-8065-exec-1] c.y.e.m.A.pageArticleDTOWeb_mpCount      : ==> Parameters: 1(Integer)
2022-02-11 11:56:24.385 DEBUG 28132 --- [http-nio-8065-exec-1] c.y.e.m.A.pageArticleDTOWeb_mpCount      : <==      Total: 1
2022-02-11 11:56:24.391 DEBUG 28132 --- [http-nio-8065-exec-1] c.y.e.m.ArticleMapper.pageArticleDTOWeb  : ==>  Preparing: SELECT id, title, create_time, update_time FROM article where deleted = 0 and status = ? ORDER BY update_time DESC LIMIT ?
2022-02-11 11:56:24.392 DEBUG 28132 --- [http-nio-8065-exec-1] c.y.e.m.ArticleMapper.pageArticleDTOWeb  : ==> Parameters: 1(Integer), 8(Long)
2022-02-11 11:56:24.403 DEBUG 28132 --- [http-nio-8065-exec-1] c.y.e.m.ArticleMapper.pageArticleDTOWeb  : <==      Total: 7
2022-02-11 11:56:24.409 DEBUG 28132 --- [http-nio-8065-exec-1] c.y.e.mapper.TagMapper.listTagVo         : ==>  Preparing: SELECT t1.*, COUNT(t3.id) article_counts FROM tag t1 LEFT JOIN article_tag_relation t2 ON t1.id = t2.tag_id and t2.deleted = 0 left join article t3 on t2.article_id = t3.id and t3.status = 0 WHERE t1.deleted = 0 GROUP BY t1.id
2022-02-11 11:56:24.409 DEBUG 28132 --- [http-nio-8065-exec-1] c.y.e.mapper.TagMapper.listTagVo         : ==> Parameters: 
2022-02-11 11:56:24.419 DEBUG 28132 --- [http-nio-8065-exec-1] c.y.e.mapper.TagMapper.listTagVo         : <==      Total: 7
2022-02-11 11:56:24.423 DEBUG 28132 --- [http-nio-8065-exec-1] c.y.e.m.CategoryMapper.listCategoryVo    : ==>  Preparing: SELECT t1.id, t1.NAME, COUNT(t2.category_id) article_counts FROM category t1 LEFT JOIN article t2 ON t1.id = t2.category_id and t2.deleted = 0 and t2.status != 0 where t1.deleted = 0 GROUP BY t1.id
2022-02-11 11:56:24.424 DEBUG 28132 --- [http-nio-8065-exec-1] c.y.e.m.CategoryMapper.listCategoryVo    : ==> Parameters: 
2022-02-11 11:56:24.433 DEBUG 28132 --- [http-nio-8065-exec-1] c.y.e.m.CategoryMapper.listCategoryVo    : <==      Total: 2
2022-02-11 11:56:24.436 DEBUG 28132 --- [http-nio-8065-exec-1] c.y.e.mapper.UserMapper.getUser          : ==>  Preparing: SELECT * FROM user WHERE deleted = 0 AND id = ?
2022-02-11 11:56:24.437 DEBUG 28132 --- [http-nio-8065-exec-1] c.y.e.mapper.UserMapper.getUser          : ==> Parameters: 1(Long)
2022-02-11 11:56:24.445 DEBUG 28132 --- [http-nio-8065-exec-1] c.y.e.mapper.UserMapper.getUser          : <==      Total: 1
2022-02-11 11:56:24.455 DEBUG 28132 --- [http-nio-8065-exec-1] c.y.e.mapper.UserMapper.updateById       : ==>  Preparing: UPDATE user SET qq=?, email=?, wechat=?, avatar=?, banner=?, nickname=?, user_signature=?, views=?, create_time=?, update_time=? WHERE id=? AND deleted=0
2022-02-11 11:56:24.459 DEBUG 28132 --- [http-nio-8065-exec-1] c.y.e.mapper.UserMapper.updateById       : ==> Parameters: 2044619214(String), lyric0926@163.com(String), 17805428855(String), https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2021-07-11/6a879a71-ca69-4ef3-a5f7-e8c6f67dd0b7Screenshot_20210424_204530.jpg(String), https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2021-09-16/fdb78008-7df7-4224-8d3a-c97268b9b066wallhaven-v95om8.jpg(String), lyric(String), 许多事情我们的确无能为力。
但即使如此我们也不该因此消沉不是吗？
乐观起来，忘记伤痛继续前行远比一次又一次揭开伤疤要好得多！(String), 14593(Integer), 2020-09-02 15:16:51.0(Timestamp), 2022-02-11 11:56:24.455(Timestamp), 1(Long)
2022-02-11 11:56:24.477 DEBUG 28132 --- [http-nio-8065-exec-1] c.y.e.mapper.UserMapper.updateById       : <==    Updates: 1
2022-02-11 11:56:24.481 DEBUG 28132 --- [http-nio-8065-exec-1] c.y.e.m.T.listTechnicalSupportVo         : ==>  Preparing: SELECT * FROM technical_support where deleted = 0
2022-02-11 11:56:24.481 DEBUG 28132 --- [http-nio-8065-exec-1] c.y.e.m.T.listTechnicalSupportVo         : ==> Parameters: 
2022-02-11 11:56:24.490 DEBUG 28132 --- [http-nio-8065-exec-1] c.y.e.m.T.listTechnicalSupportVo         : <==      Total: 3
2022-02-11 11:58:47.424  INFO 24732 --- [restartedMain] c.yi.enhancement.EnhancementApplication  : Starting EnhancementApplication using Java 1.8.0_311 on LAPTOP-7I9LVMS7 with PID 24732 (E:\1-my-project\blog-enhancement\target\classes started by 刘文鉴 in E:\1-my-project\blog-enhancement)
2022-02-11 11:58:47.426 DEBUG 24732 --- [restartedMain] c.yi.enhancement.EnhancementApplication  : Running with Spring Boot v2.5.0, Spring v5.3.7
2022-02-11 11:58:47.426  INFO 24732 --- [restartedMain] c.yi.enhancement.EnhancementApplication  : No active profile set, falling back to default profiles: default
2022-02-11 11:58:47.453  INFO 24732 --- [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in E:\maven-repository\blog-enhancement-maven\blog-enhancement-repository\com\sun\xml\bind\jaxb-impl\2.2.3-1\jaxb-impl-2.2.3-1.jar referenced one or more files that do not exist: file:/E:/maven-repository/blog-enhancement-maven/blog-enhancement-repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jaxb-api.jar,file:/E:/maven-repository/blog-enhancement-maven/blog-enhancement-repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/activation.jar,file:/E:/maven-repository/blog-enhancement-maven/blog-enhancement-repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jsr173_1.0_api.jar,file:/E:/maven-repository/blog-enhancement-maven/blog-enhancement-repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jaxb1-impl.jar
2022-02-11 11:58:47.454  INFO 24732 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-02-11 11:58:47.454  INFO 24732 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-02-11 11:58:48.273  INFO 24732 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8065 (http)
2022-02-11 11:58:48.287  INFO 24732 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2022-02-11 11:58:48.287  INFO 24732 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.46]
2022-02-11 11:58:48.359  INFO 24732 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2022-02-11 11:58:48.360  INFO 24732 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 906 ms
2022-02-11 11:58:48.687  WARN 24732 --- [restartedMain] c.b.m.core.metadata.TableInfoHelper      : Can not find table primary key in Class: "com.yi.enhancement.model.entity.UserAvatar".
2022-02-11 11:58:49.570  INFO 24732 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2022-02-11 11:58:49.928  INFO 24732 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2022-02-11 11:58:50.438  INFO 24732 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8065 (http) with context path ''
2022-02-11 11:58:50.686  INFO 24732 --- [restartedMain] c.yi.enhancement.EnhancementApplication  : Started EnhancementApplication in 3.854 seconds (JVM running for 4.664)
2022-02-11 11:58:50.688  INFO 24732 --- [restartedMain] o.s.b.a.ApplicationAvailabilityBean      : Application availability state LivenessState changed to CORRECT
2022-02-11 11:58:50.689  INFO 24732 --- [restartedMain] o.s.b.a.ApplicationAvailabilityBean      : Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
2022-02-11 11:58:57.229  INFO 24732 --- [http-nio-8065-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-02-11 11:58:57.230  INFO 24732 --- [http-nio-8065-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2022-02-11 11:58:57.230  INFO 24732 --- [http-nio-8065-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 0 ms
2022-02-11 11:58:57.292  INFO 24732 --- [http-nio-8065-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2022-02-11 11:58:57.472  INFO 24732 --- [http-nio-8065-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2022-02-11 11:58:57.477 DEBUG 24732 --- [http-nio-8065-exec-1] c.y.e.m.A.pageArticleDTOWeb_mpCount      : ==>  Preparing: SELECT COUNT(*) FROM article WHERE deleted = 0 AND status = ?
2022-02-11 11:58:57.492 DEBUG 24732 --- [http-nio-8065-exec-1] c.y.e.m.A.pageArticleDTOWeb_mpCount      : ==> Parameters: 1(Integer)
2022-02-11 11:58:57.514 DEBUG 24732 --- [http-nio-8065-exec-1] c.y.e.m.A.pageArticleDTOWeb_mpCount      : <==      Total: 1
2022-02-11 11:58:57.522 DEBUG 24732 --- [http-nio-8065-exec-1] c.y.e.m.ArticleMapper.pageArticleDTOWeb  : ==>  Preparing: SELECT id, title, create_time, update_time FROM article where deleted = 0 and status = ? ORDER BY update_time DESC LIMIT ?
2022-02-11 11:58:57.522 DEBUG 24732 --- [http-nio-8065-exec-1] c.y.e.m.ArticleMapper.pageArticleDTOWeb  : ==> Parameters: 1(Integer), 8(Long)
2022-02-11 11:58:57.533 DEBUG 24732 --- [http-nio-8065-exec-1] c.y.e.m.ArticleMapper.pageArticleDTOWeb  : <==      Total: 7
2022-02-11 11:58:57.539 DEBUG 24732 --- [http-nio-8065-exec-1] c.y.e.mapper.TagMapper.listTagVo         : ==>  Preparing: SELECT t1.*, COUNT( t3.id ) article_counts FROM tag t1 LEFT JOIN article_tag_relation t2 ON t1.id = t2.tag_id LEFT JOIN article t3 ON t2.article_id = t3.id WHERE t1.deleted = 0 AND t2.deleted = 0 AND t3.STATUS GROUP BY t1.id
2022-02-11 11:58:57.539 DEBUG 24732 --- [http-nio-8065-exec-1] c.y.e.mapper.TagMapper.listTagVo         : ==> Parameters: 
2022-02-11 11:58:57.549 DEBUG 24732 --- [http-nio-8065-exec-1] c.y.e.mapper.TagMapper.listTagVo         : <==      Total: 4
2022-02-11 11:58:57.554 DEBUG 24732 --- [http-nio-8065-exec-1] c.y.e.m.CategoryMapper.listCategoryVo    : ==>  Preparing: SELECT t1.id, t1.NAME, COUNT(t2.category_id) article_counts FROM category t1 LEFT JOIN article t2 ON t1.id = t2.category_id and t2.deleted = 0 and t2.status != 0 where t1.deleted = 0 GROUP BY t1.id
2022-02-11 11:58:57.554 DEBUG 24732 --- [http-nio-8065-exec-1] c.y.e.m.CategoryMapper.listCategoryVo    : ==> Parameters: 
2022-02-11 11:58:57.563 DEBUG 24732 --- [http-nio-8065-exec-1] c.y.e.m.CategoryMapper.listCategoryVo    : <==      Total: 2
2022-02-11 11:58:57.567 DEBUG 24732 --- [http-nio-8065-exec-1] c.y.e.mapper.UserMapper.getUser          : ==>  Preparing: SELECT * FROM user WHERE deleted = 0 AND id = ?
2022-02-11 11:58:57.567 DEBUG 24732 --- [http-nio-8065-exec-1] c.y.e.mapper.UserMapper.getUser          : ==> Parameters: 1(Long)
2022-02-11 11:58:57.578 DEBUG 24732 --- [http-nio-8065-exec-1] c.y.e.mapper.UserMapper.getUser          : <==      Total: 1
2022-02-11 11:58:57.590 DEBUG 24732 --- [http-nio-8065-exec-1] c.y.e.mapper.UserMapper.updateById       : ==>  Preparing: UPDATE user SET qq=?, email=?, wechat=?, avatar=?, banner=?, nickname=?, user_signature=?, views=?, create_time=?, update_time=? WHERE id=? AND deleted=0
2022-02-11 11:58:57.594 DEBUG 24732 --- [http-nio-8065-exec-1] c.y.e.mapper.UserMapper.updateById       : ==> Parameters: 2044619214(String), lyric0926@163.com(String), 17805428855(String), https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2021-07-11/6a879a71-ca69-4ef3-a5f7-e8c6f67dd0b7Screenshot_20210424_204530.jpg(String), https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2021-09-16/fdb78008-7df7-4224-8d3a-c97268b9b066wallhaven-v95om8.jpg(String), lyric(String), 许多事情我们的确无能为力。
但即使如此我们也不该因此消沉不是吗？
乐观起来，忘记伤痛继续前行远比一次又一次揭开伤疤要好得多！(String), 14594(Integer), 2020-09-02 15:16:51.0(Timestamp), 2022-02-11 11:58:57.59(Timestamp), 1(Long)
2022-02-11 11:58:57.611 DEBUG 24732 --- [http-nio-8065-exec-1] c.y.e.mapper.UserMapper.updateById       : <==    Updates: 1
2022-02-11 11:58:57.615 DEBUG 24732 --- [http-nio-8065-exec-1] c.y.e.m.T.listTechnicalSupportVo         : ==>  Preparing: SELECT * FROM technical_support where deleted = 0
2022-02-11 11:58:57.615 DEBUG 24732 --- [http-nio-8065-exec-1] c.y.e.m.T.listTechnicalSupportVo         : ==> Parameters: 
2022-02-11 11:58:57.623 DEBUG 24732 --- [http-nio-8065-exec-1] c.y.e.m.T.listTechnicalSupportVo         : <==      Total: 3
2022-02-11 11:59:06.562 DEBUG 24732 --- [http-nio-8065-exec-4] c.y.e.m.CategoryMapper.listCategoryDTO   : ==>  Preparing: select * from category where deleted = 0
2022-02-11 11:59:06.562 DEBUG 24732 --- [http-nio-8065-exec-9] c.y.e.mapper.TagMapper.listTagDTO        : ==>  Preparing: select * from tag where deleted = 0
2022-02-11 11:59:06.562 DEBUG 24732 --- [http-nio-8065-exec-4] c.y.e.m.CategoryMapper.listCategoryDTO   : ==> Parameters: 
2022-02-11 11:59:06.562 DEBUG 24732 --- [http-nio-8065-exec-9] c.y.e.mapper.TagMapper.listTagDTO        : ==> Parameters: 
2022-02-11 11:59:06.564 DEBUG 24732 --- [http-nio-8065-exec-6] c.y.e.m.ArticleMapper.getArticleDetail   : ==>  Preparing: SELECT t1.id, t1.title, t1.stamp, t1.comments, t1.original, t1.content, t1.status, t1.recommend, t1.appreciate, t1.views, t1.create_time, t1.update_time, t1.user_id, t1.category_id, t2.name category_name FROM article t1 left join category t2 on t1.category_id = t2.id where t1.deleted = 0 and t1.id = ?
2022-02-11 11:59:06.564 DEBUG 24732 --- [http-nio-8065-exec-6] c.y.e.m.ArticleMapper.getArticleDetail   : ==> Parameters: 1491400438823596033(Long)
2022-02-11 11:59:06.570 DEBUG 24732 --- [http-nio-8065-exec-4] c.y.e.m.CategoryMapper.listCategoryDTO   : <==      Total: 2
2022-02-11 11:59:06.571 DEBUG 24732 --- [http-nio-8065-exec-9] c.y.e.mapper.TagMapper.listTagDTO        : <==      Total: 7
2022-02-11 11:59:06.577 DEBUG 24732 --- [http-nio-8065-exec-6] c.y.e.m.A.listTagByArticleId             : ====>  Preparing: SELECT t2.id, t2.name FROM article_tag_relation t1 LEFT JOIN tag t2 ON t1.tag_id = t2.id WHERE t1.deleted = 0 and t1.article_id = ?
2022-02-11 11:59:06.577 DEBUG 24732 --- [http-nio-8065-exec-6] c.y.e.m.A.listTagByArticleId             : ====> Parameters: 1491400438823596033(Long)
2022-02-11 11:59:06.586 DEBUG 24732 --- [http-nio-8065-exec-6] c.y.e.m.A.listTagByArticleId             : <====      Total: 1
2022-02-11 11:59:06.586 DEBUG 24732 --- [http-nio-8065-exec-6] c.y.e.m.ArticleMapper.getArticleDetail   : <==      Total: 1
2022-02-11 11:59:07.561 DEBUG 24732 --- [http-nio-8065-exec-10] c.y.e.mapper.ArticleMapper.getArticle    : ==>  Preparing: SELECT t1.id, t1.title, t1.stamp, t1.comments, t1.original, t1.status, t1.recommend, t1.appreciate, t1.views, t1.create_time, t1.update_time, t1.user_id, t1.category_id, t2.name category_name FROM article t1 left join category t2 on t1.category_id = t2.id where t1.deleted = 0 and t1.id = ?
2022-02-11 11:59:07.561 DEBUG 24732 --- [http-nio-8065-exec-10] c.y.e.mapper.ArticleMapper.getArticle    : ==> Parameters: 1491400438823596033(Long)
2022-02-11 11:59:07.570 DEBUG 24732 --- [http-nio-8065-exec-10] c.y.e.m.A.listTagByArticleId             : ====>  Preparing: SELECT t2.id, t2.name FROM article_tag_relation t1 LEFT JOIN tag t2 ON t1.tag_id = t2.id WHERE t1.deleted = 0 and t1.article_id = ?
2022-02-11 11:59:07.570 DEBUG 24732 --- [http-nio-8065-exec-10] c.y.e.m.A.listTagByArticleId             : ====> Parameters: 1491400438823596033(Long)
2022-02-11 11:59:07.579 DEBUG 24732 --- [http-nio-8065-exec-10] c.y.e.m.A.listTagByArticleId             : <====      Total: 1
2022-02-11 11:59:07.579 DEBUG 24732 --- [http-nio-8065-exec-10] c.y.e.mapper.ArticleMapper.getArticle    : <==      Total: 1
2022-02-11 11:59:10.380 DEBUG 24732 --- [http-nio-8065-exec-8] c.y.e.mapper.ArticleMapper.selectById    : ==>  Preparing: SELECT id,title,content,first_picture,stamp,comments,original,status,recommend,appreciate,views,create_time,update_time,category_id,user_id,deleted FROM article WHERE id=? AND deleted=0
2022-02-11 11:59:10.381 DEBUG 24732 --- [http-nio-8065-exec-8] c.y.e.mapper.ArticleMapper.selectById    : ==> Parameters: 1491400438823596033(Long)
2022-02-11 11:59:10.390 DEBUG 24732 --- [http-nio-8065-exec-8] c.y.e.mapper.ArticleMapper.selectById    : <==      Total: 1
2022-02-11 11:59:10.394 DEBUG 24732 --- [http-nio-8065-exec-8] c.y.e.mapper.ArticleMapper.updateById    : ==>  Preparing: UPDATE article SET title=?, content=?, stamp=?, comments=?, status=?, recommend=?, appreciate=?, update_time=?, category_id=? WHERE id=? AND deleted=0
2022-02-11 11:59:10.395 DEBUG 24732 --- [http-nio-8065-exec-8] c.y.e.mapper.ArticleMapper.updateById    : ==> Parameters: 优化sql(String), ## sql优化

### sql优化需知

mysql版本：Server version: 8.0.13 MySQL

sql优化遵从三点：

- 最大化利用索引；
- 尽可能避免全表扫描；
- 减少无效数据的查询；

#### select语句-语法顺序

```sql
1. SELECT 
2. DISTINCT <select_list>
3. FROM <left_table>
4. <join_type> JOIN <right_table>
5. ON <join_condition>
6. WHERE <where_condition>
7. GROUP BY <group_by_list>
8. HAVING <having_condition>
9. ORDER BY <order_by_condition>
10.LIMIT <limit_number>
```

#### select语句-执行顺序

**FROM**
<表名> # 选取表，将多个表数据通过笛卡尔积变成一个表。
**ON**
<筛选条件> # 对笛卡尔积的虚表进行筛选
**JOIN** <join, left join, right join...>
<join表> # 指定join，用于添加数据到on之后的虚表中，例如left join会将左表的剩余数据添加到虚表中
**WHERE**
<where条件> # 对上述虚表进行筛选
**GROUP BY**
<分组条件> # 分组
<SUM()等聚合函数> # 用于having子句进行判断，在书写上这类聚合函数是写在having判断里面的
**HAVING**
<分组筛选> # 对分组后的结果进行聚合筛选
**SELECT**
<返回数据列表> # 返回的单列必须在group by子句中，聚合函数除外
**DISTINCT**
\# 数据除重
**ORDER BY**
<排序条件> # 排序
**LIMIT**
<行数限制>

#### 优化关键字：explain

针对慢sql，常常用explain这个命令来查看一个这些SQL语句的执行计划，查看该SQL语句有没有使用上了索引，有没有做全表扫描，这都可以通过explain命令来查看。所以我们深入了解MySQL的基于开销的优化器，还可以获得很多可能被优化器考虑到的访问策略的细节，以及当运行SQL语句时哪种策略预计会被优化器采用。

![image-20220209103041703.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/e69179ee-45ae-470d-b266-a749eb4cb6e6.png)
下面对这些字段出现的可能进行解释：

### 1、id

表示select标识符，同时表明执行顺序，也就是说id是一个查询的序列号，查询序号即为sql语句执行的顺序。

（1）当id值相同时，按从上到下的顺序执行。

（2）当id全部不同时，按id从大到小执行。

（3）当id部分不同时，先执行id大的，id相同的，按从上到下的顺序执行。

#### 2、select_type

（1）simple：表示简单的select，没有union和子查询

（2）primary：最外面的查询 或者 主查询，在有子查询的语句中，最外面的select查询就是primary

（3）subquery：子查询

（4）union：union语句的第二个或者说是后面那一个select

（5）union result：union之后的结果

（6）dependent unoin：unoin 中的第二个或随后的 select 查询，依赖于外部查询的结果集

（7）dependent subquery：子查询中的第一个 select 查询，依赖于外部 查询的结果集

（8）derived：衍生表（5.7版本中不存在这一个）

#### 3、table

通常是表名，或者表的别名，或者一个为查询产生临时表的标示符（如派生表、子查询、集合）

#### 4、partitions

使用的哪些分区（对于非分区表值为null），在5.5版本中需要加上explain partitions select ...

#### 5.type

（1）const：表中最多有一个匹配行，const用于比较primary key 或者unique索引。因为只匹配一行数据，所以很快

（2）eq_ref：唯一性索引扫描，对于每个来自于前面的表的记录，从该表中读取唯一一行

（3）ref：非唯一性索引扫描，对于每个来自于前面的表的记录，所有匹配的行从这张表取出

（4）ref_or_null：类似于ref，但是可以搜索包含null值的行，例如：select * from student where address='xxx' or address is null，需要在address建立索引。

（5）index_merge：查询语句用到了一张表的多个索引时，mysql会将多个索引合并到一起

（6）range：按指定范围（如in、<、>、between and等，但是前提是此字段要建立索引）来检索，很常见。如：select * from student where id < 5，id上要有索引。

（7）index：全”表“扫描，但是是在索引树中扫描，通常比ALL快，因为索引文件通常比数据文件小，index扫描是通过二叉树的方式扫描，而all是扫描物理表。（也就是说虽然all和index都是读全表，但index是从索引中读取的，而all是从硬盘中读的）。例如：select name from student，但name字段上需要建立索引，也就是查询的字段属于索引中的字段。

（8）all：全表扫描，扫描完整的物理表，此时就需要优化了。

这8种type代表性能由好到差，一般优化可达range或者ref

#### 6.possible_keys

指出 MySQL 能在该表中可能使用的索引，显示的是索引的名称，多个索引用逗号隔开，如果没有，则为null。

#### 7.key

MySQL决定实际用到的索引，显示的是索引的名称，多个索引用逗号隔开，如果没有，则为null。

#### 8.key_len

当用到组合索引的时候判断索引是否完全用上。

> 实例：假设student表中有id int,name char(20) DEFAULT NULL,address varchar(20) DEFAULT NULL,remark varchar(20) NOT NULL 字段，建立的索引是 idx_address_remark（在address和remark上建立的组合索引）
>
> 查询的sql是：select * from student where address='深圳' and remark='java coder'，此时，执行计划中的key_len是 （20*3+1+2）+ （20*3+2）= 125，那么这个是怎么得来的呢？
>
> 解析：20表示建表的时候 varchar(20) ，3表示utf8字符集占用3个字节，1表示MySQL需要1个字节表示null，2表示变长字段（varchar是变长的）。  
>
> 假设drop掉刚刚建立的索引，新建索引 idx_name_address（在name和address上建立组合索引）
>
> 查询的sql是：select * from student where name='xbq' and address='深圳'，此时，执行计划中的key_len是 （20*3+1）+ （20*3+2）= 123，那么这个值是怎么得来的呢？
>
> 解析：20表示建表的时候 char(20) ，3表示utf8字符集占用3个字节，1表示MySQL需要1个字节标识null，即 20*3+1，后面的同样的道理。

key_len只计算where条件用到的索引长度，而排序和分组就算用到了索引，也不会计算到key_len中。

计算key_len的公式：

> varchr(10)变长字段且允许NULL = 10 * ( character set：utf8=3,gbk=2,latin1=1) + 1(NULL) + 2(变长字段)
>
> varchr(10)变长字段且不允许NULL = 10 *( character set：utf8=3,gbk=2,latin1=1) + 2(变长字段)
>
> char(10)固定字段且允许NULL = 10 * ( character set：utf8=3,gbk=2,latin1=1)+1(NULL)
>
> char(10)固定字段且不允许NULL = 10 * ( character set：utf8=3,gbk=2,latin1=1)

#### 9.ref

显示索引的哪一列被使用了，如果可能的话，是一个常数

#### 10.rows

显示mysql认为执行查询时必须要返回的行数，可结合type和key分析，没有用上索引的情况下，会全表扫描。rows的值越小越好，说明检索的数据少

#### 11.filtered

给出了一个百分比的值，这个百分比值和rows列的值一起使用，可以估计出那些将要和执行计划中的前一个表（前一个表就是指id列的值比当前表的id小的表）进行连接的行的数目。

这一列在5.5版本中，需要加上 explain extended select ....。

#### 12.extra

此字段显示一些额外的信息，但是此字段的部分值具有优化的参考意义。

（1）using where：表示查询使用了where 语句来处理结果

（2）using index：表示使用了覆盖索引。这个值重点强调了只需要使用索引就可以满足查询表的要求，不需要直接访问表数据。

（3）using join buffer：这个值强调了在获取连接条件时没有使用索引，并且需要连接缓冲区来存储中间结果。如果出现了这个值，那应该注意，根据查询的具体情况可能需要添加索引来改进性能

（4）using filesort：这是 order by 语句的结果。这可能是一个CPU密集型的过程。using filesort表示出现了文件内排序，表示很不好的现象，必须要优化，特别是大表，可以通过选择合适的索引来改进性能，用索引来为查询结果排序。

（5）using temporary：mysql需要创建一张临时表来保存中间结果。 也就是说，需要先把数据放到临时表中，然后从临时表中获取需要的数据。出现这种临时表，也是必须需要优化的地方，特别是数据量大的情况。两个常见的原因是在来自不同表的列上使用了distinct，或者使用了不同的 order by 和 group by 列。

### sql索引优化

对查询进行优化，应尽量避免全表扫描，首先应考虑在 where 及 order by 涉及的列上建立索引。

#### 1、避免在where子句中使用!=或<或>操作符，否则将引擎放弃使用索引而进行全表扫描。

![image-20220209110259285.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/201dd710-d7d3-48c3-a5bd-49d822b470b4.png)

但该效果仅仅是让该字段索引失效，比如以上面的例子来说，如果有以order_status为首的联合索引，那么该联合索引不能命中，但如果还有其他单列索引，是仍然可以命中索引的。下面的语句都是一样的，失效只是导致当前索引失效。

![image-20220209110604150.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/c9b93726-dc7d-4736-8ea4-8f3c85ba93d7.png)

#### 2、尽量避免在字段开头模糊查询，会导致数据库引擎放弃索引进行全表扫描。

```text
SELECT * FROM sys_job_log WHERE job_name like '%HandleCustomerDayAmountChangeJob%'
```

优化方式：尽量在字段后面使用模糊查询。如下：

```text
SELECT * FROM sys_job_log WHERE job_name like 'HandleCustomerDayAmountChangeJob%'
```

如果需求是要在前面使用模糊查询，

- 使用FullText全文索引，用match against 检索
- 数据量较大的情况，建议引用ElasticSearch、solr，亿级数据量检索速度秒级

下面是全文索引

![image-20220209115051398.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/33976da2-3b7b-4aeb-96cf-cc306d43a392.png)

---分割线---

![image-20220209115205488.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/d99cde70-8a8d-4a3e-aebf-360eba779271.png)

#### 3、关于IN和OR和IS NULL。

mysql在8.0.13的版本已经优化了关于IN、OR和IS NULL的索引命中

![image-20220209193523227.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/2e52fd21-b787-45c9-ae59-032cf26c4d18.png)

#### 4、尽量避免使用NOT IN或IS NOT NULL等否定关键字，会导致数据库引擎放弃索引进行全表扫描。

![image-20220209193723159.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/6923c283-2fef-4306-8283-57064e15200b.png)

---分割线---

![image-20220209194131592.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/2e3ed807-0c96-42c4-9849-cd4db5b14b65.png)

#### 5、尽量避免在where条件中等号的左侧进行表达式、函数操作，会导致数据库引擎放弃索引进行全表扫描。

![image-20220209195726228.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/cf55939c-496a-41c3-80cd-986e6eadd9d2.png)

---分割线---

![image-20220209195653187.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/697a7095-96f7-4449-98fd-771e9ff2270b.png)

#### 6、where条件中没有联合索引的前置项导致联合索引完全失效

![image-20220209202643790.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/b6db75f0-65fc-4cdb-bf27-a90c76ee4d52.png)

**结果2**![image-20220209202741884.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/b06b832e-f570-4a15-9c07-47e1c6a13bc8.png)

**结果3**![image-20220209202748838.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/82c2e67d-73bd-4244-b274-011a48d3d096.png)

**结果4**![image-20220209202757561.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/cf55f3ad-ed60-46aa-af2d-c37e66649449.png)

**结果5**![image-20220209202803738.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/d0127e0b-cd47-457e-92af-9c1ffbca8648.png)

最左匹配法则，where条件中必须包括联合索引最左边的一项，否则无法命中索引。

这里需要注意的是mysql中会内部优化where的条件，来匹配最佳的索引。

#### 7、隐式类型转换造成不使用索引

如下SQL语句由于索引对列类型为varchar，但给定的值为数值，涉及隐式类型转换，造成不能正确走索引。

![image-20220209203710764.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/1ca7a281-74e6-4f4e-a18e-3340fd9d413b.png)

![image-20220209203728796.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2022-02-09/022fb57a-dabb-4ffc-a49e-3e059f3df368.png)

--------未完成----------

### 语句优化

tips：

1、避免将常更新的字段设置为索引

2、避免将区分度不大的字段设置为索引

(String), true(Boolean), true(Boolean), true(Boolean), true(Boolean), true(Boolean), 2022-02-11 11:59:10.379(Timestamp), 1446769938234671105(Long), 1491400438823596033(Long)
2022-02-11 11:59:10.412 DEBUG 24732 --- [http-nio-8065-exec-8] c.y.e.mapper.ArticleMapper.updateById    : <==    Updates: 1
2022-02-11 11:59:10.417 DEBUG 24732 --- [http-nio-8065-exec-8] c.y.e.m.A.deleteReally                   : ==>  Preparing: DELETE FROM article_tag_relation WHERE article_id = ?
2022-02-11 11:59:10.418 DEBUG 24732 --- [http-nio-8065-exec-8] c.y.e.m.A.deleteReally                   : ==> Parameters: 1491400438823596033(Long)
2022-02-11 11:59:10.435 DEBUG 24732 --- [http-nio-8065-exec-8] c.y.e.m.A.deleteReally                   : <==    Updates: 1
2022-02-11 11:59:10.439 DEBUG 24732 --- [http-nio-8065-exec-8] c.y.e.m.ArticleTagRelationMapper.insert  : ==>  Preparing: INSERT INTO article_tag_relation ( id, article_id, tag_id, deleted ) VALUES ( ?, ?, ?, ? )
2022-02-11 11:59:10.439 DEBUG 24732 --- [http-nio-8065-exec-8] c.y.e.m.ArticleTagRelationMapper.insert  : ==> Parameters: 1491985134388989954(Long), 1491400438823596033(Long), 1491400438878121985(Long), 0(Integer)
2022-02-11 11:59:10.598 DEBUG 24732 --- [http-nio-8065-exec-7] c.y.e.mapper.TagMapper.listTagDTO        : ==>  Preparing: select * from tag where deleted = 0
2022-02-11 11:59:10.598 DEBUG 24732 --- [http-nio-8065-exec-7] c.y.e.mapper.TagMapper.listTagDTO        : ==> Parameters: 
2022-02-11 11:59:10.608 DEBUG 24732 --- [http-nio-8065-exec-7] c.y.e.mapper.TagMapper.listTagDTO        : <==      Total: 7
2022-02-11 11:59:12.268 DEBUG 24732 --- [http-nio-8065-exec-5] c.y.e.m.A.pageArticleDTOWeb_mpCount      : ==>  Preparing: SELECT COUNT(*) FROM article WHERE deleted = 0 AND status = ?
2022-02-11 11:59:12.268 DEBUG 24732 --- [http-nio-8065-exec-5] c.y.e.m.A.pageArticleDTOWeb_mpCount      : ==> Parameters: 1(Integer)
2022-02-11 11:59:12.276 DEBUG 24732 --- [http-nio-8065-exec-5] c.y.e.m.A.pageArticleDTOWeb_mpCount      : <==      Total: 1
2022-02-11 11:59:12.277 DEBUG 24732 --- [http-nio-8065-exec-5] c.y.e.m.ArticleMapper.pageArticleDTOWeb  : ==>  Preparing: SELECT id, title, create_time, update_time FROM article where deleted = 0 and status = ? ORDER BY update_time DESC LIMIT ?
2022-02-11 11:59:12.277 DEBUG 24732 --- [http-nio-8065-exec-5] c.y.e.m.ArticleMapper.pageArticleDTOWeb  : ==> Parameters: 1(Integer), 8(Long)
2022-02-11 11:59:12.287 DEBUG 24732 --- [http-nio-8065-exec-5] c.y.e.m.ArticleMapper.pageArticleDTOWeb  : <==      Total: 8
2022-02-11 11:59:12.288 DEBUG 24732 --- [http-nio-8065-exec-5] c.y.e.mapper.TagMapper.listTagVo         : ==>  Preparing: SELECT t1.*, COUNT( t3.id ) article_counts FROM tag t1 LEFT JOIN article_tag_relation t2 ON t1.id = t2.tag_id LEFT JOIN article t3 ON t2.article_id = t3.id WHERE t1.deleted = 0 AND t2.deleted = 0 AND t3.STATUS GROUP BY t1.id
2022-02-11 11:59:12.288 DEBUG 24732 --- [http-nio-8065-exec-5] c.y.e.mapper.TagMapper.listTagVo         : ==> Parameters: 
2022-02-11 11:59:12.297 DEBUG 24732 --- [http-nio-8065-exec-5] c.y.e.mapper.TagMapper.listTagVo         : <==      Total: 5
2022-02-11 11:59:12.298 DEBUG 24732 --- [http-nio-8065-exec-5] c.y.e.m.CategoryMapper.listCategoryVo    : ==>  Preparing: SELECT t1.id, t1.NAME, COUNT(t2.category_id) article_counts FROM category t1 LEFT JOIN article t2 ON t1.id = t2.category_id and t2.deleted = 0 and t2.status != 0 where t1.deleted = 0 GROUP BY t1.id
2022-02-11 11:59:12.298 DEBUG 24732 --- [http-nio-8065-exec-5] c.y.e.m.CategoryMapper.listCategoryVo    : ==> Parameters: 
2022-02-11 11:59:12.306 DEBUG 24732 --- [http-nio-8065-exec-5] c.y.e.m.CategoryMapper.listCategoryVo    : <==      Total: 2
2022-02-11 11:59:12.307 DEBUG 24732 --- [http-nio-8065-exec-5] c.y.e.mapper.UserMapper.getUser          : ==>  Preparing: SELECT * FROM user WHERE deleted = 0 AND id = ?
2022-02-11 11:59:12.307 DEBUG 24732 --- [http-nio-8065-exec-5] c.y.e.mapper.UserMapper.getUser          : ==> Parameters: 1(Long)
2022-02-11 11:59:12.316 DEBUG 24732 --- [http-nio-8065-exec-5] c.y.e.mapper.UserMapper.getUser          : <==      Total: 1
2022-02-11 11:59:12.317 DEBUG 24732 --- [http-nio-8065-exec-5] c.y.e.mapper.UserMapper.updateById       : ==>  Preparing: UPDATE user SET qq=?, email=?, wechat=?, avatar=?, banner=?, nickname=?, user_signature=?, views=?, create_time=?, update_time=? WHERE id=? AND deleted=0
2022-02-11 11:59:12.317 DEBUG 24732 --- [http-nio-8065-exec-5] c.y.e.mapper.UserMapper.updateById       : ==> Parameters: 2044619214(String), lyric0926@163.com(String), 17805428855(String), https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2021-07-11/6a879a71-ca69-4ef3-a5f7-e8c6f67dd0b7Screenshot_20210424_204530.jpg(String), https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2021-09-16/fdb78008-7df7-4224-8d3a-c97268b9b066wallhaven-v95om8.jpg(String), lyric(String), 许多事情我们的确无能为力。
但即使如此我们也不该因此消沉不是吗？
乐观起来，忘记伤痛继续前行远比一次又一次揭开伤疤要好得多！(String), 14595(Integer), 2020-09-02 15:16:51.0(Timestamp), 2022-02-11 11:59:12.317(Timestamp), 1(Long)
2022-02-11 11:59:12.335 DEBUG 24732 --- [http-nio-8065-exec-5] c.y.e.mapper.UserMapper.updateById       : <==    Updates: 1
2022-02-11 11:59:12.335 DEBUG 24732 --- [http-nio-8065-exec-5] c.y.e.m.T.listTechnicalSupportVo         : ==>  Preparing: SELECT * FROM technical_support where deleted = 0
2022-02-11 11:59:12.335 DEBUG 24732 --- [http-nio-8065-exec-5] c.y.e.m.T.listTechnicalSupportVo         : ==> Parameters: 
2022-02-11 11:59:12.344 DEBUG 24732 --- [http-nio-8065-exec-5] c.y.e.m.T.listTechnicalSupportVo         : <==      Total: 3

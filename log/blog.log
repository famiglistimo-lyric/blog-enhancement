2021-12-01 17:58:47.437  INFO 26184 --- [restartedMain] c.yi.enhancement.EnhancementApplication  : Starting EnhancementApplication using Java 1.8.0_261 on LAPTOP-P12KV1HJ with PID 26184 (D:\blog-enhancement\target\classes started by lyric in D:\blog-enhancement)
2021-12-01 17:58:47.444 DEBUG 26184 --- [restartedMain] c.yi.enhancement.EnhancementApplication  : Running with Spring Boot v2.5.0, Spring v5.3.7
2021-12-01 17:58:47.445  INFO 26184 --- [restartedMain] c.yi.enhancement.EnhancementApplication  : No active profile set, falling back to default profiles: default
2021-12-01 17:58:47.503  INFO 26184 --- [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in D:\maven-repository\blog-enhancement-maven\blog-enhancement-repository\com\sun\xml\bind\jaxb-impl\2.2.3-1\jaxb-impl-2.2.3-1.jar referenced one or more files that do not exist: file:/D:/maven-repository/blog-enhancement-maven/blog-enhancement-repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jaxb-api.jar,file:/D:/maven-repository/blog-enhancement-maven/blog-enhancement-repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/activation.jar,file:/D:/maven-repository/blog-enhancement-maven/blog-enhancement-repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jsr173_1.0_api.jar,file:/D:/maven-repository/blog-enhancement-maven/blog-enhancement-repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jaxb1-impl.jar
2021-12-01 17:58:47.504  INFO 26184 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-12-01 17:58:47.504  INFO 26184 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-12-01 17:58:48.970  INFO 26184 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 80 (http)
2021-12-01 17:58:48.981  INFO 26184 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-12-01 17:58:48.981  INFO 26184 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.46]
2021-12-01 17:58:49.070  INFO 26184 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-12-01 17:58:49.070  INFO 26184 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1565 ms
2021-12-01 17:58:49.652  WARN 26184 --- [restartedMain] c.b.m.core.metadata.TableInfoHelper      : Can not find table primary key in Class: "com.yi.enhancement.model.entity.UserAvatar".
2021-12-01 17:58:51.383  INFO 26184 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-12-01 17:58:52.086  INFO 26184 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-12-01 17:58:53.238  INFO 26184 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 80 (http) with context path ''
2021-12-01 17:58:53.865  INFO 26184 --- [restartedMain] c.yi.enhancement.EnhancementApplication  : Started EnhancementApplication in 7.479 seconds (JVM running for 9.497)
2021-12-01 17:58:53.867  INFO 26184 --- [restartedMain] o.s.b.a.ApplicationAvailabilityBean      : Application availability state LivenessState changed to CORRECT
2021-12-01 17:58:53.869  INFO 26184 --- [restartedMain] o.s.b.a.ApplicationAvailabilityBean      : Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
2021-12-01 17:59:05.968  INFO 29608 --- [restartedMain] c.yi.enhancement.EnhancementApplication  : Starting EnhancementApplication using Java 1.8.0_261 on LAPTOP-P12KV1HJ with PID 29608 (D:\blog-enhancement\target\classes started by lyric in D:\blog-enhancement)
2021-12-01 17:59:05.972 DEBUG 29608 --- [restartedMain] c.yi.enhancement.EnhancementApplication  : Running with Spring Boot v2.5.0, Spring v5.3.7
2021-12-01 17:59:05.972  INFO 29608 --- [restartedMain] c.yi.enhancement.EnhancementApplication  : No active profile set, falling back to default profiles: default
2021-12-01 17:59:06.038  INFO 29608 --- [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in D:\maven-repository\blog-enhancement-maven\blog-enhancement-repository\com\sun\xml\bind\jaxb-impl\2.2.3-1\jaxb-impl-2.2.3-1.jar referenced one or more files that do not exist: file:/D:/maven-repository/blog-enhancement-maven/blog-enhancement-repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jaxb-api.jar,file:/D:/maven-repository/blog-enhancement-maven/blog-enhancement-repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/activation.jar,file:/D:/maven-repository/blog-enhancement-maven/blog-enhancement-repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jsr173_1.0_api.jar,file:/D:/maven-repository/blog-enhancement-maven/blog-enhancement-repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jaxb1-impl.jar
2021-12-01 17:59:06.038  INFO 29608 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-12-01 17:59:06.039  INFO 29608 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-12-01 17:59:08.195  INFO 29608 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8070 (http)
2021-12-01 17:59:08.207  INFO 29608 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-12-01 17:59:08.208  INFO 29608 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.46]
2021-12-01 17:59:08.309  INFO 29608 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-12-01 17:59:08.309  INFO 29608 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2269 ms
2021-12-01 17:59:08.903  WARN 29608 --- [restartedMain] c.b.m.core.metadata.TableInfoHelper      : Can not find table primary key in Class: "com.yi.enhancement.model.entity.UserAvatar".
2021-12-01 17:59:10.541  INFO 29608 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-12-01 17:59:11.226  INFO 29608 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-12-01 17:59:12.282  INFO 29608 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8070 (http) with context path ''
2021-12-01 17:59:12.778  INFO 29608 --- [restartedMain] c.yi.enhancement.EnhancementApplication  : Started EnhancementApplication in 8.286 seconds (JVM running for 9.854)
2021-12-01 17:59:12.780  INFO 29608 --- [restartedMain] o.s.b.a.ApplicationAvailabilityBean      : Application availability state LivenessState changed to CORRECT
2021-12-01 17:59:12.782  INFO 29608 --- [restartedMain] o.s.b.a.ApplicationAvailabilityBean      : Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
2021-12-01 18:00:21.524  INFO 29608 --- [http-nio-8070-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-12-01 18:00:21.524  INFO 29608 --- [http-nio-8070-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-12-01 18:00:21.525  INFO 29608 --- [http-nio-8070-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2021-12-01 18:00:21.626  INFO 29608 --- [http-nio-8070-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2021-12-01 18:00:21.858  INFO 29608 --- [http-nio-8070-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2021-12-01 18:00:21.867 DEBUG 29608 --- [http-nio-8070-exec-1] c.y.e.m.A.pageArticleDTOWeb_mpCount      : ==>  Preparing: SELECT COUNT(*) FROM article WHERE deleted = 0
2021-12-01 18:00:21.892 DEBUG 29608 --- [http-nio-8070-exec-1] c.y.e.m.A.pageArticleDTOWeb_mpCount      : ==> Parameters: 
2021-12-01 18:00:21.925 DEBUG 29608 --- [http-nio-8070-exec-1] c.y.e.m.A.pageArticleDTOWeb_mpCount      : <==      Total: 1
2021-12-01 18:00:21.937 DEBUG 29608 --- [http-nio-8070-exec-1] c.y.e.m.ArticleMapper.pageArticleDTOWeb  : ==>  Preparing: SELECT id, title, create_time, update_time FROM article where deleted = 0 ORDER BY update_time DESC LIMIT ?
2021-12-01 18:00:21.937 DEBUG 29608 --- [http-nio-8070-exec-1] c.y.e.m.ArticleMapper.pageArticleDTOWeb  : ==> Parameters: 8(Long)
2021-12-01 18:00:21.947 DEBUG 29608 --- [http-nio-8070-exec-1] c.y.e.m.ArticleMapper.pageArticleDTOWeb  : <==      Total: 4
2021-12-01 18:00:21.956 DEBUG 29608 --- [http-nio-8070-exec-1] c.y.e.mapper.TagMapper.listTagVo         : ==>  Preparing: SELECT t1.*, COUNT(t2.article_id) article_counts FROM tag t1 LEFT JOIN article_tag_relation t2 ON t1.id = t2.tag_id and t2.deleted = 0 WHERE t1.deleted = 0 GROUP BY t1.id
2021-12-01 18:00:21.956 DEBUG 29608 --- [http-nio-8070-exec-1] c.y.e.mapper.TagMapper.listTagVo         : ==> Parameters: 
2021-12-01 18:00:21.965 DEBUG 29608 --- [http-nio-8070-exec-1] c.y.e.mapper.TagMapper.listTagVo         : <==      Total: 4
2021-12-01 18:00:21.971 DEBUG 29608 --- [http-nio-8070-exec-1] c.y.e.m.CategoryMapper.listCategoryVo    : ==>  Preparing: SELECT t1.id, t1.NAME, COUNT(t2.category_id) article_counts FROM category t1 LEFT JOIN article t2 ON t1.id = t2.category_id and t2.deleted = 0 where t1.deleted = 0 GROUP BY t1.id
2021-12-01 18:00:21.971 DEBUG 29608 --- [http-nio-8070-exec-1] c.y.e.m.CategoryMapper.listCategoryVo    : ==> Parameters: 
2021-12-01 18:00:21.980 DEBUG 29608 --- [http-nio-8070-exec-1] c.y.e.m.CategoryMapper.listCategoryVo    : <==      Total: 2
2021-12-01 18:00:21.986 DEBUG 29608 --- [http-nio-8070-exec-1] c.y.e.mapper.UserMapper.getUser          : ==>  Preparing: SELECT * FROM user WHERE deleted = 0 AND id = ?
2021-12-01 18:00:21.986 DEBUG 29608 --- [http-nio-8070-exec-1] c.y.e.mapper.UserMapper.getUser          : ==> Parameters: 1(Long)
2021-12-01 18:00:21.995 DEBUG 29608 --- [http-nio-8070-exec-1] c.y.e.mapper.UserMapper.getUser          : <==      Total: 1
2021-12-01 18:00:22.026 DEBUG 29608 --- [http-nio-8070-exec-1] c.y.e.mapper.UserMapper.updateById       : ==>  Preparing: UPDATE user SET qq=?, email=?, wechat=?, avatar=?, banner=?, nickname=?, user_signature=?, views=?, create_time=?, update_time=? WHERE id=? AND deleted=0
2021-12-01 18:00:22.031 DEBUG 29608 --- [http-nio-8070-exec-1] c.y.e.mapper.UserMapper.updateById       : ==> Parameters: 2044619214(String), lyric0926@163.com(String), 17805428855(String), https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2021-07-11/6a879a71-ca69-4ef3-a5f7-e8c6f67dd0b7Screenshot_20210424_204530.jpg(String), https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2021-09-16/fdb78008-7df7-4224-8d3a-c97268b9b066wallhaven-v95om8.jpg(String), lyric(String), 许多事情我们的确无能为力。
但即使如此我们也不该因此消沉不是吗？
乐观起来，忘记伤痛继续前行远比一次又一次揭开伤疤要好得多！(String), 8717(Integer), 2020-09-02 15:16:51.0(Timestamp), 2021-12-01 18:00:22.026(Timestamp), 1(Long)
2021-12-01 18:00:22.047 DEBUG 29608 --- [http-nio-8070-exec-1] c.y.e.mapper.UserMapper.updateById       : <==    Updates: 1
2021-12-01 18:00:22.053 DEBUG 29608 --- [http-nio-8070-exec-1] c.y.e.m.T.listTechnicalSupportVo         : ==>  Preparing: SELECT * FROM technical_support where deleted = 0
2021-12-01 18:00:22.053 DEBUG 29608 --- [http-nio-8070-exec-1] c.y.e.m.T.listTechnicalSupportVo         : ==> Parameters: 
2021-12-01 18:00:22.063 DEBUG 29608 --- [http-nio-8070-exec-1] c.y.e.m.T.listTechnicalSupportVo         : <==      Total: 3
2021-12-01 18:00:25.126 DEBUG 29608 --- [http-nio-8070-exec-6] c.y.e.mapper.UserMapper.getUser          : ==>  Preparing: SELECT * FROM user WHERE deleted = 0 AND id = ?
2021-12-01 18:00:25.127 DEBUG 29608 --- [http-nio-8070-exec-6] c.y.e.mapper.UserMapper.getUser          : ==> Parameters: 1(Long)
2021-12-01 18:00:25.135 DEBUG 29608 --- [http-nio-8070-exec-6] c.y.e.mapper.UserMapper.getUser          : <==      Total: 1
2021-12-01 18:00:25.136 DEBUG 29608 --- [http-nio-8070-exec-6] c.y.e.mapper.ArticleMapper.selectById    : ==>  Preparing: SELECT id,title,content,first_picture,stamp,comments,original,status,recommend,appreciate,views,create_time,update_time,category_id,user_id,deleted FROM article WHERE id=? AND deleted=0
2021-12-01 18:00:25.137 DEBUG 29608 --- [http-nio-8070-exec-6] c.y.e.mapper.ArticleMapper.selectById    : ==> Parameters: 1463756487044231169(Long)
2021-12-01 18:00:25.150 DEBUG 29608 --- [http-nio-8070-exec-6] c.y.e.mapper.ArticleMapper.selectById    : <==      Total: 1
2021-12-01 18:00:25.157 DEBUG 29608 --- [http-nio-8070-exec-6] c.y.e.mapper.ArticleMapper.updateById    : ==>  Preparing: UPDATE article SET title=?, content=?, stamp=?, comments=?, status=?, recommend=?, appreciate=?, views=?, create_time=?, update_time=?, category_id=? WHERE id=? AND deleted=0
2021-12-01 18:00:25.159 DEBUG 29608 --- [http-nio-8070-exec-6] c.y.e.mapper.ArticleMapper.updateById    : ==> Parameters: IO流(String), # 一、IO流的概念

* I/O 即输入Input/ 输出Output的缩写，其实就是计算机调度把各个存储中（包括内存和外部存储）的数据写入写出的过程；
* java中用“流（stream）”来抽象表示这么一个写入写出的功能，封装成一个“类”，都放在java.io这个包里面。
# 二、“流”是什么？
> 通过“流”的形式允许java程序使用相同的方式来访问不同的输入/输出源。stream是从起源（source）到接收的（sink）的有序数据。我们这里把输入/输出源对比成“水桶”，那么流就是“管道”，这个“管道”的粗细、单向性等属性也就是区分了不同“流”的特性。

![image.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2021-11-25/26d46112-01a0-4ccf-8a4e-05828238d9e5.png)
# 三、IO流的分类
可以从三个不同的维度进行分类：

1、按照流的方向（输出输入都是站在程序所在内存的角度划分的）


* 输入流：只能从中读取数据【主要由InputStream和Reader作为基类】
* 输出流：只能向其写入数据【主要由outputStream和Writer作为基类】


在下图中，从磁盘读取数据到内存是输入流，从client读取数据到server是输入流；同样，把内存数据写到磁盘是输出流，把server数据写到client是输出流
![image.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2021-11-25/a896c9c9-1c58-4bf0-a416-5bbd4a64939a.png)
2、按照流的操作颗粒度划分


* 字节流：以字节为单元，可操作任何数据【主要由InputStream和outPutStream作为基类】
* 字符流：以字符为单元，只能操作纯字符数据，比较方便【主要由Reader和Writer作为基类】

3、按照流的角色划分

* 节点流：可以从/向一个特定的IO设备（如磁盘，网络）读/写数据的流，也叫【低级流】
* 处理流：用于对一个已存在的流进行连接和封装，通过封装后的流来实现数据的读/写功能，也叫【高级流】

> 下图中可以看出来，处理流就是在基础的字节流上，进行了封装，增加了特定的功能，使得传输更适合特定的场景。

![image.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2021-11-25/9ae45a94-9703-496c-902a-77530c61a6a9.png)
# 四、流的原理以及一共有多少IO流
1、流的原理解析

> 流其实我们可以想象成一个“水管”，源端和目的端就是两个“水桶”，数据是通过这个“水管”进行流动传输的，以InputStream和Reader为例，水管的每个“水滴”就是具体的数据，如果是字节流，那么一个“水滴”就是一个字节，如果是字符流，那么一个“水滴”就是一个字符。

当创建一个流对象的时候，如fis=new FileInputStream（“…\xx\xx.txt”），记录指针来表示当前正准备从哪个“水滴”开始读取，每当程序从InputStream或者Reader里面取出一个或者多个“水滴”后，记录指针自定向后移动；除此之外，InputStream和Reader里面都提供了一些方法来控制记录指针的移动。

![image.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2021-11-25/4ad00953-1ae0-44fc-ad54-65baa6f91520.png)
如果是处理流的话，就相当于在这个水管上面装了一些“控制阀门”，最终用户只要关心“阀门”具备的能力就行。
![image.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2021-11-25/87a481cd-8f55-45fc-9fd6-a811f422b204.png)
2、java中所有流汇总
![image.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2021-11-25/27987854-7ec7-48f5-af0b-d57041641155.png)
上图中我们可以看到，InputStream/Reader，OutputStream/Writer 是整个I/O体系的基类，他们本身不能用来创建实例，下面开始逐一对常见的I/O类进行示例
# 五、常见的IO流示例
1、访问操作文件（FileInputStream/FileReader ，FileOutputStream/FileWriter）
FileInputStream中包含以使用FileInputStream为例，类中包含的属性及方法，我们可以在线查看jdk的api文档http://tool.oschina.net/apidocs/apidoc?api=jdk-zh），下面只是截图了FileInputStream的构造方法：
![image.png](https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2021-11-25/7d7a039a-af42-443b-a9ff-21f86c525381.png)
1) 使用FileInputStream，从文件读取数据
```java
public class TestFileImportStream {

    public static void main(String[] args) {
        int b = 0;
        FileInputStream in = null;
        try {
            in = new FileInputStream("C:\\Users\\lyric\\Desktop\\java\\Teacher.java");
        } catch (FileNotFoundException e) {
            System.out.println("file is not found");
            System.exit(-1);
        }
        try {
            long num = 0;
            while ((b = in.read()) != -1) {
                System.out.print((char) b);
                num++;
            }
            in.close();
            System.out.println();
            System.out.println("共读取了" + num + "个字节");
        } catch (IOException e) {
            System.out.println("IO异常，读取失败");
            System.exit(-1);
        }
    }
}
```
2) 使用FileOutputStream，往文件里写数据
```java
public class TextFileOutputStream {

    public static void main(String[] args) {
        int b = 0;
        FileInputStream in = null;
        FileOutputStream out = null;
        try {
            in = new FileInputStream("C:\\Users\\lyric\\Desktop\\java\\Teacher.java");
            out = new FileOutputStream("C:\\Users\\lyric\\Desktop\\java\\Test.java");
            // 目标文件内容不覆盖↓
            // out = new FileOutputStream("C:\\Users\\lyric\\Desktop\\java\\Test.java",true);
        } catch (FileNotFoundException e) {
            System.out.println("file is not found");
            System.exit(-1);
        }
        try {
            while ((b = in.read()) != -1) {
                out.write(b);
            }
            in.close();
            out.close();
        } catch (IOException e) {
            System.out.println("IO异常，读取失败");
            System.exit(-1);
        }
        System.out.println("文件复制完成");
    }
}
```

也可以使用FileReader、FileWriter

2、缓存流的使用（BufferedInputStream/BufferedOutputStream，BufferedReader/BufferedWriter）
```java
public class TestBufferStream {
    public static void main(String[] args) throws IOException {
        BufferedInputStream bis = null;
        BufferedOutputStream bos = null;
        try {
            FileInputStream fis = new FileInputStream("C:\\Users\\lyric\\Desktop\\java\\Teacher.java");
            FileOutputStream fos = new FileOutputStream("C:\\Users\\lyric\\Desktop\\java\\Test2.java");
            bis = new BufferedInputStream(fis);
            bos = new BufferedOutputStream(fos);
            byte[] b = new byte[1024];
            int off = 0;
            while ((off = bis.read(b)) > 0) {
                bos.write(b, 0, off);
            }
            bis.close();
            bos.close();
        } catch (IOException e) {
            e.printStackTrace();
        } finally {
            bis.close();
            bos.close();
        }
    }
}
```
从代码中可以看到，他们最基本的其实也是FileInputStream和FileOutputStream，在这个“流”的基础上，又加了缓存的功能流BufferedInputStream和BufferedOutputStream。

3、转换流的使用（InputStreamReader/OutputStreamWriter）

转化流就是用来转化的。读取键盘输入的每一行内容，并写入到文本中，直到遇到over行结束输入。
```java
public class TransStreamTest {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new FileWriter("C:\\Users\\lyric\\Desktop\\java\\test.txt"));
        String line = null;
        while ((line = br.readLine()) != null) {
            if ("over".contentEquals(line)) {
                break;
            }
            bw.write(line);
            bw.newLine();
            bw.flush();
        }
        bw.close();
        br.close();
    }
}
```
readLine()方法在进行读取一行时，只有遇到回车(\r)或者换行符(\n)才会返回读取结果，这就是“读取一行的意思”。

4、对象流的使用（FileInputStream/ObjectOutputStream）
前面说了字节和字符流，包括封装在他们上面的处理流，那么我们想，在程序设计的过程中，我们都是用类和对象来描述定义，能不能直接把对象进行传输。答案当然是肯定的，对象流其实就是一种特殊的处理流水，也是在基础的字节流上去作封装。【可以应用于游戏存盘】下面程序使用一个对象流，把对象直接写到文件中
```java
public class ObjectStreamTest {
    public static void main(String[] args) throws Exception {
        try {
            Person person = new Person("Jeccica", 26);
            FileOutputStream fos = new FileOutputStream("C:\\Users\\lyric\\Desktop\\java\\test.txt");
            ObjectOutputStream oos = new ObjectOutputStream(fos);
            oos.writeObject(person);
            oos.flush();
            oos.close();
        } catch (IOException e) {
            e.printStackTrace();
        }

        FileInputStream fis = new FileInputStream("C:\\Users\\lyric\\Desktop\\java\\test.txt");
        ObjectInputStream ois = new ObjectInputStream(fis);
        Person person2 = (Person) ois.readObject();
        System.out.println(person2.name + "的年龄为" + person2.age);
    }

}

class Person implements Serializable {
    String name;
    int age;

    Person(String name, int age) {
        this.name = name;
        this.age = age;
    }
}
```
5、字节数组流的使用（ByteArrayInputStream/ByteArrayOutputStream）【通常结合数据流DataInputStream/DataOutputStream】

我们说了常见的节点流和常见的处理流等，平时我们都是针对文件的操作，然后带上缓冲的节点流进行处理，但有时候为了提升效率，我们发现频繁的读写文件并不是太好，那么于是出现了字节数组流，即存放在内存中，因此有称之为内存流；其中字节数组流也一种节点流；除了节点流外，我们也将学习另外一种处理流，即数据流。数据处理流是用于针对数据类型传输处理的，是一种处理流，即是在节点流之上的增强处理，一般用于序列化和反序列化的时候用到。
```java
public class DataStream {
    public static void main(String[] args) {
        // 创建字节数组流，同时会在内存里面创建数组
        ByteArrayOutputStream baos = new ByteArrayOutputStream();
        // 对字节数组流外封装成数据处理流
        DataOutputStream dos = new DataOutputStream(baos);
        try {
            // 利用数据流里面的写入方法，写一个Double类型的随机数据
            dos.writeDouble(Math.random());
            dos.writeBoolean(true);
            // toByteArray()方法是创建一个新分配的字节数组。数组的大小和当前输出流的大小。这里指的是baos这个字节数组
            ByteArrayInputStream bias = new ByteArrayInputStream(baos.toByteArray());
            System.out.println(bias.available());
            DataInputStream dis = new DataInputStream(bias);
            System.out.println(dis.readDouble());
            System.out.println(dis.readBoolean());
            dos.close();
            dis.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
```
作者：李白写代码

链接：https://zhuanlan.zhihu.com/p/98094713

来源：知乎(String), false(Boolean), true(Boolean), true(Boolean), true(Boolean), true(Boolean), 66(Integer), 2021-11-25 14:28:36.0(Timestamp), 2021-11-26 18:11:01.0(Timestamp), 1446769938234671105(Long), 1463756487044231169(Long)
2021-12-01 18:00:25.176 DEBUG 29608 --- [http-nio-8070-exec-6] c.y.e.mapper.ArticleMapper.updateById    : <==    Updates: 1
2021-12-01 18:00:25.239 DEBUG 29608 --- [http-nio-8070-exec-6] c.y.e.m.CategoryMapper.listCategoryVo    : ==>  Preparing: SELECT t1.id, t1.NAME, COUNT(t2.category_id) article_counts FROM category t1 LEFT JOIN article t2 ON t1.id = t2.category_id and t2.deleted = 0 where t1.deleted = 0 GROUP BY t1.id
2021-12-01 18:00:25.239 DEBUG 29608 --- [http-nio-8070-exec-6] c.y.e.m.CategoryMapper.listCategoryVo    : ==> Parameters: 
2021-12-01 18:00:25.247 DEBUG 29608 --- [http-nio-8070-exec-6] c.y.e.m.CategoryMapper.listCategoryVo    : <==      Total: 2
2021-12-01 18:00:25.250 DEBUG 29608 --- [http-nio-8070-exec-6] c.y.e.mapper.ArticleMapper.selectById    : ==>  Preparing: SELECT id,title,content,first_picture,stamp,comments,original,status,recommend,appreciate,views,create_time,update_time,category_id,user_id,deleted FROM article WHERE id=? AND deleted=0
2021-12-01 18:00:25.251 DEBUG 29608 --- [http-nio-8070-exec-6] c.y.e.mapper.ArticleMapper.selectById    : ==> Parameters: 1463756487044231169(Long)
2021-12-01 18:00:25.259 DEBUG 29608 --- [http-nio-8070-exec-6] c.y.e.mapper.ArticleMapper.selectById    : <==      Total: 1
2021-12-01 18:00:25.260 DEBUG 29608 --- [http-nio-8070-exec-6] c.y.e.mapper.TagMapper.listTagVo         : ==>  Preparing: SELECT t1.*, COUNT(t2.article_id) article_counts FROM tag t1 LEFT JOIN article_tag_relation t2 ON t1.id = t2.tag_id and t2.deleted = 0 WHERE t1.deleted = 0 GROUP BY t1.id
2021-12-01 18:00:25.260 DEBUG 29608 --- [http-nio-8070-exec-6] c.y.e.mapper.TagMapper.listTagVo         : ==> Parameters: 
2021-12-01 18:00:25.269 DEBUG 29608 --- [http-nio-8070-exec-6] c.y.e.mapper.TagMapper.listTagVo         : <==      Total: 4
2021-12-01 18:00:25.276 DEBUG 29608 --- [http-nio-8070-exec-6] .e.m.A.listArticleTagRelationByArticleId : ==>  Preparing: SELECT t1.article_id, t1.tag_id, t2.NAME tag_name FROM `article_tag_relation` t1 LEFT JOIN tag t2 ON t1.tag_id = t2.id where t1.deleted = 0 and t1.article_id = ?
2021-12-01 18:00:25.276 DEBUG 29608 --- [http-nio-8070-exec-6] .e.m.A.listArticleTagRelationByArticleId : ==> Parameters: 1463756487044231169(Long)
2021-12-01 18:00:25.285 DEBUG 29608 --- [http-nio-8070-exec-6] .e.m.A.listArticleTagRelationByArticleId : <==      Total: 1
2021-12-01 18:00:25.565 DEBUG 29608 --- [http-nio-8070-exec-9] c.y.e.m.C.listCommentByArticleId         : ==>  Preparing: SELECT id, avatar, nickname, content, email, website, manager_comment, article_id, parent_comment_id, browser_name, browser_version, os_name, create_time, deleted FROM comment WHERE article_id = ? AND deleted = 0 ORDER BY create_time desc
2021-12-01 18:00:25.566 DEBUG 29608 --- [http-nio-8070-exec-9] c.y.e.m.C.listCommentByArticleId         : ==> Parameters: 1463756487044231169(Long)
2021-12-01 18:00:25.573 DEBUG 29608 --- [http-nio-8070-exec-9] c.y.e.m.C.listCommentByArticleId         : <==      Total: 0
2021-12-01 18:00:29.611 DEBUG 29608 --- [http-nio-8070-exec-2] c.y.e.m.A.pageArticleDTOWeb_mpCount      : ==>  Preparing: SELECT COUNT(*) FROM article WHERE deleted = 0
2021-12-01 18:00:29.613 DEBUG 29608 --- [http-nio-8070-exec-2] c.y.e.m.A.pageArticleDTOWeb_mpCount      : ==> Parameters: 
2021-12-01 18:00:29.620 DEBUG 29608 --- [http-nio-8070-exec-2] c.y.e.m.A.pageArticleDTOWeb_mpCount      : <==      Total: 1
2021-12-01 18:00:29.622 DEBUG 29608 --- [http-nio-8070-exec-2] c.y.e.m.ArticleMapper.pageArticleDTOWeb  : ==>  Preparing: SELECT id, title, create_time, update_time FROM article where deleted = 0 ORDER BY update_time DESC LIMIT ?
2021-12-01 18:00:29.622 DEBUG 29608 --- [http-nio-8070-exec-2] c.y.e.m.ArticleMapper.pageArticleDTOWeb  : ==> Parameters: 8(Long)
2021-12-01 18:00:29.631 DEBUG 29608 --- [http-nio-8070-exec-2] c.y.e.m.ArticleMapper.pageArticleDTOWeb  : <==      Total: 4
2021-12-01 18:00:29.632 DEBUG 29608 --- [http-nio-8070-exec-2] c.y.e.mapper.TagMapper.listTagVo         : ==>  Preparing: SELECT t1.*, COUNT(t2.article_id) article_counts FROM tag t1 LEFT JOIN article_tag_relation t2 ON t1.id = t2.tag_id and t2.deleted = 0 WHERE t1.deleted = 0 GROUP BY t1.id
2021-12-01 18:00:29.633 DEBUG 29608 --- [http-nio-8070-exec-2] c.y.e.mapper.TagMapper.listTagVo         : ==> Parameters: 
2021-12-01 18:00:29.641 DEBUG 29608 --- [http-nio-8070-exec-2] c.y.e.mapper.TagMapper.listTagVo         : <==      Total: 4
2021-12-01 18:00:29.642 DEBUG 29608 --- [http-nio-8070-exec-2] c.y.e.m.CategoryMapper.listCategoryVo    : ==>  Preparing: SELECT t1.id, t1.NAME, COUNT(t2.category_id) article_counts FROM category t1 LEFT JOIN article t2 ON t1.id = t2.category_id and t2.deleted = 0 where t1.deleted = 0 GROUP BY t1.id
2021-12-01 18:00:29.642 DEBUG 29608 --- [http-nio-8070-exec-2] c.y.e.m.CategoryMapper.listCategoryVo    : ==> Parameters: 
2021-12-01 18:00:29.649 DEBUG 29608 --- [http-nio-8070-exec-2] c.y.e.m.CategoryMapper.listCategoryVo    : <==      Total: 2
2021-12-01 18:00:29.650 DEBUG 29608 --- [http-nio-8070-exec-2] c.y.e.mapper.UserMapper.getUser          : ==>  Preparing: SELECT * FROM user WHERE deleted = 0 AND id = ?
2021-12-01 18:00:29.651 DEBUG 29608 --- [http-nio-8070-exec-2] c.y.e.mapper.UserMapper.getUser          : ==> Parameters: 1(Long)
2021-12-01 18:00:29.659 DEBUG 29608 --- [http-nio-8070-exec-2] c.y.e.mapper.UserMapper.getUser          : <==      Total: 1
2021-12-01 18:00:29.660 DEBUG 29608 --- [http-nio-8070-exec-2] c.y.e.mapper.UserMapper.updateById       : ==>  Preparing: UPDATE user SET qq=?, email=?, wechat=?, avatar=?, banner=?, nickname=?, user_signature=?, views=?, create_time=?, update_time=? WHERE id=? AND deleted=0
2021-12-01 18:00:29.661 DEBUG 29608 --- [http-nio-8070-exec-2] c.y.e.mapper.UserMapper.updateById       : ==> Parameters: 2044619214(String), lyric0926@163.com(String), 17805428855(String), https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2021-07-11/6a879a71-ca69-4ef3-a5f7-e8c6f67dd0b7Screenshot_20210424_204530.jpg(String), https://yi-blog.oss-cn-hangzhou.aliyuncs.com/2021-09-16/fdb78008-7df7-4224-8d3a-c97268b9b066wallhaven-v95om8.jpg(String), lyric(String), 许多事情我们的确无能为力。
但即使如此我们也不该因此消沉不是吗？
乐观起来，忘记伤痛继续前行远比一次又一次揭开伤疤要好得多！(String), 8718(Integer), 2020-09-02 15:16:51.0(Timestamp), 2021-12-01 18:00:29.66(Timestamp), 1(Long)
2021-12-01 18:00:29.676 DEBUG 29608 --- [http-nio-8070-exec-2] c.y.e.mapper.UserMapper.updateById       : <==    Updates: 1
2021-12-01 18:00:29.677 DEBUG 29608 --- [http-nio-8070-exec-2] c.y.e.m.T.listTechnicalSupportVo         : ==>  Preparing: SELECT * FROM technical_support where deleted = 0
2021-12-01 18:00:29.677 DEBUG 29608 --- [http-nio-8070-exec-2] c.y.e.m.T.listTechnicalSupportVo         : ==> Parameters: 
2021-12-01 18:00:29.686 DEBUG 29608 --- [http-nio-8070-exec-2] c.y.e.m.T.listTechnicalSupportVo         : <==      Total: 3
2021-12-01 18:00:46.271  INFO 29608 --- [Thread-18] o.s.b.a.ApplicationAvailabilityBean      : Application availability state ReadinessState changed from ACCEPTING_TRAFFIC to REFUSING_TRAFFIC
2021-12-01 18:00:46.272  INFO 29608 --- [Thread-18] c.a.alicloud.oss.OssApplicationListener  : 1 OSSClients will be shutdown soon
2021-12-01 18:00:46.273  INFO 29608 --- [Thread-18] c.a.alicloud.oss.OssApplicationListener  : shutdown ossClient: ossClient
2021-12-01 18:00:46.746  INFO 29608 --- [Thread-18] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2021-12-01 18:00:46.760  INFO 29608 --- [Thread-18] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2021-12-01 18:00:47.590  INFO 29608 --- [restartedMain] c.yi.enhancement.EnhancementApplication  : Starting EnhancementApplication using Java 1.8.0_261 on LAPTOP-P12KV1HJ with PID 29608 (D:\blog-enhancement\target\classes started by lyric in D:\blog-enhancement)
2021-12-01 18:00:47.591 DEBUG 29608 --- [restartedMain] c.yi.enhancement.EnhancementApplication  : Running with Spring Boot v2.5.0, Spring v5.3.7
2021-12-01 18:00:47.591  INFO 29608 --- [restartedMain] c.yi.enhancement.EnhancementApplication  : No active profile set, falling back to default profiles: default
2021-12-01 18:00:48.056  INFO 29608 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 80 (http)
2021-12-01 18:00:48.057  INFO 29608 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-12-01 18:00:48.057  INFO 29608 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.46]
2021-12-01 18:00:48.074  INFO 29608 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-12-01 18:00:48.074  INFO 29608 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 479 ms
2021-12-01 18:00:48.301  WARN 29608 --- [restartedMain] c.b.m.core.metadata.TableInfoHelper      : Can not find table primary key in Class: "com.yi.enhancement.model.entity.UserAvatar".
2021-12-01 18:00:48.610  WARN 14428 --- [main] ory$DuplicateJsonObjectContextCustomizer : 

Found multiple occurrences of org.json.JSONObject on the class path:

	jar:file:/D:/maven-repository/blog-enhancement-maven/blog-enhancement-repository/org/json/json/20170516/json-20170516.jar!/org/json/JSONObject.class
	jar:file:/D:/maven-repository/blog-enhancement-maven/blog-enhancement-repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar!/org/json/JSONObject.class

You may wish to exclude one of them to ensure predictable runtime behavior

2021-12-01 18:00:48.663  INFO 14428 --- [main] c.y.e.EnhancementApplicationTests        : Starting EnhancementApplicationTests using Java 1.8.0_261 on LAPTOP-P12KV1HJ with PID 14428 (started by lyric in D:\blog-enhancement)
2021-12-01 18:00:48.664 DEBUG 14428 --- [main] c.y.e.EnhancementApplicationTests        : Running with Spring Boot v2.5.0, Spring v5.3.7
2021-12-01 18:00:48.666  INFO 14428 --- [main] c.y.e.EnhancementApplicationTests        : No active profile set, falling back to default profiles: default
2021-12-01 18:00:49.052  INFO 29608 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-12-01 18:00:49.157  INFO 29608 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-12-01 18:00:50.414  INFO 29608 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 80 (http) with context path ''
2021-12-01 18:00:50.923  WARN 14428 --- [main] c.b.m.core.metadata.TableInfoHelper      : Can not find table primary key in Class: "com.yi.enhancement.model.entity.UserAvatar".
2021-12-01 18:00:51.052  INFO 29608 --- [restartedMain] c.yi.enhancement.EnhancementApplication  : Started EnhancementApplication in 4.132 seconds (JVM running for 108.129)
2021-12-01 18:00:51.053  INFO 29608 --- [restartedMain] o.s.b.a.ApplicationAvailabilityBean      : Application availability state LivenessState changed to CORRECT
2021-12-01 18:00:51.055  INFO 29608 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2021-12-01 18:00:51.056  INFO 29608 --- [restartedMain] o.s.b.a.ApplicationAvailabilityBean      : Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
2021-12-01 18:00:53.742  INFO 14428 --- [main] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-12-01 18:00:56.035  INFO 14428 --- [main] c.y.e.EnhancementApplicationTests        : Started EnhancementApplicationTests in 8.517 seconds (JVM running for 9.888)
2021-12-01 18:00:56.037  INFO 14428 --- [main] o.s.b.a.ApplicationAvailabilityBean      : Application availability state LivenessState changed to CORRECT
2021-12-01 18:00:56.039  INFO 14428 --- [main] o.s.b.a.ApplicationAvailabilityBean      : Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
